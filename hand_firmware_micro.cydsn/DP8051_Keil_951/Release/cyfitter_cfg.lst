C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Release\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(NDE
                    -BUG) WL(2) PR(.\DP8051_Keil_951\Release/cyfitter_cfg.lst) CD OT(8,SPEED) DF(CYAPP_ECC_OFFSET=1216) OJ(.\DP8051_Keil_951\
                    -Release\cyfitter_cfg.obj)

line level    source

*** MESSAGE C286 IN LINE 0 OF (null): license limits optimization to level 5
   1          
   2          /*******************************************************************************
   3          * File Name: cyfitter_cfg.c
   4          * 
   5          * PSoC Creator  4.1 Update 1
   6          *
   7          * Description:
   8          * This file contains device initialization code.
   9          * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
  10          * This file is automatically generated by PSoC Creator.
  11          *
  12          ********************************************************************************
  13          * Copyright (c) 2007-2017 Cypress Semiconductor.  All rights reserved.
  14          * You may use this file only in accordance with the license, terms, conditions, 
  15          * disclaimers, and limitations in the end user license agreement accompanying 
  16          * the software package with which this file was provided.
  17          ********************************************************************************/
  18          
  19          #include <string.h>
  20          #include "cytypes.h"
  21          #include "cydevice_trm.h"
  22          #include "cyfitter.h"
  23          #include "CyLib.h"
  24          #include "cyfitter_cfg.h"
  25          
  26          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  27          
  28          
  29          #if defined(__C51__) || defined(__CX51__)
  30                  #define CYPACKED
  31                  #define CYPACKED_ATTR
  32                  #define CYALIGNED
  33                  #define DMAINITSEC
  34              #define CY_CFG_UNUSED
  35                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  36          
  37          
  38          
  39                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  40                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  41                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  42          #else
                      #error Unsupported toolchain
              #endif
  45          
  46          
  47          
  48          
  49          /* Clock startup error codes                                                   */
  50          #define CYCLOCKSTART_NO_ERROR    0u
  51          #define CYCLOCKSTART_XTAL_ERROR  1u
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 2   

  52          #define CYCLOCKSTART_32KHZ_ERROR 2u
  53          #define CYCLOCKSTART_PLL_ERROR   3u
  54          #define CYCLOCKSTART_FLL_ERROR   4u
  55          
  56          
  57          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  58          /*******************************************************************************
  59          * Function Name: CyClockStartupError
  60          ********************************************************************************
  61          * Summary:
  62          *  If an error is encountered during clock configuration (crystal startup error,
  63          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  64          *  the customer, this function will stop in an infinite loop.
  65          *
  66          * Parameters:
  67          *   void
  68          *
  69          * Return:
  70          *   void
  71          *
  72          *******************************************************************************/
  73          CY_CFG_UNUSED
  74          static void CyClockStartupError(uint8 errorCode);
  75          CY_CFG_UNUSED
  76          static void CyClockStartupError(uint8 errorCode)
  77          {
  78   1          /* To remove the compiler warning if errorCode not used. */
  79   1      #if defined(CY_PSOC3) && (CY_PSOC3)
  80   1          errorCode = errorCode;
  81   1      #else
                  (void)errorCode;
              #endif /* CY_PSOC3 */
  84   1      
  85   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  86   1          /* we will end up here to allow the customer to implement something to  */
  87   1          /* deal with the clock condition.                                       */
  88   1      
  89   1      #ifdef CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK
                  CY_CFG_Clock_Startup_ErrorCallback();
              #else
  92   1          /*  If not using CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK, place your clock startup code here. */
  93   1          /* `#START CyClockStartupError` */
  94   1      
  95   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  96   1          /* we will end up here to allow the customer to implement something to  */
  97   1          /* deal with the clock condition.                                       */
  98   1      
  99   1          /* `#END` */
 100   1      
 101   1          while(1) {}
 102   1      #endif /* CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK */
 103   1      }
 104          #endif
 105          
 106          /* IDMUX Address: CYREG_IDMUX_DRQ_CTL0 Size (bytes): 6 */
 107          #define BS_IDMUX_VAL ((const uint8 CYFAR *)(0x00080000u + CYAPP_ECC_OFFSET))
 108          
 109          /* IOPORT_0 Address: CYDEV_PRTDSI_PRT0_BASE Size (bytes): 7 */
 110          #define BS_IOPORT_0_VAL ((const uint8 CYFAR *)(0x00080008u + CYAPP_ECC_OFFSET))
 111          
 112          /* IOPORT_1 Address: CYDEV_PRTDSI_PRT1_BASE Size (bytes): 7 */
 113          #define BS_IOPORT_1_VAL ((const uint8 CYFAR *)(0x00080010u + CYAPP_ECC_OFFSET))
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 3   

 114          
 115          /* IOPORT_2 Address: CYDEV_PRTDSI_PRT2_BASE Size (bytes): 7 */
 116          #define BS_IOPORT_2_VAL ((const uint8 CYFAR *)(0x00080018u + CYAPP_ECC_OFFSET))
 117          
 118          /* IOPORT_7 Address: CYDEV_PRTDSI_PRT12_BASE Size (bytes): 6 */
 119          #define BS_IOPORT_7_VAL ((const uint8 CYFAR *)(0x00080020u + CYAPP_ECC_OFFSET))
 120          
 121          /* IOPORT_8 Address: CYDEV_PRTDSI_PRT15_BASE Size (bytes): 7 */
 122          #define BS_IOPORT_8_VAL ((const uint8 CYFAR *)(0x00080028u + CYAPP_ECC_OFFSET))
 123          
 124          /* IDMUX_IRQ Address: CYREG_IDMUX_IRQ_CTL0 Size (bytes): 8 */
 125          #define BS_IDMUX_IRQ_VAL ((const uint8 CYFAR *)(0x00080030u + CYAPP_ECC_OFFSET))
 126          
 127          /* TMR0 Address: CYREG_TMR0_CFG0 Size (bytes): 12 */
 128          #define BS_TMR0_VAL ((const uint8 CYFAR *)(0x00080038u + CYAPP_ECC_OFFSET))
 129          
 130          /* TMR1 Address: CYREG_TMR1_CFG0 Size (bytes): 12 */
 131          #define BS_TMR1_VAL ((const uint8 CYFAR *)(0x00080044u + CYAPP_ECC_OFFSET))
 132          
 133          /* UDB_1_4_1_CONFIG Address: CYDEV_UCFG_B0_P1_U0_BASE Size (bytes): 128 */
 134          #define BS_UDB_1_4_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080050u + CYAPP_ECC_OFFSET))
 135          
 136          /* UDB_1_4_0_CONFIG Address: CYDEV_UCFG_B0_P1_U1_BASE Size (bytes): 128 */
 137          #define BS_UDB_1_4_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000800D0u + CYAPP_ECC_OFFSET))
 138          
 139          /* UDB_1_3_0_CONFIG Address: CYDEV_UCFG_B0_P2_U0_BASE Size (bytes): 128 */
 140          #define BS_UDB_1_3_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080150u + CYAPP_ECC_OFFSET))
 141          
 142          /* UDB_1_3_1_CONFIG Address: CYDEV_UCFG_B0_P2_U1_BASE Size (bytes): 128 */
 143          #define BS_UDB_1_3_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000801D0u + CYAPP_ECC_OFFSET))
 144          
 145          /* UDB_1_2_1_CONFIG Address: CYDEV_UCFG_B0_P3_U0_BASE Size (bytes): 128 */
 146          #define BS_UDB_1_2_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080250u + CYAPP_ECC_OFFSET))
 147          
 148          /* UDB_1_2_0_CONFIG Address: CYDEV_UCFG_B0_P3_U1_BASE Size (bytes): 128 */
 149          #define BS_UDB_1_2_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000802D0u + CYAPP_ECC_OFFSET))
 150          
 151          /* UDB_0_2_1_CONFIG Address: CYDEV_UCFG_B0_P4_U0_BASE Size (bytes): 128 */
 152          #define BS_UDB_0_2_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080350u + CYAPP_ECC_OFFSET))
 153          
 154          /* UDB_0_2_0_CONFIG Address: CYDEV_UCFG_B0_P4_U1_BASE Size (bytes): 128 */
 155          #define BS_UDB_0_2_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000803D0u + CYAPP_ECC_OFFSET))
 156          
 157          /* UDB_0_3_0_CONFIG Address: CYDEV_UCFG_B0_P5_U0_BASE Size (bytes): 128 */
 158          #define BS_UDB_0_3_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080450u + CYAPP_ECC_OFFSET))
 159          
 160          /* UDB_0_3_1_CONFIG Address: CYDEV_UCFG_B0_P5_U1_BASE Size (bytes): 128 */
 161          #define BS_UDB_0_3_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000804D0u + CYAPP_ECC_OFFSET))
 162          
 163          /* UDB_0_4_1_CONFIG Address: CYDEV_UCFG_B0_P6_U0_BASE Size (bytes): 128 */
 164          #define BS_UDB_0_4_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080550u + CYAPP_ECC_OFFSET))
 165          
 166          /* UDB_0_4_0_CONFIG Address: CYDEV_UCFG_B0_P6_U1_BASE Size (bytes): 128 */
 167          #define BS_UDB_0_4_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000805D0u + CYAPP_ECC_OFFSET))
 168          
 169          /* UDB_1_0_0_CONFIG Address: CYDEV_UCFG_B1_P2_U0_BASE Size (bytes): 128 */
 170          #define BS_UDB_1_0_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080650u + CYAPP_ECC_OFFSET))
 171          
 172          /* UDB_1_0_1_CONFIG Address: CYDEV_UCFG_B1_P2_U1_BASE Size (bytes): 128 */
 173          #define BS_UDB_1_0_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000806D0u + CYAPP_ECC_OFFSET))
 174          
 175          /* UDB_1_1_1_CONFIG Address: CYDEV_UCFG_B1_P3_U0_BASE Size (bytes): 128 */
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 4   

 176          #define BS_UDB_1_1_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080750u + CYAPP_ECC_OFFSET))
 177          
 178          /* UDB_1_1_0_CONFIG Address: CYDEV_UCFG_B1_P3_U1_BASE Size (bytes): 128 */
 179          #define BS_UDB_1_1_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000807D0u + CYAPP_ECC_OFFSET))
 180          
 181          /* UDB_0_1_1_CONFIG Address: CYDEV_UCFG_B1_P4_U0_BASE Size (bytes): 128 */
 182          #define BS_UDB_0_1_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080850u + CYAPP_ECC_OFFSET))
 183          
 184          /* UDB_0_1_0_CONFIG Address: CYDEV_UCFG_B1_P4_U1_BASE Size (bytes): 128 */
 185          #define BS_UDB_0_1_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000808D0u + CYAPP_ECC_OFFSET))
 186          
 187          /* UDB_0_0_0_CONFIG Address: CYDEV_UCFG_B1_P5_U0_BASE Size (bytes): 128 */
 188          #define BS_UDB_0_0_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080950u + CYAPP_ECC_OFFSET))
 189          
 190          /* UDB_0_0_1_CONFIG Address: CYDEV_UCFG_B1_P5_U1_BASE Size (bytes): 128 */
 191          #define BS_UDB_0_0_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000809D0u + CYAPP_ECC_OFFSET))
 192          
 193          /* UWRK_B0_WRK_STATCTL_BITS Address: CYDEV_UWRK_UWRK8_B0_BASE + 0x00000070u Size (bytes): 32 */
 194          #define BS_UWRK_B0_WRK_STATCTL_BITS_VAL ((const uint8 CYFAR *)(0x00080A50u + CYAPP_ECC_OFFSET))
 195          
 196          /* UWRK_B1_WRK_STATCTL_BITS Address: CYDEV_UWRK_UWRK8_B1_BASE + 0x00000070u Size (bytes): 32 */
 197          #define BS_UWRK_B1_WRK_STATCTL_BITS_VAL ((const uint8 CYFAR *)(0x00080A70u + CYAPP_ECC_OFFSET))
 198          
 199          /* UCFG_BCTL1 Address: CYREG_BCTL1_MDCLK_EN Size (bytes): 16 */
 200          #define BS_UCFG_BCTL1_VAL ((const uint8 CYFAR *)(0x00080A90u + CYAPP_ECC_OFFSET))
 201          
 202          /* UCFG_BCTL0 Address: CYREG_BCTL0_MDCLK_EN Size (bytes): 16 */
 203          #define BS_UCFG_BCTL0_VAL ((const uint8 CYFAR *)(0x00080AA0u + CYAPP_ECC_OFFSET))
 204          
 205          /* DSI0_0_HV_ROUTING Address: CYDEV_UCFG_DSI13_BASE + 0x00000080u Size (bytes): 128 */
 206          #define BS_DSI0_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080AB0u + CYAPP_ECC_OFFSET))
 207          
 208          /* DSISWITCH_0_1 Address: CYDEV_UCFG_DSI12_BASE Size (bytes): 128 */
 209          #define BS_DSISWITCH_0_1_VAL ((const uint8 CYFAR *)(0x00080B30u + CYAPP_ECC_OFFSET))
 210          
 211          /* DSI0_1_HV_ROUTING Address: CYDEV_UCFG_DSI12_BASE + 0x00000080u Size (bytes): 128 */
 212          #define BS_DSI0_1_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080BB0u + CYAPP_ECC_OFFSET))
 213          
 214          /* DSI0_2_HV_ROUTING Address: CYDEV_UCFG_DSI7_BASE + 0x00000080u Size (bytes): 128 */
 215          #define BS_DSI0_2_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080C30u + CYAPP_ECC_OFFSET))
 216          
 217          /* DSISWITCH_0_3 Address: CYDEV_UCFG_DSI6_BASE Size (bytes): 128 */
 218          #define BS_DSISWITCH_0_3_VAL ((const uint8 CYFAR *)(0x00080CB0u + CYAPP_ECC_OFFSET))
 219          
 220          /* DSI0_3_HV_ROUTING Address: CYDEV_UCFG_DSI6_BASE + 0x00000080u Size (bytes): 128 */
 221          #define BS_DSI0_3_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080D30u + CYAPP_ECC_OFFSET))
 222          
 223          /* DSISWITCH_0_4 Address: CYDEV_UCFG_DSI5_BASE Size (bytes): 128 */
 224          #define BS_DSISWITCH_0_4_VAL ((const uint8 CYFAR *)(0x00080DB0u + CYAPP_ECC_OFFSET))
 225          
 226          /* DSI0_4_HV_ROUTING Address: CYDEV_UCFG_DSI5_BASE + 0x00000080u Size (bytes): 128 */
 227          #define BS_DSI0_4_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080E30u + CYAPP_ECC_OFFSET))
 228          
 229          /* DSISWITCH_0_5 Address: CYDEV_UCFG_DSI4_BASE Size (bytes): 128 */
 230          #define BS_DSISWITCH_0_5_VAL ((const uint8 CYFAR *)(0x00080EB0u + CYAPP_ECC_OFFSET))
 231          
 232          /* DSI0_5_HV_ROUTING Address: CYDEV_UCFG_DSI4_BASE + 0x00000080u Size (bytes): 128 */
 233          #define BS_DSI0_5_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080F30u + CYAPP_ECC_OFFSET))
 234          
 235          /* UDBSWITCH_0_0 Address: CYDEV_UCFG_B1_P5_ROUTE_BASE Size (bytes): 128 */
 236          #define BS_UDBSWITCH_0_0_VAL ((const uint8 CYFAR *)(0x00080FB0u + CYAPP_ECC_OFFSET))
 237          
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 5   

 238          /* UDB_1_0_HV_ROUTING Address: CYDEV_UCFG_B1_P5_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 239          #define BS_UDB_1_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081030u + CYAPP_ECC_OFFSET))
 240          
 241          /* UDBSWITCH_1_0 Address: CYDEV_UCFG_B1_P2_ROUTE_BASE Size (bytes): 128 */
 242          #define BS_UDBSWITCH_1_0_VAL ((const uint8 CYFAR *)(0x000810B0u + CYAPP_ECC_OFFSET))
 243          
 244          /* UDB_2_0_HV_ROUTING Address: CYDEV_UCFG_B1_P2_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 245          #define BS_UDB_2_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081130u + CYAPP_ECC_OFFSET))
 246          
 247          /* UDBSWITCH_0_1 Address: CYDEV_UCFG_B1_P4_ROUTE_BASE Size (bytes): 128 */
 248          #define BS_UDBSWITCH_0_1_VAL ((const uint8 CYFAR *)(0x000811B0u + CYAPP_ECC_OFFSET))
 249          
 250          /* UDB_1_1_HV_ROUTING Address: CYDEV_UCFG_B1_P4_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 251          #define BS_UDB_1_1_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081230u + CYAPP_ECC_OFFSET))
 252          
 253          /* UDBSWITCH_1_1 Address: CYDEV_UCFG_B1_P3_ROUTE_BASE Size (bytes): 128 */
 254          #define BS_UDBSWITCH_1_1_VAL ((const uint8 CYFAR *)(0x000812B0u + CYAPP_ECC_OFFSET))
 255          
 256          /* UDB_2_1_HV_ROUTING Address: CYDEV_UCFG_B1_P3_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 257          #define BS_UDB_2_1_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081330u + CYAPP_ECC_OFFSET))
 258          
 259          /* UDBSWITCH_0_2 Address: CYDEV_UCFG_B0_P4_ROUTE_BASE Size (bytes): 128 */
 260          #define BS_UDBSWITCH_0_2_VAL ((const uint8 CYFAR *)(0x000813B0u + CYAPP_ECC_OFFSET))
 261          
 262          /* UDB_1_2_HV_ROUTING Address: CYDEV_UCFG_B0_P4_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 263          #define BS_UDB_1_2_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081430u + CYAPP_ECC_OFFSET))
 264          
 265          /* UDBSWITCH_1_2 Address: CYDEV_UCFG_B0_P3_ROUTE_BASE Size (bytes): 128 */
 266          #define BS_UDBSWITCH_1_2_VAL ((const uint8 CYFAR *)(0x000814B0u + CYAPP_ECC_OFFSET))
 267          
 268          /* UDB_2_2_HV_ROUTING Address: CYDEV_UCFG_B0_P3_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 269          #define BS_UDB_2_2_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081530u + CYAPP_ECC_OFFSET))
 270          
 271          /* UDBSWITCH_0_3 Address: CYDEV_UCFG_B0_P5_ROUTE_BASE Size (bytes): 128 */
 272          #define BS_UDBSWITCH_0_3_VAL ((const uint8 CYFAR *)(0x000815B0u + CYAPP_ECC_OFFSET))
 273          
 274          /* UDB_1_3_HV_ROUTING Address: CYDEV_UCFG_B0_P5_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 275          #define BS_UDB_1_3_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081630u + CYAPP_ECC_OFFSET))
 276          
 277          /* UDBSWITCH_1_3 Address: CYDEV_UCFG_B0_P2_ROUTE_BASE Size (bytes): 128 */
 278          #define BS_UDBSWITCH_1_3_VAL ((const uint8 CYFAR *)(0x000816B0u + CYAPP_ECC_OFFSET))
 279          
 280          /* UDB_2_3_HV_ROUTING Address: CYDEV_UCFG_B0_P2_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 281          #define BS_UDB_2_3_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081730u + CYAPP_ECC_OFFSET))
 282          
 283          /* UDBSWITCH_0_4 Address: CYDEV_UCFG_B0_P6_ROUTE_BASE Size (bytes): 128 */
 284          #define BS_UDBSWITCH_0_4_VAL ((const uint8 CYFAR *)(0x000817B0u + CYAPP_ECC_OFFSET))
 285          
 286          /* UDB_1_4_HV_ROUTING Address: CYDEV_UCFG_B0_P6_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 287          #define BS_UDB_1_4_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081830u + CYAPP_ECC_OFFSET))
 288          
 289          /* UDBSWITCH_1_4 Address: CYDEV_UCFG_B0_P1_ROUTE_BASE Size (bytes): 128 */
 290          #define BS_UDBSWITCH_1_4_VAL ((const uint8 CYFAR *)(0x000818B0u + CYAPP_ECC_OFFSET))
 291          
 292          /* UDB_2_4_HV_ROUTING Address: CYDEV_UCFG_B0_P1_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 293          #define BS_UDB_2_4_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081930u + CYAPP_ECC_OFFSET))
 294          
 295          /* DSISWITCH_1_0 Address: CYDEV_UCFG_DSI9_BASE Size (bytes): 128 */
 296          #define BS_DSISWITCH_1_0_VAL ((const uint8 CYFAR *)(0x000819B0u + CYAPP_ECC_OFFSET))
 297          
 298          /* DSI3_0_HV_ROUTING Address: CYDEV_UCFG_DSI9_BASE + 0x00000080u Size (bytes): 128 */
 299          #define BS_DSI3_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081A30u + CYAPP_ECC_OFFSET))
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 6   

 300          
 301          /* DSISWITCH_1_1 Address: CYDEV_UCFG_DSI8_BASE Size (bytes): 128 */
 302          #define BS_DSISWITCH_1_1_VAL ((const uint8 CYFAR *)(0x00081AB0u + CYAPP_ECC_OFFSET))
 303          
 304          /* IOPINS0_0 Address: CYREG_PRT0_DM0 Size (bytes): 8 */
 305          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)(0x00081B30u + CYAPP_ECC_OFFSET))
 306          
 307          /* CYDEV_CLKDIST_ACFG0_CFG0 Address: CYREG_CLKDIST_ACFG0_CFG0 Size (bytes): 4 */
 308          #define BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL ((const uint8 CYFAR *)(0x00081B38u + CYAPP_ECC_OFFSET))
 309          
 310          
 311          /*******************************************************************************
 312          * Function Name: cfg_dma_init
 313          ********************************************************************************
 314          * Summary:
 315          *  This function is used to copy device configuration data from constant values
 316          *  stored in memory into the proper chip configuration registers using DMA.  It
 317          *  pulls data out of the CFG_TD_LISTs to know exactly how/what to configure.
 318          *
 319          * Parameters:  
 320          *   void
 321          *
 322          * Return:
 323          *   void
 324          *
 325          *******************************************************************************/
 326          static void cfg_dma_init(void);
 327          static void cfg_dma_init(void)
 328          {
 329   1              /* TD structure for big-endian systems. Requires 2-byte endian swap */
 330   1              CYPACKED struct td_t {
 331   1                      uint16 size;
 332   1                      uint8 flags;
 333   1                      uint8 next_td_ptr;
 334   1                      uint16 src;
 335   1                      uint16 dest;
 336   1              } CYPACKED_ATTR;
 337   1      
 338   1              /* DSI3_1_HV_ROUTING Address: CYDEV_UCFG_DSI8_BASE + 0x00000080u Size (bytes): 128 */
 339   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_1_HV_ROUTING_VAL[] = {
 340   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 341   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 342   1                      0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x40u, 0x00u, 0x00u,
             - 0x00u, 
 343   1                      0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 344   1                      0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 345   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x60u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 346   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x20u,
             - 0x00u, 
 347   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 348   1      
 349   1              /* DSISWITCH_1_2 Address: CYDEV_UCFG_DSI3_BASE Size (bytes): 128 */
 350   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_2_VAL[] = {
 351   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 352   1                      0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 7   

             - 0x00u, 
 353   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 354   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 355   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 356   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 357   1                      0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 358   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 359   1      
 360   1              /* DSI3_2_HV_ROUTING Address: CYDEV_UCFG_DSI3_BASE + 0x00000080u Size (bytes): 128 */
 361   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_2_HV_ROUTING_VAL[] = {
 362   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 363   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 364   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u,
             - 0x00u, 
 365   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 366   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 367   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xC0u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 368   1                      0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 369   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 370   1      
 371   1              /* DSISWITCH_1_3 Address: CYDEV_UCFG_DSI2_BASE Size (bytes): 128 */
 372   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_3_VAL[] = {
 373   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 374   1                      0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 375   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 376   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 377   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u,
             - 0x00u, 
 378   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 379   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 380   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 381   1      
 382   1              /* DSI3_3_HV_ROUTING Address: CYDEV_UCFG_DSI2_BASE + 0x00000080u Size (bytes): 128 */
 383   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_3_HV_ROUTING_VAL[] = {
 384   1                      0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x01u, 
 385   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x10u, 0x00u, 0x00u,
             - 0x02u, 
 386   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 387   1                      0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 8   

 388   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 389   1                      0x00u, 0x00u, 0x20u, 0x00u, 0x40u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 390   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 391   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 392   1      
 393   1              /* DSISWITCH_1_4 Address: CYDEV_UCFG_DSI1_BASE Size (bytes): 128 */
 394   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_4_VAL[] = {
 395   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 396   1                      0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 397   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 398   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 399   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 400   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x02u, 
 401   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 402   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 403   1      
 404   1              /* DSI3_4_HV_ROUTING Address: CYDEV_UCFG_DSI1_BASE + 0x00000080u Size (bytes): 128 */
 405   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_4_HV_ROUTING_VAL[] = {
 406   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 407   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 408   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 409   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 410   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 411   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 412   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 413   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 414   1      
 415   1              /* DSISWITCH_1_5 Address: CYDEV_UCFG_DSI0_BASE Size (bytes): 128 */
 416   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_5_VAL[] = {
 417   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 418   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 419   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 420   1                      0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 421   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 422   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 423   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 9   

             - 0x00u, 
 424   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 425   1      
 426   1              /* DSI3_5_HV_ROUTING Address: CYDEV_UCFG_DSI0_BASE + 0x00000080u Size (bytes): 128 */
 427   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_5_HV_ROUTING_VAL[] = {
 428   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 429   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 430   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 431   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 432   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x30u, 0x00u, 0x00u,
             - 0x00u, 
 433   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 434   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 435   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 436   1      
 437   1              /* PHUB_CH1_CFGMEM_CFG0/1 initialization data */
 438   1              DMAINITSEC static const uint8 CYCODE CH1_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u
             -, 0x00u };
 439   1      
 440   1              /* PHUB_CH2_CFGMEM_CFG0/1 initialization data */
 441   1              DMAINITSEC static const uint8 CYCODE CH2_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u
             -, 0x00u };
 442   1      
 443   1              /* PHUB_CH4_CFGMEM_CFG0/1 initialization data */
 444   1              DMAINITSEC static const uint8 CYCODE CH4_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x01u
             -, 0x00u };
 445   1      
 446   1              /* PHUB_CH5_CFGMEM_CFG0/1 initialization data */
 447   1              DMAINITSEC static const uint8 CYCODE CH5_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x00u
             -, 0x00u };
 448   1      
 449   1              /* PHUB_CH6_CFGMEM_CFG0/1 initialization data */
 450   1              DMAINITSEC static const uint8 CYCODE CH6_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x01u
             -, 0x00u };
 451   1      
 452   1              /* Initialization data for each DMA channel's TD registers */
 453   1              DMAINITSEC static const uint8 CYCODE DMA_TD_START_CMD[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x01u };
 454   1      
 455   1              CYALIGNED static uint32 CYXDATA DMA_ZERO_VAL;
 456   1      
 457   1              /* This table holds all of the initialization data necessary for the DMA
 458   1                 process to transfer data from the source location to the destination. */
 459   1              DMAINITSEC static const struct td_t CYCODE CFG_TD_LIST0[] = {
 460   1                      /* Size, Flags, Next, Source, Destination */
 461   1                      { 8u, 0x23u, 0x02u, (uint16)(uint32)(CH1_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM1_CFG0) },      /* TD 1 */
 462   1                      { 8u, 0x23u, 0x03u, (uint16)(uint32)(CH2_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM2_CFG0) },      /* TD 2 */
 463   1                      { 8u, 0x23u, 0x04u, (uint16)(uint32)(CH4_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM4_CFG0) },      /* TD 3 */
 464   1                      { 8u, 0x23u, 0x05u, (uint16)(uint32)(CH5_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM5_CFG0) },      /* TD 4 */
 465   1                      { 8u, 0x23u, 0x06u, (uint16)(uint32)(CH6_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM6_CFG0) },      /* TD 5 */
 466   1                      { 5u, 0x23u, 0x07u, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH1_BASIC_CFG) },   /* TD 6 */
 467   1                      { 5u, 0x23u, 0x08u, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH2_BASIC_CFG) },   /* TD 7 */
 468   1                      { 5u, 0x23u, 0x09u, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH4_BASIC_CFG) },   /* TD 8 */
 469   1                      { 5u, 0x23u, 0x0Au, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH5_BASIC_CFG) },   /* TD 9 */
 470   1                      { 5u, 0x23u, 0xFEu, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH6_BASIC_CFG) },   /* TD 10 *
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 10  

             -/
 471   1                      { 64u, 0x22u, 0xFEu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYREG_PRT3_DR) },        /* TD 11 */
 472   1                      { 512u, 0x22u, 0x0Du, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B0_P0_U0_BASE) },    /* TD 12 */
 473   1                      { 512u, 0x22u, 0x0Eu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B0_P7_U0_BASE) },    /* TD 13 */
 474   1                      { 128u, 0x22u, 0x0Fu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI7_BASE) },        /* TD 14 */
 475   1                      { 128u, 0x22u, 0xFEu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI13_BASE) },       /* TD 15 */
 476   1                      { 128u, 0x23u, 0x11u, (uint16)(uint32)(BS_DSI3_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI8_BASE + 0x0000
             -0080u) },        /* TD 16 */
 477   1                      { 128u, 0x23u, 0x12u, (uint16)(uint32)(BS_DSISWITCH_1_2_VAL), (uint16)(CYDEV_UCFG_DSI3_BASE) }, /* TD 17
             - */
 478   1                      { 128u, 0x23u, 0x13u, (uint16)(uint32)(BS_DSI3_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI3_BASE + 0x0000
             -0080u) },        /* TD 18 */
 479   1                      { 128u, 0x23u, 0x14u, (uint16)(uint32)(BS_DSISWITCH_1_3_VAL), (uint16)(CYDEV_UCFG_DSI2_BASE) }, /* TD 19
             - */
 480   1                      { 128u, 0x23u, 0x15u, (uint16)(uint32)(BS_DSI3_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI2_BASE + 0x0000
             -0080u) },        /* TD 20 */
 481   1                      { 128u, 0x23u, 0x16u, (uint16)(uint32)(BS_DSISWITCH_1_4_VAL), (uint16)(CYDEV_UCFG_DSI1_BASE) }, /* TD 21
             - */
 482   1                      { 128u, 0x23u, 0x17u, (uint16)(uint32)(BS_DSI3_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI1_BASE + 0x0000
             -0080u) },        /* TD 22 */
 483   1                      { 128u, 0x23u, 0x18u, (uint16)(uint32)(BS_DSISWITCH_1_5_VAL), (uint16)(CYDEV_UCFG_DSI0_BASE) }, /* TD 23
             - */
 484   1                      { 128u, 0x23u, 0xFEu, (uint16)(uint32)(BS_DSI3_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI0_BASE + 0x0000
             -0080u) },        /* TD 24 */
 485   1                      { 7u, 0x23u, 0x1Au, (uint16)(uint32)(BS_IOPORT_0_VAL), (uint16)(CYDEV_PRTDSI_PRT0_BASE) },      /* TD 25 */
 486   1                      { 7u, 0x23u, 0x1Bu, (uint16)(uint32)(BS_IOPORT_1_VAL), (uint16)(CYDEV_PRTDSI_PRT1_BASE) },      /* TD 26 */
 487   1                      { 7u, 0x23u, 0x1Cu, (uint16)(uint32)(BS_IOPORT_2_VAL), (uint16)(CYDEV_PRTDSI_PRT2_BASE) },      /* TD 27 */
 488   1                      { 6u, 0x23u, 0x1Du, (uint16)(uint32)(BS_IOPORT_7_VAL), (uint16)(CYDEV_PRTDSI_PRT12_BASE) },     /* TD 28 */
 489   1                      { 7u, 0x23u, 0x1Eu, (uint16)(uint32)(BS_IOPORT_8_VAL), (uint16)(CYDEV_PRTDSI_PRT15_BASE) },     /* TD 29 */
 490   1                      { 12u, 0x23u, 0x1Fu, (uint16)(uint32)(BS_TMR0_VAL), (uint16)(CYREG_TMR0_CFG0) },        /* TD 30 */
 491   1                      { 12u, 0x23u, 0x20u, (uint16)(uint32)(BS_TMR1_VAL), (uint16)(CYREG_TMR1_CFG0) },        /* TD 31 */
 492   1                      { 32u, 0x23u, 0x21u, (uint16)(uint32)(BS_UWRK_B0_WRK_STATCTL_BITS_VAL), (uint16)(CYDEV_UWRK_UWRK8_B0_BAS
             -E + 0x00000070u) },   /* TD 32 */
 493   1                      { 32u, 0x23u, 0xFEu, (uint16)(uint32)(BS_UWRK_B1_WRK_STATCTL_BITS_VAL), (uint16)(CYDEV_UWRK_UWRK8_B1_BAS
             -E + 0x00000070u) },   /* TD 33 */
 494   1                      { 8u, 0x23u, 0x23u, (uint16)(uint32)(BS_IDMUX_IRQ_VAL), (uint16)(CYREG_IDMUX_IRQ_CTL0) },       /* TD 34 */
 495   1                      { 128u, 0x23u, 0x24u, (uint16)(uint32)(BS_UDB_1_4_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P1_U0_BASE) },  /
             -* TD 35 */
 496   1                      { 128u, 0x23u, 0x25u, (uint16)(uint32)(BS_UDB_1_4_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P1_U1_BASE) },  /
             -* TD 36 */
 497   1                      { 128u, 0x23u, 0x26u, (uint16)(uint32)(BS_UDB_1_3_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P2_U0_BASE) },  /
             -* TD 37 */
 498   1                      { 128u, 0x23u, 0x27u, (uint16)(uint32)(BS_UDB_1_3_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P2_U1_BASE) },  /
             -* TD 38 */
 499   1                      { 128u, 0x23u, 0x28u, (uint16)(uint32)(BS_UDB_1_2_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P3_U0_BASE) },  /
             -* TD 39 */
 500   1                      { 128u, 0x23u, 0x29u, (uint16)(uint32)(BS_UDB_1_2_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P3_U1_BASE) },  /
             -* TD 40 */
 501   1                      { 128u, 0x23u, 0x2Au, (uint16)(uint32)(BS_UDB_0_2_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P4_U0_BASE) },  /
             -* TD 41 */
 502   1                      { 128u, 0x23u, 0x2Bu, (uint16)(uint32)(BS_UDB_0_2_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P4_U1_BASE) },  /
             -* TD 42 */
 503   1                      { 128u, 0x23u, 0x2Cu, (uint16)(uint32)(BS_UDB_0_3_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P5_U0_BASE) },  /
             -* TD 43 */
 504   1                      { 128u, 0x23u, 0x2Du, (uint16)(uint32)(BS_UDB_0_3_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P5_U1_BASE) },  /
             -* TD 44 */
 505   1                      { 128u, 0x23u, 0x2Eu, (uint16)(uint32)(BS_UDB_0_4_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P6_U0_BASE) },  /
             -* TD 45 */
 506   1                      { 128u, 0x23u, 0x2Fu, (uint16)(uint32)(BS_UDB_0_4_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P6_U1_BASE) },  /
             -* TD 46 */
 507   1                      { 128u, 0x23u, 0x30u, (uint16)(uint32)(BS_UDB_1_0_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P2_U0_BASE) },  /
             -* TD 47 */
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 11  

 508   1                      { 128u, 0x23u, 0x31u, (uint16)(uint32)(BS_UDB_1_0_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P2_U1_BASE) },  /
             -* TD 48 */
 509   1                      { 128u, 0x23u, 0x32u, (uint16)(uint32)(BS_UDB_1_1_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P3_U0_BASE) },  /
             -* TD 49 */
 510   1                      { 128u, 0x23u, 0x33u, (uint16)(uint32)(BS_UDB_1_1_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P3_U1_BASE) },  /
             -* TD 50 */
 511   1                      { 128u, 0x23u, 0x34u, (uint16)(uint32)(BS_UDB_0_1_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P4_U0_BASE) },  /
             -* TD 51 */
 512   1                      { 128u, 0x23u, 0x35u, (uint16)(uint32)(BS_UDB_0_1_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P4_U1_BASE) },  /
             -* TD 52 */
 513   1                      { 128u, 0x23u, 0x36u, (uint16)(uint32)(BS_UDB_0_0_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P5_U0_BASE) },  /
             -* TD 53 */
 514   1                      { 128u, 0x23u, 0x37u, (uint16)(uint32)(BS_UDB_0_0_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P5_U1_BASE) },  /
             -* TD 54 */
 515   1                      { 16u, 0x23u, 0x38u, (uint16)(uint32)(BS_UCFG_BCTL1_VAL), (uint16)(CYREG_BCTL1_MDCLK_EN) },     /* TD 55 */
 516   1                      { 16u, 0x23u, 0x39u, (uint16)(uint32)(BS_UCFG_BCTL0_VAL), (uint16)(CYREG_BCTL0_MDCLK_EN) },     /* TD 56 */
 517   1                      { 128u, 0x23u, 0x3Au, (uint16)(uint32)(BS_DSI0_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI13_BASE + 0x000
             -00080u) },        /* TD 57 */
 518   1                      { 128u, 0x23u, 0x3Bu, (uint16)(uint32)(BS_DSISWITCH_0_1_VAL), (uint16)(CYDEV_UCFG_DSI12_BASE) },        /* TD 5
             -8 */
 519   1                      { 128u, 0x23u, 0x3Cu, (uint16)(uint32)(BS_DSI0_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI12_BASE + 0x000
             -00080u) },        /* TD 59 */
 520   1                      { 128u, 0x23u, 0x3Du, (uint16)(uint32)(BS_DSI0_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI7_BASE + 0x0000
             -0080u) },        /* TD 60 */
 521   1                      { 128u, 0x23u, 0x3Eu, (uint16)(uint32)(BS_DSISWITCH_0_3_VAL), (uint16)(CYDEV_UCFG_DSI6_BASE) }, /* TD 61
             - */
 522   1                      { 128u, 0x23u, 0x3Fu, (uint16)(uint32)(BS_DSI0_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI6_BASE + 0x0000
             -0080u) },        /* TD 62 */
 523   1                      { 128u, 0x23u, 0x40u, (uint16)(uint32)(BS_DSISWITCH_0_4_VAL), (uint16)(CYDEV_UCFG_DSI5_BASE) }, /* TD 63
             - */
 524   1                      { 128u, 0x23u, 0x41u, (uint16)(uint32)(BS_DSI0_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI5_BASE + 0x0000
             -0080u) },        /* TD 64 */
 525   1                      { 128u, 0x23u, 0x42u, (uint16)(uint32)(BS_DSISWITCH_0_5_VAL), (uint16)(CYDEV_UCFG_DSI4_BASE) }, /* TD 65
             - */
 526   1                      { 128u, 0x23u, 0x43u, (uint16)(uint32)(BS_DSI0_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI4_BASE + 0x0000
             -0080u) },        /* TD 66 */
 527   1                      { 128u, 0x23u, 0x44u, (uint16)(uint32)(BS_UDBSWITCH_0_0_VAL), (uint16)(CYDEV_UCFG_B1_P5_ROUTE_BASE) },  /
             -* TD 67 */
 528   1                      { 128u, 0x23u, 0x45u, (uint16)(uint32)(BS_UDB_1_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P5_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 68 */
 529   1                      { 128u, 0x23u, 0x46u, (uint16)(uint32)(BS_UDBSWITCH_1_0_VAL), (uint16)(CYDEV_UCFG_B1_P2_ROUTE_BASE) },  /
             -* TD 69 */
 530   1                      { 128u, 0x23u, 0x47u, (uint16)(uint32)(BS_UDB_2_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P2_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 70 */
 531   1                      { 128u, 0x23u, 0x48u, (uint16)(uint32)(BS_UDBSWITCH_0_1_VAL), (uint16)(CYDEV_UCFG_B1_P4_ROUTE_BASE) },  /
             -* TD 71 */
 532   1                      { 128u, 0x23u, 0x49u, (uint16)(uint32)(BS_UDB_1_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P4_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 72 */
 533   1                      { 128u, 0x23u, 0x4Au, (uint16)(uint32)(BS_UDBSWITCH_1_1_VAL), (uint16)(CYDEV_UCFG_B1_P3_ROUTE_BASE) },  /
             -* TD 73 */
 534   1                      { 128u, 0x23u, 0x4Bu, (uint16)(uint32)(BS_UDB_2_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P3_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 74 */
 535   1                      { 128u, 0x23u, 0x4Cu, (uint16)(uint32)(BS_UDBSWITCH_0_2_VAL), (uint16)(CYDEV_UCFG_B0_P4_ROUTE_BASE) },  /
             -* TD 75 */
 536   1                      { 128u, 0x23u, 0x4Du, (uint16)(uint32)(BS_UDB_1_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P4_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 76 */
 537   1                      { 128u, 0x23u, 0x4Eu, (uint16)(uint32)(BS_UDBSWITCH_1_2_VAL), (uint16)(CYDEV_UCFG_B0_P3_ROUTE_BASE) },  /
             -* TD 77 */
 538   1                      { 128u, 0x23u, 0x4Fu, (uint16)(uint32)(BS_UDB_2_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P3_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 78 */
 539   1                      { 128u, 0x23u, 0x50u, (uint16)(uint32)(BS_UDBSWITCH_0_3_VAL), (uint16)(CYDEV_UCFG_B0_P5_ROUTE_BASE) },  /
             -* TD 79 */
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 12  

 540   1                      { 128u, 0x23u, 0x51u, (uint16)(uint32)(BS_UDB_1_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P5_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 80 */
 541   1                      { 128u, 0x23u, 0x52u, (uint16)(uint32)(BS_UDBSWITCH_1_3_VAL), (uint16)(CYDEV_UCFG_B0_P2_ROUTE_BASE) },  /
             -* TD 81 */
 542   1                      { 128u, 0x23u, 0x53u, (uint16)(uint32)(BS_UDB_2_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P2_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 82 */
 543   1                      { 128u, 0x23u, 0x54u, (uint16)(uint32)(BS_UDBSWITCH_0_4_VAL), (uint16)(CYDEV_UCFG_B0_P6_ROUTE_BASE) },  /
             -* TD 83 */
 544   1                      { 128u, 0x23u, 0x55u, (uint16)(uint32)(BS_UDB_1_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P6_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 84 */
 545   1                      { 128u, 0x23u, 0x56u, (uint16)(uint32)(BS_UDBSWITCH_1_4_VAL), (uint16)(CYDEV_UCFG_B0_P1_ROUTE_BASE) },  /
             -* TD 85 */
 546   1                      { 128u, 0x23u, 0x57u, (uint16)(uint32)(BS_UDB_2_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P1_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 86 */
 547   1                      { 128u, 0x23u, 0x58u, (uint16)(uint32)(BS_DSISWITCH_1_0_VAL), (uint16)(CYDEV_UCFG_DSI9_BASE) }, /* TD 87
             - */
 548   1                      { 128u, 0x23u, 0x59u, (uint16)(uint32)(BS_DSI3_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI9_BASE + 0x0000
             -0080u) },        /* TD 88 */
 549   1                      { 128u, 0x23u, 0xFEu, (uint16)(uint32)(BS_DSISWITCH_1_1_VAL), (uint16)(CYDEV_UCFG_DSI8_BASE) }, /* TD 89
             - */
 550   1              };
 551   1      
 552   1              DMA_ZERO_VAL = 0u;
 553   1              CY_SET_REG8((void CYXDATA *)CYREG_PHUB_CFGMEM0_CFG0, 0x10u);    /* set burstcnt */
 554   1              CY_SET_REG8((void CYXDATA *)CYREG_PHUB_CH0_BASIC_CFG, 0x01u);   /* enable ch0 */
 555   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH0_BASIC_STATUS+1u), 0x00u);   /* set first TD to 0 */
 556   1              CY_SET_REG16((void CYXDATA *)CYREG_PHUB_TDMEM0_ORIG_TD0, 89u*8u);       /* transfer size */
 557   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_TDMEM0_ORIG_TD0+2u), 0x01u);    /* set next TD to 1 */
 558   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_TDMEM0_ORIG_TD0+3u), 0xA3u);    /* set TD flags */
 559   1              CY_SET_REG16((void CYXDATA *)CYREG_PHUB_TDMEM0_ORIG_TD1, (uint16)((uint32)CFG_TD_LIST0 & 0x0000FFFFu)); /
             -* set td0's src addr */
 560   1              CY_SET_REG16((void CYXDATA *)(CYREG_PHUB_TDMEM0_ORIG_TD1+2u), CYDEV_PHUB_TDMEM1_BASE);  /* set td0's dst a
             -ddr */
 561   1              CY_SET_REG16((void CYXDATA *)CYREG_PHUB_CFGMEM0_CFG1, (uint16)(CYDEV_FLS_BASE >> 16));  /* set ch0's src h
             -igh addr */
 562   1              CY_SET_REG16((void CYXDATA *)(CYREG_PHUB_CFGMEM0_CFG1+2u), (uint16)(CYDEV_PHUB_TDMEM1_BASE >> 16));     /* se
             -t ch0's dst high addr */
 563   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH1_BASIC_STATUS+1u), 0x0Bu);   /* ch1 first TD: 11 */
 564   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH2_BASIC_STATUS+1u), 0x0Cu);   /* ch2 first TD: 12 */
 565   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH4_BASIC_STATUS+1u), 0x10u);   /* ch4 first TD: 16 */
 566   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH5_BASIC_STATUS+1u), 0x19u);   /* ch5 first TD: 25 */
 567   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH6_BASIC_STATUS+1u), 0x22u);   /* ch6 first TD: 34 */
 568   1      
 569   1              CY_CFG_MEMORY_BARRIER();
 570   1              CY_SET_REG8((void CYXDATA *)CYREG_PHUB_CH0_ACTION, 0x01u); /* cpu_req */
 571   1              CY_CFG_MEMORY_BARRIER();
 572   1      
 573   1              /* Wait for all DMA transfers to complete */
 574   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH0_BASIC_STATUS) & 0x01u)){}
 575   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH1_BASIC_STATUS) & 0x01u)){}
 576   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH2_BASIC_STATUS) & 0x01u)){}
 577   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH4_BASIC_STATUS) & 0x01u)){}
 578   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH5_BASIC_STATUS) & 0x01u)){}
 579   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH6_BASIC_STATUS) & 0x01u)){}
 580   1      
 581   1      
 582   1              CYCONFIGCPY((void CYFAR *)(CYREG_IDMUX_DRQ_CTL0), (const void CYFAR *)(BS_IDMUX_VAL), 6u);
 583   1      
 584   1      }
 585          /*******************************************************************************
 586          * Function Name: ClockSetup
 587          ********************************************************************************
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 13  

 588          *
 589          * Summary:
 590          *  Performs the initialization of all of the clocks in the device based on the
 591          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 592          *  clocks and setting the necessary dividers to produce the desired frequency. 
 593          *
 594          * Parameters:
 595          *  void
 596          *
 597          * Return:
 598          *  void
 599          *
 600          *******************************************************************************/
 601          static void ClockSetup(void);
 602          static void ClockSetup(void)
 603          {
 604   1              uint32 timeout;
 605   1              uint8 pllLock;
 606   1      
 607   1      
 608   1              /* Configure Digital Clocks based on settings from Clock DWR */
 609   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x0002u);
 610   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x18u);
 611   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x0000u);
 612   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG1_CFG0 + 0x2u), 0x50u);
 613   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x0FFFu);
 614   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG2_CFG0 + 0x2u), 0x1Bu);
 615   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG3_CFG0), 0x000Bu);
 616   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG3_CFG0 + 0x2u), 0x19u);
 617   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG4_CFG0), 0x002Fu);
 618   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG4_CFG0 + 0x2u), 0x18u);
 619   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG5_CFG0), 0x00EFu);
 620   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG5_CFG0 + 0x2u), 0x18u);
 621   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG6_CFG0), 0xBB7Fu);
 622   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG6_CFG0 + 0x2u), 0x19u);
 623   1      
 624   1              /* Configure Analog Clocks based on settings from Clock DWR */
 625   1              CYCONFIGCPY((void CYFAR *)(CYREG_CLKDIST_ACFG0_CFG0), (const void CYFAR *)(BS_CYDEV_CLKDIST_ACFG0_CFG0_VA
             -L), 4u);
 626   1      
 627   1              /* Configure ILO based on settings from Clock DWR */
 628   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x06u);
 629   1      
 630   1              /* Configure IMO based on settings from Clock DWR */
 631   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x52u);
 632   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_USB)));
 633   1      
 634   1              /* Configure PLL based on settings from Clock DWR */
 635   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0710u);
 636   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 637   1              /* Wait up to 250us for the PLL to lock */
 638   1              pllLock = 0u;
 639   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 640   1              { 
 641   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 642   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 643   2              }
 644   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 645   1              if (timeout == 0u)
 646   1              {
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 14  

 647   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 648   2              }
 649   1      
 650   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 651   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 652   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 653   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 654   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 655   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 656   1      
 657   1              /* Configure USB Clock based on settings from Clock DWR */
 658   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_UCFG), 0x00u);
 659   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 660   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DLY1), 0x04u);
 661   1      
 662   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x7Fu
             -)));
 663   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG1), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG1) | 0x01u
             -)));
 664   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG0), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x80u
             -)));
 665   1      }
 666          
 667          
 668          /* Analog API Functions */
 669          
 670          
 671          /*******************************************************************************
 672          * Function Name: AnalogSetDefault
 673          ********************************************************************************
 674          *
 675          * Summary:
 676          *  Sets up the analog portions of the chip to default values based on chip
 677          *  configuration options from the project.
 678          *
 679          * Parameters:
 680          *  void
 681          *
 682          * Return:
 683          *  void
 684          *
 685          *******************************************************************************/
 686          static void AnalogSetDefault(void);
 687          static void AnalogSetDefault(void)
 688          {
 689   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 690   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 691   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 692   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT0_AG, 0x60u);
 693   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT1_AG, 0x80u);
 694   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT15_AG, 0x01u);
 695   1              CY_SET_REG8((void CYXDATA *)CYREG_DSM0_SW0, 0x78u);
 696   1              CY_SET_REG8((void CYXDATA *)CYREG_BUS_SW0, 0x18u);
 697   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 698   1      }
 699          
 700          
 701          /*******************************************************************************
 702          * Function Name: SetAnalogRoutingPumps
 703          ********************************************************************************
 704          *
 705          * Summary:
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 15  

 706          * Enables or disables the analog pumps feeding analog routing switches.
 707          * Intended to be called at startup, based on the Vdda system configuration;
 708          * may be called during operation when the user informs us that the Vdda voltage
 709          * crossed the pump threshold.
 710          *
 711          * Parameters:
 712          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 713          *
 714          * Return:
 715          *  void
 716          *
 717          *******************************************************************************/
 718          void SetAnalogRoutingPumps(uint8 enabled)
 719          {
 720   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 721   1              if (enabled != 0u)
 722   1              {
 723   2                      regValue |= 0x22u;
 724   2              }
 725   1              else
 726   1              {
 727   2                      regValue &= (uint8)~0x22u;
 728   2              }
 729   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 730   1      }
 731          
 732          
 733          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 734          /* This is an implementation detail of the AMux. Code that depends on it may be
 735             incompatible with other versions of PSoC Creator. */
 736          uint8 CYXDATA * const CYCODE ADC_AMux__addrTable[2] = {
 737                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 738                  (uint8 CYXDATA *)CY_AMUX_UNUSED, 
 739          };
 740          
 741          /* This is an implementation detail of the AMux. Code that depends on it may be
 742             incompatible with other versions of PSoC Creator. */
 743          const uint8 CYCODE ADC_AMux__maskTable[2] = {
 744                  0x40u, 
 745                  0x00u, 
 746          };
 747          
 748          /*******************************************************************************
 749          * Function Name: ADC_AMux_Set
 750          ********************************************************************************
 751          * Summary:
 752          *  This function is used to set a particular channel as active on the AMux.
 753          *
 754          * Parameters:  
 755          *   channel - The mux channel input to set as active
 756          *
 757          * Return:
 758          *   void
 759          *
 760          *******************************************************************************/
 761          void ADC_AMux_Set(uint8 channel)
 762          {
 763   1              if (channel < 2)
 764   1              {
 765   2                      *ADC_AMux__addrTable[channel] |= ADC_AMux__maskTable[channel];
 766   2              }
 767   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 16  

 768          
 769          /*******************************************************************************
 770          * Function Name: ADC_AMux_Unset
 771          ********************************************************************************
 772          * Summary:
 773          *  This function is used to clear a particular channel from being active on the
 774          *  AMux.
 775          *
 776          * Parameters:  
 777          *   channel - The mux channel input to mark inactive
 778          *
 779          * Return:
 780          *   void
 781          *
 782          *******************************************************************************/
 783          void ADC_AMux_Unset(uint8 channel)
 784          {
 785   1              if (channel < 2)
 786   1              {
 787   2                      *ADC_AMux__addrTable[channel] &= (uint8)~ADC_AMux__maskTable[channel];
 788   2              }
 789   1      }
 790          
 791          
 792          
 793          /*******************************************************************************
 794          * Function Name: cyfitter_cfg
 795          ********************************************************************************
 796          * Summary:
 797          *  This function is called by the start-up code for the selected device. It
 798          *  performs all of the necessary device configuration based on the design
 799          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 800          *  as Clocks and Pins as well as any component configuration that is necessary.
 801          *
 802          * Parameters:
 803          *   void
 804          *
 805          * Return:
 806          *   void
 807          *
 808          *******************************************************************************/
 809          
 810          void cyfitter_cfg(void)
 811          {
 812   1              /* IOPINS0_7 Address: CYREG_PRT12_DM0 Size (bytes): 8 */
 813   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_7_VAL[] = {
 814   1                      0x00u, 0x0Cu, 0x0Cu, 0x00u, 0x0Cu, 0x00u, 0x00u, 0x00u};
 815   1      
 816   1              /* IOPINS0_8 Address: CYREG_PRT15_DR Size (bytes): 10 */
 817   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_8_VAL[] = {
 818   1                      0x04u, 0x00u, 0x00u, 0x0Cu, 0x08u, 0x00u, 0x08u, 0x01u, 0x01u, 0x00u};
 819   1      
 820   1              /* IOPINS0_1 Address: CYREG_PRT1_DR Size (bytes): 10 */
 821   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_1_VAL[] = {
 822   1                      0x00u, 0x00u, 0x00u, 0x7Fu, 0x7Bu, 0x00u, 0x7Bu, 0x80u, 0x80u, 0x00u};
 823   1      
 824   1              /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
 825   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_2_VAL[] = {
 826   1                      0x30u, 0xD8u, 0xC8u, 0x00u, 0xD8u, 0x00u, 0x00u, 0x00u};
 827   1      
 828   1              /* PHUB_CFGMEM10 Address: CYREG_PHUB_CFGMEM10_CFG0 Size (bytes): 4 */
 829   1              DMAINITSEC static const uint8 CYCODE BS_PHUB_CFGMEM10_VAL[] = {
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 17  

 830   1                      0x00u, 0x0Au, 0x00u, 0x00u};
 831   1      
 832   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 833   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x01u));
 834   1      
 835   1              {
 836   2                      cfg_dma_init();
 837   2      
 838   2                      /* Perform normal device configuration. Order is not critical for these items. */
 839   2                      CY_SET_REG8((void CYXDATA *)(CYREG_DSM0_CR3), 0x0Au);
 840   2                      CYCONFIGCPYCODE((void CYFAR *)(CYREG_PHUB_CFGMEM10_CFG0), (const void CYCODE *)(BS_PHUB_CFGMEM10_VAL), 4
             -u);
 841   2      
 842   2                      /* Enable digital routing */
 843   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 844   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 845   2      
 846   2                      /* Enable UDB array */
 847   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 848   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 849   2              }
 850   1      
 851   1      
 852   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 853   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DM0), (const void CYFAR *)(BS_IOPINS0_0_VAL), 8u);
 854   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT12_DM0), (const void CYCODE *)(BS_IOPINS0_7_VAL), 8u);
 855   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT15_DR), (const void CYCODE *)(BS_IOPINS0_8_VAL), 10u);
 856   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT1_DR), (const void CYCODE *)(BS_IOPINS0_1_VAL), 10u);
 857   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT2_DM0), (const void CYCODE *)(BS_IOPINS0_2_VAL), 8u);
 858   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 859   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 860   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 861   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 862   1              {
 863   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 864   2              }
 865   1      
 866   1      
 867   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 868   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 869   1              /* Setup clocks based on selections from Clock DWR */
 870   1              ClockSetup();
 871   1      
 872   1              /* Perform basic analog initialization to defaults */
 873   1              AnalogSetDefault();
 874   1      
 875   1              /* Configure alternate active mode */
 876   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 877   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 878   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 18  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 80
0000         ?C0001:
                                           ; SOURCE LINE # 101
0000 80FE              SJMP    ?C0001
0002 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION cfg_dma_init (BEGIN)
                                           ; SOURCE LINE # 327
                                           ; SOURCE LINE # 328
                                           ; SOURCE LINE # 552
0000 E4                CLR     A
0001 FF                MOV     R7,A
0002 FE                MOV     R6,A
0003 FD                MOV     R5,A
0004 FC                MOV     R4,A
0005 900000      R     MOV     DPTR,#DMA_ZERO_VAL
0008 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 553
000B 907600            MOV     DPTR,#07600H
000E 7410              MOV     A,#010H
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 554
0011 907010            MOV     DPTR,#07010H
0014 7401              MOV     A,#01H
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 555
0017 907019            MOV     DPTR,#07019H
001A E4                CLR     A
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 556
001C 7B02              MOV     R3,#02H
001E 7A78              MOV     R2,#078H
0020 F9                MOV     R1,A
0021 7DC8              MOV     R5,#0C8H
0023 7C02              MOV     R4,#02H
0025 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 557
0028 907802            MOV     DPTR,#07802H
002B 7401              MOV     A,#01H
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 558
002E A3                INC     DPTR
002F 74A3              MOV     A,#0A3H
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 559
0032 7B02              MOV     R3,#02H
0034 7A78              MOV     R2,#078H
0036 7904              MOV     R1,#04H
0038 C003              PUSH    AR3
003A C002              PUSH    AR2
003C C001              PUSH    AR1
003E 7BFF              MOV     R3,#0FFH
0040 7A00        R     MOV     R2,#HIGH CFG_TD_LIST0
0042 7900        R     MOV     R1,#LOW CFG_TD_LIST0
0044 E9                MOV     A,R1
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 19  

0045 EA                MOV     A,R2
0046 E4                CLR     A
0047 AD01              MOV     R5,AR1
0049 AC02              MOV     R4,AR2
004B D001              POP     AR1
004D D002              POP     AR2
004F D003              POP     AR3
0051 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 560
0054 7B02              MOV     R3,#02H
0056 7A78              MOV     R2,#078H
0058 7906              MOV     R1,#06H
005A 7D08              MOV     R5,#08H
005C 7C78              MOV     R4,#078H
005E 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 561
0061 7B02              MOV     R3,#02H
0063 7A76              MOV     R2,#076H
0065 7904              MOV     R1,#04H
0067 7D10              MOV     R5,#010H
0069 7C00              MOV     R4,#00H
006B 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 562
006E 7B02              MOV     R3,#02H
0070 7A76              MOV     R2,#076H
0072 7906              MOV     R1,#06H
0074 E4                CLR     A
0075 FD                MOV     R5,A
0076 FC                MOV     R4,A
0077 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 563
007A 907029            MOV     DPTR,#07029H
007D 740B              MOV     A,#0BH
007F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 564
0080 907039            MOV     DPTR,#07039H
0083 04                INC     A
0084 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 565
0085 907059            MOV     DPTR,#07059H
0088 7410              MOV     A,#010H
008A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 566
008B 907069            MOV     DPTR,#07069H
008E 7419              MOV     A,#019H
0090 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 567
0091 907079            MOV     DPTR,#07079H
0094 7422              MOV     A,#022H
0096 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 569
                                           ; SOURCE LINE # 570
0097 907014            MOV     DPTR,#07014H
009A 7401              MOV     A,#01H
009C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 571
009D         ?C0010:
                                           ; SOURCE LINE # 574
009D 907018            MOV     DPTR,#07018H
00A0 E0                MOVX    A,@DPTR
00A1 5401              ANL     A,#01H
00A3 70F8              JNZ     ?C0010
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 20  

00A5         ?C0011:
00A5         ?C0012:
                                           ; SOURCE LINE # 575
00A5 907028            MOV     DPTR,#07028H
00A8 E0                MOVX    A,@DPTR
00A9 5401              ANL     A,#01H
00AB 70F8              JNZ     ?C0012
00AD         ?C0013:
00AD         ?C0014:
                                           ; SOURCE LINE # 576
00AD 907038            MOV     DPTR,#07038H
00B0 E0                MOVX    A,@DPTR
00B1 5401              ANL     A,#01H
00B3 70F8              JNZ     ?C0014
00B5         ?C0015:
00B5         ?C0016:
                                           ; SOURCE LINE # 577
00B5 907058            MOV     DPTR,#07058H
00B8 E0                MOVX    A,@DPTR
00B9 5401              ANL     A,#01H
00BB 70F8              JNZ     ?C0016
00BD         ?C0017:
00BD         ?C0018:
                                           ; SOURCE LINE # 578
00BD 907068            MOV     DPTR,#07068H
00C0 E0                MOVX    A,@DPTR
00C1 5401              ANL     A,#01H
00C3 70F8              JNZ     ?C0018
00C5         ?C0019:
00C5         ?C0020:
                                           ; SOURCE LINE # 579
00C5 907078            MOV     DPTR,#07078H
00C8 E0                MOVX    A,@DPTR
00C9 5401              ANL     A,#01H
00CB 70F8              JNZ     ?C0020
00CD         ?C0021:
                                           ; SOURCE LINE # 582
00CD 7B08              MOV     R3,#08H
00CF 7A04              MOV     R2,#04H
00D1 79C0              MOV     R1,#0C0H
00D3 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00D6 7401              MOV     A,#01H
00D8 F0                MOVX    @DPTR,A
00D9 A3                INC     DPTR
00DA 7451              MOV     A,#051H
00DC F0                MOVX    @DPTR,A
00DD A3                INC     DPTR
00DE 7410              MOV     A,#010H
00E0 F0                MOVX    @DPTR,A
00E1 7F06              MOV     R7,#06H
00E3 7E00              MOV     R6,#00H
00E5 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 584
00E8 22                RET     
             ; FUNCTION cfg_dma_init (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 602
                                           ; SOURCE LINE # 603
                                           ; SOURCE LINE # 609
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 21  

0004 7980              MOV     R1,#080H
0006 7D02              MOV     R5,#02H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 610
000D 904082            MOV     DPTR,#04082H
0010 7418              MOV     A,#018H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 611
0013 7B00              MOV     R3,#00H
0015 7A40              MOV     R2,#040H
0017 7984              MOV     R1,#084H
0019 E4                CLR     A
001A FD                MOV     R5,A
001B FC                MOV     R4,A
001C 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 612
001F 904086            MOV     DPTR,#04086H
0022 7450              MOV     A,#050H
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 613
0025 7B00              MOV     R3,#00H
0027 7A40              MOV     R2,#040H
0029 7988              MOV     R1,#088H
002B 7DFF              MOV     R5,#0FFH
002D 7C0F              MOV     R4,#0FH
002F 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 614
0032 90408A            MOV     DPTR,#0408AH
0035 741B              MOV     A,#01BH
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 615
0038 7B00              MOV     R3,#00H
003A 7A40              MOV     R2,#040H
003C 798C              MOV     R1,#08CH
003E 7D0B              MOV     R5,#0BH
0040 7C00              MOV     R4,#00H
0042 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 616
0045 90408E            MOV     DPTR,#0408EH
0048 7419              MOV     A,#019H
004A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 617
004B 7B00              MOV     R3,#00H
004D 7A40              MOV     R2,#040H
004F 7990              MOV     R1,#090H
0051 7D2F              MOV     R5,#02FH
0053 7C00              MOV     R4,#00H
0055 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 618
0058 904092            MOV     DPTR,#04092H
005B 7418              MOV     A,#018H
005D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 619
005E 7B00              MOV     R3,#00H
0060 7A40              MOV     R2,#040H
0062 7994              MOV     R1,#094H
0064 7DEF              MOV     R5,#0EFH
0066 7C00              MOV     R4,#00H
0068 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 620
006B 904096            MOV     DPTR,#04096H
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 22  

006E 7418              MOV     A,#018H
0070 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 621
0071 7B00              MOV     R3,#00H
0073 7A40              MOV     R2,#040H
0075 7998              MOV     R1,#098H
0077 7D7F              MOV     R5,#07FH
0079 7CBB              MOV     R4,#0BBH
007B 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 622
007E 90409A            MOV     DPTR,#0409AH
0081 7419              MOV     A,#019H
0083 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 625
0084 7B08              MOV     R3,#08H
0086 7A1F              MOV     R2,#01FH
0088 79F8              MOV     R1,#0F8H
008A 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
008D E4                CLR     A
008E F0                MOVX    @DPTR,A
008F A3                INC     DPTR
0090 7441              MOV     A,#041H
0092 F0                MOVX    @DPTR,A
0093 A3                INC     DPTR
0094 E4                CLR     A
0095 F0                MOVX    @DPTR,A
0096 7F04              MOV     R7,#04H
0098 FE                MOV     R6,A
0099 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 628
009C 904300            MOV     DPTR,#04300H
009F 7406              MOV     A,#06H
00A1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 631
00A2 904200            MOV     DPTR,#04200H
00A5 7452              MOV     A,#052H
00A7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 632
00A8 7B0C              MOV     R3,#0CH
00AA 7A01              MOV     R2,#01H
00AC 790F              MOV     R1,#0FH
00AE 120000      E     LCALL   _cyread8
00B1 9046A1            MOV     DPTR,#046A1H
00B4 EF                MOV     A,R7
00B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 635
00B6 7B00              MOV     R3,#00H
00B8 7A42              MOV     R2,#042H
00BA 7922              MOV     R1,#022H
00BC 7D10              MOV     R5,#010H
00BE 7C07              MOV     R4,#07H
00C0 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 636
00C3 7B00              MOV     R3,#00H
00C5 7A42              MOV     R2,#042H
00C7 7920              MOV     R1,#020H
00C9 7D51              MOV     R5,#051H
00CB 7C12              MOV     R4,#012H
00CD 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 638
00D0 E4                CLR     A
00D1 900000      R     MOV     DPTR,#pllLock
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 23  

00D4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 639
00D5 7F19              MOV     R7,#019H
00D7 FE                MOV     R6,A
00D8 FD                MOV     R5,A
00D9 FC                MOV     R4,A
00DA 900000      R     MOV     DPTR,#timeout
00DD 120000      E     LCALL   ?C?LSTXDATA
00E0         ?C0023:
00E0 900000      R     MOV     DPTR,#timeout
00E3 E0                MOVX    A,@DPTR
00E4 A3                INC     DPTR
00E5 E0                MOVX    A,@DPTR
00E6 A3                INC     DPTR
00E7 E0                MOVX    A,@DPTR
00E8 FE                MOV     R6,A
00E9 A3                INC     DPTR
00EA E0                MOVX    A,@DPTR
00EB D3                SETB    C
00EC 9400              SUBB    A,#00H
00EE EE                MOV     A,R6
00EF 9400              SUBB    A,#00H
00F1 404A              JC      ?C0024
00F3 A3                INC     DPTR
00F4 E0                MOVX    A,@DPTR
00F5 FF                MOV     R7,A
00F6 6403              XRL     A,#03H
00F8 6043              JZ      ?C0024
                                           ; SOURCE LINE # 640
                                           ; SOURCE LINE # 641
00FA 904225            MOV     DPTR,#04225H
00FD E0                MOVX    A,@DPTR
00FE 5401              ANL     A,#01H
0100 FE                MOV     R6,A
0101 EF                MOV     A,R7
0102 25E0              ADD     A,ACC
0104 4E                ORL     A,R6
0105 5403              ANL     A,#03H
0107 900000      R     MOV     DPTR,#pllLock
010A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 642
010B E4                CLR     A
010C 7FE0              MOV     R7,#0E0H
010E 7E01              MOV     R6,#01H
0110 FD                MOV     R5,A
0111 FC                MOV     R4,A
0112 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 643
0115 900000      R     MOV     DPTR,#timeout
0118 E0                MOVX    A,@DPTR
0119 FC                MOV     R4,A
011A A3                INC     DPTR
011B E0                MOVX    A,@DPTR
011C FD                MOV     R5,A
011D A3                INC     DPTR
011E E0                MOVX    A,@DPTR
011F FE                MOV     R6,A
0120 A3                INC     DPTR
0121 E0                MOVX    A,@DPTR
0122 FF                MOV     R7,A
0123 74FF              MOV     A,#0FFH
0125 EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 24  

0126 24FF              ADD     A,#0FFH
0128 FF                MOV     R7,A
0129 EE                MOV     A,R6
012A 34FF              ADDC    A,#0FFH
012C FE                MOV     R6,A
012D ED                MOV     A,R5
012E 34FF              ADDC    A,#0FFH
0130 FD                MOV     R5,A
0131 EC                MOV     A,R4
0132 34FF              ADDC    A,#0FFH
0134 FC                MOV     R4,A
0135 900000      R     MOV     DPTR,#timeout
0138 120000      E     LCALL   ?C?LSTXDATA
013B 80A3              SJMP    ?C0023
013D         ?C0024:
                                           ; SOURCE LINE # 645
013D 900000      R     MOV     DPTR,#timeout
0140 E0                MOVX    A,@DPTR
0141 A3                INC     DPTR
0142 E0                MOVX    A,@DPTR
0143 A3                INC     DPTR
0144 E0                MOVX    A,@DPTR
0145 FE                MOV     R6,A
0146 A3                INC     DPTR
0147 E0                MOVX    A,@DPTR
0148 4E                ORL     A,R6
0149 7005              JNZ     ?C0026
                                           ; SOURCE LINE # 646
                                           ; SOURCE LINE # 647
014B 7F03              MOV     R7,#03H
014D 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 648
0150         ?C0026:
                                           ; SOURCE LINE # 651
0150 7B00              MOV     R3,#00H
0152 7A40              MOV     R2,#040H
0154 7904              MOV     R1,#04H
0156 7D00              MOV     R5,#00H
0158 7C01              MOV     R4,#01H
015A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 652
015D 904004            MOV     DPTR,#04004H
0160 7407              MOV     A,#07H
0162 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 653
0163 904006            MOV     DPTR,#04006H
0166 E4                CLR     A
0167 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 654
0168 904008            MOV     DPTR,#04008H
016B 7448              MOV     A,#048H
016D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 655
016E 904004            MOV     DPTR,#04004H
0171 E4                CLR     A
0172 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 658
0173 904009            MOV     DPTR,#04009H
0176 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 659
0177 904001            MOV     DPTR,#04001H
017A 7402              MOV     A,#02H
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 25  

017C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 660
017D 90400B            MOV     DPTR,#0400BH
0180 7404              MOV     A,#04H
0182 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 662
0183 9043A2            MOV     DPTR,#043A2H
0186 E0                MOVX    A,@DPTR
0187 447F              ORL     A,#07FH
0189 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 663
018A 9043A1            MOV     DPTR,#043A1H
018D E0                MOVX    A,@DPTR
018E 4401              ORL     A,#01H
0190 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 664
0191 9043A0            MOV     DPTR,#043A0H
0194 E0                MOVX    A,@DPTR
0195 4480              ORL     A,#080H
0197 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 665
0198 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 687
                                           ; SOURCE LINE # 688
                                           ; SOURCE LINE # 689
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
;---- Variable 'bg_xover_inl_trim' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 690
0009 EF                MOV     A,R7
000A 5407              ANL     A,#07H
000C 90586E            MOV     DPTR,#0586EH
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 691
0010 EF                MOV     A,R7
0011 C4                SWAP    A
0012 540F              ANL     A,#0FH
0014 A3                INC     DPTR
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 692
0016 90510D            MOV     DPTR,#0510DH
0019 7460              MOV     A,#060H
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 693
001C 90511D            MOV     DPTR,#0511DH
001F 7480              MOV     A,#080H
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 694
0022 9051FD            MOV     DPTR,#051FDH
0025 7401              MOV     A,#01H
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 695
0028 905B00            MOV     DPTR,#05B00H
002B 7478              MOV     A,#078H
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 696
002E 905B58            MOV     DPTR,#05B58H
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 26  

0031 7418              MOV     A,#018H
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 697
0034 905876            MOV     DPTR,#05876H
0037 7444              MOV     A,#044H
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 698
003A 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 718
;---- Variable 'enabled' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 719
                                           ; SOURCE LINE # 720
0000 905876            MOV     DPTR,#05876H
0003 E0                MOVX    A,@DPTR
0004 FE                MOV     R6,A
;---- Variable 'regValue' assigned to Register 'R6' ----
                                           ; SOURCE LINE # 721
0005 EF                MOV     A,R7
0006 6006              JZ      ?C0029
                                           ; SOURCE LINE # 722
                                           ; SOURCE LINE # 723
0008 EE                MOV     A,R6
0009 4422              ORL     A,#022H
000B FE                MOV     R6,A
                                           ; SOURCE LINE # 724
000C 8004              SJMP    ?C0030
000E         ?C0029:
                                           ; SOURCE LINE # 726
                                           ; SOURCE LINE # 727
000E EE                MOV     A,R6
000F 54DD              ANL     A,#0DDH
0011 FE                MOV     R6,A
                                           ; SOURCE LINE # 728
0012         ?C0030:
                                           ; SOURCE LINE # 729
0012 AF06              MOV     R7,AR6
0014 905876            MOV     DPTR,#05876H
0017 EE                MOV     A,R6
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 730
0019 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION _ADC_AMux_Set (BEGIN)
                                           ; SOURCE LINE # 761
;---- Variable 'channel' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 762
                                           ; SOURCE LINE # 763
0000 EF                MOV     A,R7
0001 C3                CLR     C
0002 9402              SUBB    A,#02H
0004 5029              JNC     ?C0033
                                           ; SOURCE LINE # 764
                                           ; SOURCE LINE # 765
0006 EF                MOV     A,R7
0007 25E0              ADD     A,ACC
0009 2400        R     ADD     A,#LOW ADC_AMux__addrTable
000B F582              MOV     DPL,A
000D E4                CLR     A
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 27  

000E 3400        R     ADDC    A,#HIGH ADC_AMux__addrTable
0010 F583              MOV     DPH,A
0012 E4                CLR     A
0013 93                MOVC    A,@A+DPTR
0014 FC                MOV     R4,A
0015 7401              MOV     A,#01H
0017 93                MOVC    A,@A+DPTR
0018 F582              MOV     DPL,A
001A 8C83              MOV     DPH,R4
001C C083              PUSH    DPH
001E C082              PUSH    DPL
0020 E0                MOVX    A,@DPTR
0021 FE                MOV     R6,A
0022 EF                MOV     A,R7
0023 900000      R     MOV     DPTR,#ADC_AMux__maskTable
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 EE                MOV     A,R6
0029 4F                ORL     A,R7
002A D082              POP     DPL
002C D083              POP     DPH
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 766
                                           ; SOURCE LINE # 767
002F         ?C0033:
002F 22                RET     
             ; FUNCTION _ADC_AMux_Set (END)

             ; FUNCTION _ADC_AMux_Unset (BEGIN)
                                           ; SOURCE LINE # 783
;---- Variable 'channel' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 784
                                           ; SOURCE LINE # 785
0000 EF                MOV     A,R7
0001 C3                CLR     C
0002 9402              SUBB    A,#02H
0004 502A              JNC     ?C0035
                                           ; SOURCE LINE # 786
                                           ; SOURCE LINE # 787
0006 EF                MOV     A,R7
0007 25E0              ADD     A,ACC
0009 2400        R     ADD     A,#LOW ADC_AMux__addrTable
000B F582              MOV     DPL,A
000D E4                CLR     A
000E 3400        R     ADDC    A,#HIGH ADC_AMux__addrTable
0010 F583              MOV     DPH,A
0012 E4                CLR     A
0013 93                MOVC    A,@A+DPTR
0014 FC                MOV     R4,A
0015 7401              MOV     A,#01H
0017 93                MOVC    A,@A+DPTR
0018 F582              MOV     DPL,A
001A 8C83              MOV     DPH,R4
001C C083              PUSH    DPH
001E C082              PUSH    DPL
0020 E0                MOVX    A,@DPTR
0021 FE                MOV     R6,A
0022 EF                MOV     A,R7
0023 900000      R     MOV     DPTR,#ADC_AMux__maskTable
0026 93                MOVC    A,@A+DPTR
0027 F4                CPL     A
0028 FF                MOV     R7,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 28  

0029 EE                MOV     A,R6
002A 5F                ANL     A,R7
002B D082              POP     DPL
002D D083              POP     DPH
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 788
                                           ; SOURCE LINE # 789
0030         ?C0035:
0030 22                RET     
             ; FUNCTION _ADC_AMux_Unset (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 810
                                           ; SOURCE LINE # 811
                                           ; SOURCE LINE # 833
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4401              ORL     A,#01H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 835
                                           ; SOURCE LINE # 836
0016 120000      R     LCALL   cfg_dma_init
                                           ; SOURCE LINE # 839
0019 905883            MOV     DPTR,#05883H
001C 740A              MOV     A,#0AH
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 840
001F 7C00        R     MOV     R4,#HIGH BS_PHUB_CFGMEM10_VAL
0021 7D00        R     MOV     R5,#LOW BS_PHUB_CFGMEM10_VAL
0023 7B00              MOV     R3,#00H
0025 7A76              MOV     R2,#076H
0027 7950              MOV     R1,#050H
0029 7F04              MOV     R7,#04H
002B 7E00              MOV     R6,#00H
002D 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 843
0030 7B01              MOV     R3,#01H
0032 7A50              MOV     R2,#050H
0034 7903              MOV     R1,#03H
0036 120000      E     LCALL   _cyread8
0039 EF                MOV     A,R7
003A 4402              ORL     A,#02H
003C FD                MOV     R5,A
003D 7B01              MOV     R3,#01H
003F 7A50              MOV     R2,#050H
0041 7903              MOV     R1,#03H
0043 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 844
0046 7B01              MOV     R3,#01H
0048 7A50              MOV     R2,#050H
004A 7913              MOV     R1,#013H
004C 120000      E     LCALL   _cyread8
004F EF                MOV     A,R7
0050 4402              ORL     A,#02H
0052 FD                MOV     R5,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 29  

0053 7B01              MOV     R3,#01H
0055 7A50              MOV     R2,#050H
0057 7913              MOV     R1,#013H
0059 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 847
005C 9043A0            MOV     DPTR,#043A0H
005F E0                MOVX    A,@DPTR
0060 4440              ORL     A,#040H
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 848
0063 9043C2            MOV     DPTR,#043C2H
0066 E0                MOVX    A,@DPTR
0067 4410              ORL     A,#010H
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 849
                                           ; SOURCE LINE # 853
006A 7B08              MOV     R3,#08H
006C 7A1F              MOV     R2,#01FH
006E 79F0              MOV     R1,#0F0H
0070 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0073 E4                CLR     A
0074 F0                MOVX    @DPTR,A
0075 A3                INC     DPTR
0076 7451              MOV     A,#051H
0078 F0                MOVX    @DPTR,A
0079 A3                INC     DPTR
007A 7402              MOV     A,#02H
007C F0                MOVX    @DPTR,A
007D 7F08              MOV     R7,#08H
007F 7E00              MOV     R6,#00H
0081 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 854
0084 7C00        R     MOV     R4,#HIGH BS_IOPINS0_7_VAL
0086 7D00        R     MOV     R5,#LOW BS_IOPINS0_7_VAL
0088 7B00              MOV     R3,#00H
008A 7A51              MOV     R2,#051H
008C 79C2              MOV     R1,#0C2H
008E 7F08              MOV     R7,#08H
0090 7E00              MOV     R6,#00H
0092 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 855
0095 7C00        R     MOV     R4,#HIGH BS_IOPINS0_8_VAL
0097 7D00        R     MOV     R5,#LOW BS_IOPINS0_8_VAL
0099 7B00              MOV     R3,#00H
009B 7A51              MOV     R2,#051H
009D 79F0              MOV     R1,#0F0H
009F 7F0A              MOV     R7,#0AH
00A1 7E00              MOV     R6,#00H
00A3 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 856
00A6 7C00        R     MOV     R4,#HIGH BS_IOPINS0_1_VAL
00A8 7D00        R     MOV     R5,#LOW BS_IOPINS0_1_VAL
00AA 7B00              MOV     R3,#00H
00AC 7A51              MOV     R2,#051H
00AE 7910              MOV     R1,#010H
00B0 7F0A              MOV     R7,#0AH
00B2 7E00              MOV     R6,#00H
00B4 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 857
00B7 7C00        R     MOV     R4,#HIGH BS_IOPINS0_2_VAL
00B9 7D00        R     MOV     R5,#LOW BS_IOPINS0_2_VAL
00BB 7B00              MOV     R3,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 30  

00BD 7A51              MOV     R2,#051H
00BF 7922              MOV     R1,#022H
00C1 7F08              MOV     R7,#08H
00C3 7E00              MOV     R6,#00H
00C5 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 858
00C8 9044F4            MOV     DPTR,#044F4H
00CB 7401              MOV     A,#01H
00CD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 860
00CE 904322            MOV     DPTR,#04322H
00D1 E0                MOVX    A,@DPTR
00D2 4408              ORL     A,#08H
00D4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 861
00D5 9046EC            MOV     DPTR,#046ECH
00D8 E0                MOVX    A,@DPTR
00D9 C3                CLR     C
00DA 9405              SUBB    A,#05H
00DC 5006              JNC     ?C0036
                                           ; SOURCE LINE # 862
                                           ; SOURCE LINE # 863
00DE 904689            MOV     DPTR,#04689H
00E1 743A              MOV     A,#03AH
00E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 864
00E4         ?C0036:
                                           ; SOURCE LINE # 868
00E4 904800            MOV     DPTR,#04800H
00E7 74F1              MOV     A,#0F1H
00E9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 870
00EA 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 873
00ED 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 876
00F0 7B00              MOV     R3,#00H
00F2 7A43              MOV     R2,#043H
00F4 79A0              MOV     R1,#0A0H
00F6 C003              PUSH    AR3
00F8 C002              PUSH    AR2
00FA 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00FD EB                MOV     A,R3
00FE F0                MOVX    @DPTR,A
00FF A3                INC     DPTR
0100 EA                MOV     A,R2
0101 F0                MOVX    @DPTR,A
0102 A3                INC     DPTR
0103 74B0              MOV     A,#0B0H
0105 F0                MOVX    @DPTR,A
0106 D002              POP     AR2
0108 D003              POP     AR3
010A 7F0E              MOV     R7,#0EH
010C 7E00              MOV     R6,#00H
010E 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 877
0111 9043B0            MOV     DPTR,#043B0H
0114 E0                MOVX    A,@DPTR
0115 54FD              ANL     A,#0FDH
0117 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 878
0118 22                RET     
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/05/2018 14:23:10 PAGE 31  

             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1108    ----
   CONSTANT SIZE    =   1955    ----
   XDATA SIZE       =      4       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
