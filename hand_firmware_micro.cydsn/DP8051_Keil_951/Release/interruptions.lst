C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE INTERRUPTIONS
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Release\interruptions.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -interruptions.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(NDEBUG) WL(2) PR(.\DP8051
                    -_Keil_951\Release/interruptions.lst) CD OT(8,SPEED) OJ(.\DP8051_Keil_951\Release\interruptions.obj)

line level    source

*** MESSAGE C286 IN LINE 0 OF (null): license limits optimization to level 5
   1          // ----------------------------------------------------------------------------
   2          // BSD 3-Clause License
   3          
   4          // Copyright (c) 2016, qbrobotics
   5          // Copyright (c) 2017, Centro "E.Piaggio"
   6          // All rights reserved.
   7          
   8          // Redistribution and use in source and binary forms, with or without
   9          // modification, are permitted provided that the following conditions are met:
  10          
  11          // * Redistributions of source code must retain the above copyright notice, this
  12          //   list of conditions and the following disclaimer.
  13          
  14          // * Redistributions in binary form must reproduce the above copyright notice,
  15          //   this list of conditions and the following disclaimer in the documentation
  16          //   and/or other materials provided with the distribution.
  17          
  18          // * Neither the name of the copyright holder nor the names of its
  19          //   contributors may be used to endorse or promote products derived from
  20          //   this software without specific prior written permission.
  21          
  22          // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23          // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24          // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25          // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26          // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27          // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28          // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29          // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30          // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31          // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32          // POSSIBILITY OF SUCH DAMAGE.
  33          // ----------------------------------------------------------------------------
  34          
  35          /**
  36          * \file         interruptions.c
  37          *
  38          * \brief        Interruption handling and firmware core functions
  39          * \date         October 01, 2017
  40          * \author       _Centro "E.Piaggio"_
  41          * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42          * \copyright    (C) 2017 Centro "E.Piaggio". All rights reserved.
  43          */
  44          
  45          
  46          //=================================================================     includes
  47          #include <interruptions.h>
  48          #include <command_processing.h>
  49          #include <globals.h>
  50          #include <utils.h>
  51          
  52          
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 2   

  53          //==============================================================================
  54          //                                                            RS485 RX INTERRUPT
  55          //==============================================================================
  56          // Processing RS-485 data frame:
  57          //
  58          // - 0:     Waits for beginning characters
  59          // - 1:     Waits for ID;
  60          // - 2:     Data length;
  61          // - 3:     Receive all bytes;
  62          // - 4:     Wait for another device end of transmission;
  63          //
  64          //==============================================================================
  65          
  66          CY_ISR(ISR_RS485_RX_ExInterrupt) {
  67   1      
  68   1          // Set RS485 flag
  69   1          
  70   1          interrupt_flag = TRUE;
  71   1           
  72   1      }
  73          
  74          //==============================================================================
  75          //                                                             INTERRUPT MANAGER
  76          //==============================================================================
  77          // Manage interrupt from RS485 
  78          //==============================================================================
  79          // Processing RS-485 data frame:
  80          //
  81          // - WAIT_START:    Waits for beginning characters;
  82          // - WAIT_ID:       Waits for ID;
  83          // - WAIT_LENGTH:   Data length;
  84          // - RECEIVE:       Receive all bytes;
  85          // - UNLOAD:        Wait for another device end of transmission;
  86          //
  87          //==============================================================================
  88          
  89          void interrupt_manager(){
  90   1      
  91   1          
  92   1          //===========================================     local variables definition
  93   1      
  94   1          static uint8 CYDATA state = WAIT_START;                      // state
  95   1          
  96   1          //------------------------------------------------- local data packet
  97   1          static uint8 CYDATA data_packet_index;
  98   1          static uint8 CYDATA data_packet_length;
  99   1          static uint8 data_packet_buffer[128];                     
 100   1          static uint8 CYDATA rx_queue[3];                    // last 2 bytes received
 101   1          //-------------------------------------------------
 102   1      
 103   1          uint8 CYDATA    rx_data;                            // RS485 UART rx data
 104   1          CYBIT           rx_data_type;                       // my id?
 105   1          uint8 CYDATA    package_count = 0;                     
 106   1      
 107   1          //======================================================     receive routine
 108   1          
 109   1          // Get data until buffer is not empty 
 110   1          
 111   1          while(UART_RS485_GetRxBufferSize() && (package_count < 6)){  
 112   2              // 6 - estimated maximum number of packets we can read without blocking firmware execution
 113   2              
 114   2              // Get next char
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 3   

 115   2              rx_data = UART_RS485_GetChar();
 116   2              
 117   2              switch (state) {
 118   3                  //-----     wait for frame start     -------------------------------
 119   3                  case WAIT_START:
 120   3                  
 121   3                      rx_queue[0] = rx_queue[1];
 122   3                      rx_queue[1] = rx_queue[2];
 123   3                      rx_queue[2] = rx_data;
 124   3                      
 125   3                      // Check for header configuration package
 126   3                      if ((rx_queue[1] == 58) && (rx_queue[2] == 58)) {
 127   4                          rx_queue[0] = 0;
 128   4                          rx_queue[1] = 0;
 129   4                          rx_queue[2] = 0;
 130   4                          state       = WAIT_ID;                    
 131   4                      }else
 132   3                          if ((rx_queue[0] == 63) &&      //ASCII - ?
 133   3                              (rx_queue[1] == 13) &&      //ASCII - CR
 134   3                              (rx_queue[2] == 10))        //ASCII - LF)
 135   3                              infoGet(INFO_ALL);
 136   3                      break;
 137   3      
 138   3                  //-----     wait for id     ----------------------------------------
 139   3                  case  WAIT_ID:
 140   3      
 141   3                      // packet is for my ID or is broadcast
 142   3                      if (rx_data == c_mem.id || rx_data == 0 || rx_data == c_mem.SH_ID)
 143   3                          rx_data_type = FALSE;
 144   3                      else                //packet is for others
 145   3                          rx_data_type = TRUE;
 146   3                      
 147   3                      data_packet_length = 0;
 148   3                      state = WAIT_LENGTH;
 149   3                      break;
 150   3      
 151   3                  //-----     wait for length     ------------------------------------
 152   3                  case  WAIT_LENGTH:
 153   3      
 154   3       
 155   3                      data_packet_length = rx_data;
 156   3                      // check validity of pack length
 157   3                      if (data_packet_length <= 1) {
 158   4                          data_packet_length = 0;
 159   4                          state = WAIT_START;
 160   4                      } else if (data_packet_length > 128) {
 161   4                          data_packet_length = 0;
 162   4                          state = WAIT_START;
 163   4                      } else {
 164   4                          data_packet_index = 0;
 165   4                          
 166   4                          if(rx_data_type == FALSE)
 167   4                              state = RECEIVE;          // packet for me or broadcast
 168   4                          else
 169   4                              state = UNLOAD;           // packet for others
 170   4                      }
 171   3                      break;
 172   3      
 173   3                  //-----     receiving     -------------------------------------------
 174   3                  case RECEIVE:
 175   3      
 176   3                      data_packet_buffer[data_packet_index] = rx_data;
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 4   

 177   3                      data_packet_index++;
 178   3                      
 179   3                      // check end of transmission
 180   3                      if (data_packet_index >= data_packet_length) {
 181   4                          // verify if frame ID corresponded to the device ID
 182   4                          if (rx_data_type == FALSE) {
 183   5                              // copying data from buffer to global packet
 184   5                              memcpy(g_rx.buffer, data_packet_buffer, data_packet_length);
 185   5                              g_rx.length = data_packet_length;
 186   5                              g_rx.ready  = 1;
 187   5                      
 188   5                              commProcess();
 189   5                          }
 190   4                          
 191   4                          data_packet_index  = 0;
 192   4                          data_packet_length = 0;
 193   4                          state = WAIT_START;
 194   4                          package_count++;
 195   4                      
 196   4                      }
 197   3                      break;
 198   3      
 199   3                  //-----     other device is receving     ---------------------------
 200   3                  case UNLOAD:
 201   3                      if (!(--data_packet_length)) {
 202   4                          data_packet_index  = 0;
 203   4                          data_packet_length = 0;
 204   4                          RS485_CTS_Write(1);
 205   4                          RS485_CTS_Write(0);
 206   4                          state              = WAIT_START;
 207   4                          package_count++;
 208   4                      }
 209   3                      break;
 210   3              }
 211   2          }
 212   1      }
 213          //==============================================================================
 214          //                                                            FUNCTION SCHEDULER
 215          //==============================================================================
 216          // Call all the function with the right frequency
 217          //==============================================================================
 218          // Base frequency 1000 Hz
 219          //==============================================================================
 220          
 221          void function_scheduler(void) {
 222   1       
 223   1          static uint16 counter_calibration = DIV_INIT_VALUE;
 224   1      
 225   1          timer_value0 = (uint32)MY_TIMER_ReadCounter();
 226   1      
 227   1          // Start ADC Conversion, SOC = 1
 228   1      
 229   1          ADC_SOC_Write(0x01); 
 230   1          
 231   1          // Check Interrupt 
 232   1      
 233   1          if (interrupt_flag){
 234   2              interrupt_flag = FALSE;
 235   2              interrupt_manager();
 236   2          }
 237   1        
 238   1          //---------------------------------- Get Encoders
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 5   

 239   1      
 240   1          encoder_reading(0); 
 241   1          
 242   1          // Check Interrupt     
 243   1          
 244   1          if (interrupt_flag){
 245   2              interrupt_flag = FALSE;
 246   2              interrupt_manager();
 247   2          }   
 248   1          
 249   1          encoder_reading(1);
 250   1          
 251   1          // Check Interrupt 
 252   1          
 253   1          if (interrupt_flag){
 254   2              interrupt_flag = FALSE;
 255   2              interrupt_manager();
 256   2          }
 257   1          
 258   1          encoder_reading(2);
 259   1          
 260   1          // Check Interrupt 
 261   1          
 262   1          if (interrupt_flag){
 263   2              interrupt_flag = FALSE;
 264   2              interrupt_manager();
 265   2          }
 266   1      
 267   1          //---------------------------------- Control Motor
 268   1         
 269   1          motor_control();
 270   1      
 271   1          // Check Interrupt 
 272   1      
 273   1          if (interrupt_flag){
 274   2              interrupt_flag = FALSE;
 275   2              interrupt_manager();
 276   2          }
 277   1      
 278   1          //---------------------------------- Read conversion buffer - LOCK function
 279   1      
 280   1          analog_read_end();
 281   1      
 282   1          if (interrupt_flag){
 283   2              interrupt_flag = FALSE;
 284   2              interrupt_manager();
 285   2          }
 286   1          
 287   1          //---------------------------------- Master Mode
 288   1            
 289   1          if(master_mode){
 290   2              
 291   2              if (c_mem.is_myo2_master){
 292   3                  
 293   3                  // Rest position check (only if Master mode is enabled)
 294   3                  if (c_mem.rest_position_flag == TRUE){
 295   4                      if (counter_calibration == CALIBRATION_DIV) {
 296   5                          
 297   5                              // Read Measure (valid since this routine is enabled only in Master mode)
 298   5                              if (c_mem.is_force_fb_present || c_mem.is_proprio_fb_present){
 299   6                                  curr_pos_res = SH_current_position;
 300   6                              } 
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 6   

 301   5                              else {
 302   6                                  curr_pos_res = (int32)commReadMeasFromSH();
 303   6                              }
 304   5                                  
 305   5      
 306   5                              check_rest_position();
 307   5                              counter_calibration = 0;
 308   5                      }
 309   4                      counter_calibration++;
 310   4      
 311   4                      // Check Interrupt     
 312   4                      if (interrupt_flag){
 313   5                          interrupt_flag = FALSE;
 314   5                          interrupt_manager();
 315   5                      }
 316   4                  }
 317   3                  
 318   3                  drive_SH();  
 319   3                  
 320   3                  // Check Interrupt     
 321   3                  if (interrupt_flag){
 322   4                      interrupt_flag = FALSE;
 323   4                      interrupt_manager();
 324   4                  }
 325   3              }
 326   2                      
 327   2              if (c_mem.is_force_fb_present){
 328   3                  
 329   3                  if (c_mem.is_proprio_fb_present && c_mem.ForceF_ID == c_mem.ProprioF_ID){
 330   4                      drive_force_proprio_fb();
 331   4                  }
 332   3                  else {
 333   4                      drive_force_fb(); 
 334   4                  }
 335   3                  
 336   3                  // Check Interrupt     
 337   3                  if (interrupt_flag){
 338   4                      interrupt_flag = FALSE;
 339   4                      interrupt_manager();
 340   4                  }
 341   3                  
 342   3              }
 343   2              
 344   2              if (c_mem.is_proprio_fb_present){
 345   3                  
 346   3                  if (!(c_mem.is_force_fb_present && c_mem.ForceF_ID == c_mem.ProprioF_ID)) {
 347   4                      drive_proprio_fb();
 348   4                  }
 349   3                  
 350   3                  // Check Interrupt     
 351   3                  if (interrupt_flag){
 352   4                      interrupt_flag = FALSE;
 353   4                      interrupt_manager();
 354   4                  }
 355   3              }
 356   2              
 357   2          }
 358   1                  
 359   1          // Check Interrupt 
 360   1          
 361   1          if (interrupt_flag){
 362   2              interrupt_flag = FALSE;
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 7   

 363   2              interrupt_manager();
 364   2          }
 365   1      
 366   1          //---------------------------------- Calibration 
 367   1      
 368   1          // Divider 10, freq = 500 Hz
 369   1          if (calib.enabled == TRUE) {
 370   2              if (counter_calibration == CALIBRATION_DIV) {
 371   3                  calibration();
 372   3                  counter_calibration = 0;
 373   3              }
 374   2              counter_calibration++;
 375   2          }
 376   1      
 377   1          // Check Interrupt 
 378   1          
 379   1          if (interrupt_flag){
 380   2              interrupt_flag = FALSE;
 381   2              interrupt_manager();
 382   2          }
 383   1          
 384   1          
 385   1          //---------------------------------- Update States
 386   1          
 387   1          // Load k-1 state
 388   1          memcpy( &g_measOld, &g_meas, sizeof(g_meas) );
 389   1          memcpy( &g_refOld, &g_ref, sizeof(g_ref) );
 390   1      
 391   1          // Load k+1 state
 392   1          memcpy( &g_ref, &g_refNew, sizeof(g_ref) );
 393   1      
 394   1          if (interrupt_flag){
 395   2              interrupt_flag = FALSE;
 396   2              interrupt_manager();
 397   2          }
 398   1      
 399   1          timer_value = (uint32)MY_TIMER_ReadCounter();
 400   1          MY_TIMER_WriteCounter(5000000);
 401   1      
 402   1      }
 403          
 404          //==============================================================================
 405          //                                                                MOTORS CONTROL
 406          //==============================================================================
 407          
 408          void motor_control() {
 409   1      
 410   1          int32 CYDATA handle_value;
 411   1      
 412   1          int32 CYDATA err_emg_1, err_emg_2;
 413   1          float CYDATA joy_perc;
 414   1      
 415   1          // Static Variables
 416   1          static uint8 current_emg = 0;   // 0 NONE
 417   1                                          // 1 EMG 1
 418   1                                          // 2 EMG 2
 419   1                                          // wait for both to get down
 420   1      
 421   1          err_emg_1 = g_meas.emg[0] - c_mem.emg_threshold[0];
 422   1          err_emg_2 = g_meas.emg[1] - c_mem.emg_threshold[1];
 423   1          
 424   1          // =========================== POSITION INPUT ==============================
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 8   

 425   1          switch(c_mem.input_mode) {
 426   2      
 427   2              case INPUT_MODE_ENCODER3:
 428   2      
 429   2                  if (master_mode) {
 430   3                      // The only attached encoder is the handle lever
 431   3                      handle_value = g_meas.pos[0] * c_mem.motor_handle_ratio;
 432   3                  }
 433   2                  else {
 434   3                      // Like other firmwares working
 435   3                      // Calculate handle value based on position of handle in the
 436   3                      // sensor chain and multiplication factor between handle and motor position
 437   3                      handle_value = 0;
 438   3                  }
 439   2      
 440   2                  // Read handle and use it as reference for the motor
 441   2                  if (((handle_value - g_ref.pos[0]) > c_mem.max_step_pos) && (c_mem.max_step_pos != 0))
 442   2                      g_ref.pos[0] += c_mem.max_step_pos;
 443   2                  else {
 444   3                      if (((handle_value - g_ref.pos[0]) < c_mem.max_step_neg) && (c_mem.max_step_neg != 0))
 445   3                          g_ref.pos[0] += c_mem.max_step_neg;
 446   3                      else
 447   3                          g_ref.pos[0] = handle_value;
 448   3                  }
 449   2                  break;
 450   2      
 451   2              case INPUT_MODE_EMG_PROPORTIONAL:
 452   2                  if (err_emg_1 > 0)
 453   2                      g_ref.pos[0] = (err_emg_1 * g_mem.pos_lim_sup[0]) / (1024 - c_mem.emg_threshold[0]);
 454   2                  else
 455   2                      g_ref.pos[0] = 0;
 456   2                  break;
 457   2      
 458   2              case INPUT_MODE_EMG_INTEGRAL:
 459   2                  g_ref.pos[0] = g_refOld.pos[0];
 460   2                  if (err_emg_1 > 0) {
 461   3                      g_ref.pos[0] = g_refOld.pos[0] + (err_emg_1 * (int)g_mem.emg_speed * 2) / (1024 - c_mem.em
             -g_threshold[0]);
 462   3                  }
 463   2                  if (err_emg_2 > 0) {
 464   3                      g_ref.pos[0] = g_refOld.pos[0] - (err_emg_2 * (int)g_mem.emg_speed * 2) / (1024 - c_mem.em
             -g_threshold[1]);
 465   3                  }
 466   2                  break;
 467   2      
 468   2              case INPUT_MODE_EMG_FCFS:
 469   2                  g_ref.pos[0] = g_refOld.pos[0];
 470   2                  switch (current_emg) {
 471   3                      case 0:
 472   3                          // Look for the first EMG passing the threshold
 473   3                          if (err_emg_1 > 0) {
 474   4                              current_emg = 1;
 475   4                              break;
 476   4                          }
 477   3                          if (err_emg_2 > 0) {
 478   4                              current_emg = 2;
 479   4                              break;
 480   4                          }
 481   3                          break;
 482   3      
 483   3                      case 1:
 484   3                          // EMG 1 is first
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 9   

 485   3                          if (err_emg_1 < 0) {
 486   4                              current_emg = 0;
 487   4                              break;
 488   4                          }
 489   3                          g_ref.pos[0] = g_refOld.pos[0] + (err_emg_1 * g_mem.emg_speed * 2) / (1024 - c_mem.emg
             -_threshold[0]);
 490   3                          break;
 491   3      
 492   3                      case 2:
 493   3                          // EMG 2 is first
 494   3                          if (err_emg_2 < 0) {
 495   4                              current_emg = 0;
 496   4                              break;
 497   4                          }
 498   3                          g_ref.pos[0] = g_refOld.pos[0] - (err_emg_2 * g_mem.emg_speed * 2) / (1024 - c_mem.emg
             -_threshold[1]);
 499   3                          break;
 500   3      
 501   3                      default:
 502   3                          break;
 503   3                  }
 504   2      
 505   2                  break;
 506   2      
 507   2              case INPUT_MODE_EMG_FCFS_ADV:
 508   2                  g_ref.pos[0] = g_refOld.pos[0];
 509   2                  switch (current_emg) {
 510   3                      // Look for the first EMG passing the threshold
 511   3                      case 0:
 512   3                          if (err_emg_1 > 0) {
 513   4                              current_emg = 1;
 514   4                              break;
 515   4                          }
 516   3                          if (err_emg_2 > 0) {
 517   4                              current_emg = 2;
 518   4                              break;
 519   4                          }
 520   3                          break;
 521   3      
 522   3                      // EMG 1 is first
 523   3                      case 1:
 524   3                          // If both signals are under threshold go back to status 0
 525   3                          if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 526   4                              current_emg = 0;
 527   4                              break;
 528   4                          }
 529   3                          // but if the current signal come back over threshold, continue using it
 530   3                          if (err_emg_1 > 0) 
 531   3                              g_ref.pos[0] = g_refOld.pos[0] + (err_emg_1 * g_mem.emg_speed << 2) / (1024 - c_me
             -m.emg_threshold[0]);
 532   3                          
 533   3                          break;
 534   3      
 535   3                      // EMG 2 is first
 536   3                      case 2:
 537   3                          // If both signals are under threshold go back to status 0
 538   3                          if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 539   4                              current_emg = 0;
 540   4                              break;
 541   4                          }
 542   3                          // but if the current signal come back over threshold, continue using it
 543   3                          if (err_emg_2 > 0) {
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 10  

 544   4                              g_ref.pos[0] = g_refOld.pos[0] - (err_emg_2 * c_mem.emg_speed << 2) / (1024 - c_me
             -m.emg_threshold[1]);
 545   4                          }
 546   3                          break;
 547   3      
 548   3                      default:
 549   3                          break;
 550   3                  }
 551   2        
 552   2                  break;
 553   2                  
 554   2              case INPUT_MODE_JOYSTICK:
 555   2                  
 556   2                  joy_perc = (float)(g_meas.joystick[0])/((float)c_mem.joystick_gain/2);            
 557   2                  g_ref.pos[0] = g_refOld.pos[0] + c_mem.joystick_closure_speed * joy_perc;         
 558   2              
 559   2                  break;
 560   2              default:
 561   2                  break;
 562   2          }
 563   1      
 564   1          // Position limit saturation
 565   1          if (c_mem.pos_lim_flag) {
 566   2              if (g_ref.pos[0] < c_mem.pos_lim_inf[0]) 
 567   2                  g_ref.pos[0] = c_mem.pos_lim_inf[0];
 568   2              if (g_ref.pos[0] > c_mem.pos_lim_sup[0]) 
 569   2                  g_ref.pos[0] = c_mem.pos_lim_sup[0];
 570   2          }
 571   1      
 572   1          if (c_mem.rest_position_flag == TRUE) {
 573   2              if (rest_enabled == 1){
 574   3                  // Change position reference to drive motor to rest position smoothly
 575   3                  g_ref.pos[0] = rest_pos_curr_ref;
 576   3              }
 577   2              
 578   2              if (forced_open == 1) {
 579   3                  // Open the SoftHand as EMG PROPORTIONAL input mode 
 580   3                  if (err_emg_2 > 0)
 581   3                      g_ref.pos[0] = g_mem.rest_pos - (err_emg_2 * g_mem.rest_pos) / (1024 - c_mem.emg_threshold
             -[1]);
 582   3                  else {
 583   4                      g_ref.pos[0] = g_mem.rest_pos;
 584   4                      forced_open = 0;
 585   4                  }
 586   3              }
 587   2          }
 588   1      }
 589          
 590          //==============================================================================
 591          //                                                                   ENCODER READING
 592          //==============================================================================
 593          
 594          void encoder_reading(const uint8 idx) {
 595   1      
 596   1          uint8 CYDATA index = idx;
 597   1          
 598   1          uint8 jj;
 599   1          
 600   1          uint32 data_encoder;
 601   1          int32 value_encoder;
 602   1          int32 speed_encoder;
 603   1          int32 accel_encoder;
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 11  

 604   1          int32 aux;
 605   1      
 606   1          static int32 last_value_encoder[NUM_OF_SENSORS];
 607   1      
 608   1          static uint8 error[NUM_OF_SENSORS];
 609   1          
 610   1          static CYBIT only_first_time = TRUE;
 611   1      
 612   1          static int32 v_value[NUM_OF_SENSORS];   //last value for velocity
 613   1          static int32 vv_value[NUM_OF_SENSORS];  //last last value for velocity
 614   1          static int32 vvv_value[NUM_OF_SENSORS];  //last last last value for velocity
 615   1          
 616   1          static int32 a_value[NUM_OF_SENSORS];   //last value for acceleration
 617   1          static int32 aa_value[NUM_OF_SENSORS];  //last last value for acceleration
 618   1          static int32 aaa_value[NUM_OF_SENSORS];  //last last last value for acceleration
 619   1      
 620   1          if (index >= NUM_OF_SENSORS)
 621   1              return;
 622   1          
 623   1          if (reset_last_value_flag) {
 624   2              for (jj = NUM_OF_SENSORS; jj--;) 
 625   2                  last_value_encoder[jj] = 0;
 626   2              
 627   2              reset_last_value_flag = 0;
 628   2          }
 629   1      
 630   1          //======================================================     reading sensors
 631   1              // Shift 1 right to erase Dummy bit of chain
 632   1          if (index == 0)
 633   1                  data_encoder = (SHIFTREG_ENC_1_ReadData() >> 1) & 0x3FFFF;  //0x0003FFFF reset first 14 bits
 634   1          else {
 635   2              if (index == 1)
 636   2                  data_encoder = (SHIFTREG_ENC_2_ReadData() >> 1) & 0x3FFFF;  //0x0003FFFF reset first 14 bits
 637   2              else // index == 2
 638   2                  data_encoder = (SHIFTREG_ENC_3_ReadData() >> 1) & 0x3FFFF;  //0x0003FFFF reset first 14 bits
 639   2          }
 640   1             
 641   1      
 642   1          if (check_enc_data(&data_encoder)) {
 643   2      
 644   2              value_encoder = (int16) (((data_encoder & 0x3FFC0) - 0x20000) >> 2 ) + g_mem.m_off[index];
 645   2                                                          // reset last 6 bit 
 646   2                                                          // -> |:|:|id|dim|CMD|CHK|(data---
 647   2                                                          // subtract half of max value
 648   2                                                          // and shift to have 16 bit val
 649   2      
 650   2              // Initialize last_value_encoder
 651   2              if (only_first_time) {
 652   3                  last_value_encoder[index] = value_encoder;
 653   3                  if (index == 2)
 654   3                      only_first_time = 0;
 655   3              }
 656   2      
 657   2              // Take care of rotations
 658   2              aux = value_encoder - last_value_encoder[index];
 659   2      
 660   2              // ====================== 1 TURN ======================
 661   2              // -32768                    0                    32767 -32768                   0                
             -     32767
 662   2              // |-------------------------|-------------------------|-------------------------|----------------
             ----------|
 663   2              //              |                         |      |           |      |                         |
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 12  

 664   2              //           -16384                     16383    |           |   -16384                     16383
 665   2              //                                               |           |
 666   2              //                                           24575           -24576
 667   2              //                                               |___________|
 668   2              //                                                   49152
 669   2      
 670   2              // if we are in the right interval, take care of rotation
 671   2              // and update the variable only if the difference between
 672   2              // one measure and another is less than 1/4 of turn
 673   2      
 674   2              // Considering we are sampling at 1kHz, this means that our shaft needs
 675   2              // to go slower than 1/4 turn every ms -> 1 turn every 4ms
 676   2              // equal to 250 turn/s -> 15000 RPM
 677   2      
 678   2              if (aux > 49152)
 679   2                  g_meas.rot[index]--;
 680   2              else{ 
 681   3                  if (aux < -49152)
 682   3                      g_meas.rot[index]++;
 683   3                  else{
 684   4                      if (abs(aux) > 16384) { // if two measure are too far
 685   5                          error[index]++;
 686   5                          if (error[index] < 10)
 687   5                              // Discard
 688   5                              return;
 689   5                      }
 690   4                  }
 691   3              }
 692   2      
 693   2              error[index] = 0;
 694   2      
 695   2              last_value_encoder[index] = value_encoder;
 696   2      
 697   2              value_encoder += (int32)g_meas.rot[index] << 16;
 698   2      
 699   2              if (c_mem.m_mult[index] != 1.0) {
 700   3                  value_encoder *= c_mem.m_mult[index];
 701   3              }
 702   2      
 703   2              g_meas.pos[index] = value_encoder;
 704   2          }
 705   1          
 706   1          switch(index) {
 707   2              case 0: {
 708   3                  speed_encoder = (int16)filter_vel_1((3*value_encoder + v_value[0] - vv_value[0] - 3*vvv_value[
             -0])*10);
 709   3                  break;
 710   3              }
 711   2              case 1: {
 712   3                  speed_encoder = (int16)filter_vel_2((3*value_encoder + v_value[1] - vv_value[1] - 3*vvv_value[
             -1])*10);
 713   3                  break;
 714   3              }
 715   2              case 2: {
 716   3                  speed_encoder = (int16)filter_vel_3((3*value_encoder + v_value[2] - vv_value[2] - 3*vvv_value[
             -2])*10);
 717   3                  break;
 718   3              }
 719   2          }
 720   1          //Update current speed
 721   1          g_meas.vel[index] = speed_encoder;
 722   1          
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 13  

 723   1          //Encoder rotational acceleration calculation
 724   1          switch(index) {
 725   2              case 0:
 726   2                  accel_encoder = (int16)filter_acc_1((3*speed_encoder + a_value[0] - aa_value[0] - 3*aaa_value[
             -0])*10);
 727   2                  break;
 728   2              
 729   2              case 1:
 730   2                  accel_encoder = (int16)filter_acc_2((3*speed_encoder + a_value[1] - aa_value[1] - 3*aaa_value[
             -1])*10);
 731   2                  break;
 732   2              
 733   2              case 2:
 734   2                  accel_encoder = (int16)filter_acc_3((3*speed_encoder + a_value[2] - aa_value[2] - 3*aaa_value[
             -2])*10);
 735   2                  break;
 736   2          }
 737   1          //Update current acceleration
 738   1          g_meas.acc[index] = accel_encoder;
 739   1      
 740   1          // update old velocity and acceleration values
 741   1          vvv_value[index] = vv_value[index];
 742   1          vv_value[index] = v_value[index];
 743   1          v_value[index] = value_encoder;
 744   1      
 745   1          aaa_value[index] = aa_value[index];
 746   1          aa_value[index] = a_value[index];
 747   1          a_value[index] = speed_encoder;
 748   1      }
 749          
 750          //==============================================================================
 751          //                                                           ANALOG MEASUREMENTS
 752          //==============================================================================
 753          
 754          void analog_read_end() {
 755   1      
 756   1          /* =========================================================================
 757   1          /   Ideal formulation to calculate tension and current
 758   1          /
 759   1          /   tension = ((read_value_mV - offset) * 101) / gain -> [mV]
 760   1          /   current = ((read_value_mV - offset) * 375) / (gain * resistor) -> [mA]
 761   1          /
 762   1          /   Definition:
 763   1          /   read_value_mV = counts_read / 0.819 -> conversion from counts to mV
 764   1          /   offset = 2000 -> hardware amplifier bias in mV
 765   1          /   gain = 8.086 -> amplifier gain
 766   1          /   resistor = 18 -> resistor of voltage divider in KOhm 
 767   1          /
 768   1          /   Real formulation: tradeoff in good performance and accurancy, ADC_buf[] 
 769   1          /   and offset unit of measurment is counts, instead dev_tension and
 770   1          /   g_meas.curr[] are converted in properly unit.
 771   1          /  =========================================================================
 772   1          */
 773   1      
 774   1          int32 CYDATA i_aux;
 775   1      
 776   1          static emg_status CYDATA emg_1_status = RESET; 
 777   1          static emg_status CYDATA emg_2_status = RESET;                                             
 778   1          
 779   1          static joystick_status CYDATA UD_status = RESET;
 780   1          static joystick_status CYDATA LR_status = RESET;                                          
 781   1      
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 14  

 782   1          static uint16 CYDATA UD_counter = 0;
 783   1          static uint16 CYDATA LR_counter = 0;
 784   1          
 785   1          static int32 CYDATA UD_mean_value;
 786   1          static int32 CYDATA LR_mean_value;
 787   1              
 788   1          static uint16 emg_counter_1 = 0;
 789   1          static uint16 emg_counter_2 = 0;
 790   1          static uint8 count = 0;
 791   1          static uint32 count2 = 0;
 792   1          
 793   1        //  static uint8 first_tension_valid = TRUE;
 794   1      
 795   1          // Wait for conversion end
 796   1          
 797   1          while(!ADC_STATUS_Read()){
 798   2              if (interrupt_flag){
 799   3                  interrupt_flag = FALSE;
 800   3                  interrupt_manager();
 801   3              }
 802   2          }
 803   1          
 804   1          // Convert tension read
 805   1          dev_tension = ((int32)(ADC_buf[0] - 1638) * 1952) >> 7;
 806   1          
 807   1          if (interrupt_flag){
 808   2              interrupt_flag = FALSE;
 809   2              interrupt_manager();
 810   2          }
 811   1              
 812   1          if (first_tension_valid && tension_valid) {
 813   2              count = count + 1;
 814   2              
 815   2              if (count == 1000){
 816   3                  if (dev_tension < 9000) {   // 8 V case
 817   4                      pow_tension = 8000;
 818   4                  }
 819   3                  else {      // 12 V - 24 V cases
 820   4                      if (dev_tension < 13000) {
 821   5                          pow_tension = 12000;
 822   5                      }
 823   4                      else
 824   4                          pow_tension = 24000;
 825   4                  }
 826   3      
 827   3                  first_tension_valid = FALSE;
 828   3              }
 829   2          }
 830   1      
 831   1          // Until there is no valid input tension repeat this measurement
 832   1          
 833   1          if (dev_tension > 7000) {       //at least > 7.36 V (92% of 8 V) that is minimum charge of smallest ba
             -ttery
 834   2              // Set tension valid bit to TRUE
 835   2      
 836   2              if (count2 == 1000){
 837   3                  tension_valid = TRUE;   
 838   3              }
 839   2              else {                      // wait for battery voltage stabilization
 840   3                  count2 = count2 + 1;
 841   3                  dev_tension_f = filter_voltage(dev_tension);
 842   3              }
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 15  

 843   2      
 844   2              // Check Interrupt 
 845   2          
 846   2              if (interrupt_flag){
 847   3                  interrupt_flag = FALSE;
 848   3                  interrupt_manager();
 849   3              }
 850   2      
 851   2              // if calibration is not needed go to "normal execution"
 852   2              if (!g_mem.emg_calibration_flag){
 853   3                  emg_1_status = NORMAL; // normal execution
 854   3                  emg_2_status = NORMAL; // normal execution
 855   3              }
 856   2      
 857   2              // State machines for EMG or Joystick reading
 858   2              if (c_mem.input_mode == INPUT_MODE_JOYSTICK) {
 859   3                  // Read ADC_buf[2] and ADC_buf[3] as JOYSTICK analog inputs
 860   3                  
 861   3                  // Joystick UD    
 862   3                  switch (UD_status) {
 863   4                      case NORMAL:
 864   4                          i_aux = ADC_buf[2];
 865   4                          // Remap the analog reading from -1024 to 1024.  
 866   4                          i_aux = (int32) (((float) (i_aux - UD_mean_value) / UD_mean_value) * g_mem.joystick_ga
             -in); 
 867   4                          
 868   4                          if (interrupt_flag){
 869   5                              interrupt_flag = FALSE;
 870   5                              interrupt_manager();
 871   5                          }
 872   4      
 873   4                          //Saturation
 874   4                          if (i_aux < -1024) 
 875   4                              i_aux = -1024;
 876   4                          if (i_aux > 1024)
 877   4                              i_aux = 1024;
 878   4      
 879   4                          g_meas.joystick[1] = (int16) i_aux;
 880   4      
 881   4                          if (interrupt_flag){
 882   5                              interrupt_flag = FALSE;
 883   5                              interrupt_manager();
 884   5                          }
 885   4      
 886   4                      break;
 887   4      
 888   4                      case RESET: // reset variables
 889   4                          UD_counter = 0;
 890   4                          UD_mean_value = 0;
 891   4                          UD_status = WAIT; // go to waiting status
 892   4      
 893   4                      break;
 894   4      
 895   4                      case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
 896   4                          UD_counter++;
 897   4                          if (UD_counter == JOYSTICK_SAMPLE_TO_DISCARD) {
 898   5                              UD_counter = 0;                     // reset counter
 899   5      
 900   5                              if (interrupt_flag){
 901   6                                  interrupt_flag = FALSE;
 902   6                                  interrupt_manager();
 903   6                              }
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 16  

 904   5      
 905   5                              UD_status = SUM_AND_MEAN;           // sum and mean status
 906   5                          }
 907   4      
 908   4                      break;
 909   4      
 910   4                      case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
 911   4                          // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
 912   4                          UD_counter++;
 913   4                          UD_mean_value += ADC_buf[2];
 914   4      
 915   4                          if (interrupt_flag){
 916   5                              interrupt_flag = FALSE;
 917   5                              interrupt_manager();
 918   5                          }
 919   4      
 920   4                          if (UD_counter == SAMPLES_FOR_JOYSTICK_MEAN) {
 921   5                              UD_mean_value = UD_mean_value / SAMPLES_FOR_JOYSTICK_MEAN; // calc mean
 922   5      
 923   5                              if (interrupt_flag){
 924   6                                  interrupt_flag = FALSE;
 925   6                                  interrupt_manager();
 926   6                              }
 927   5      
 928   5                              UD_counter = 0;          // reset counter
 929   5                              UD_status = NORMAL;           // goto normal execution
 930   5                          }
 931   4                      break;
 932   4      
 933   4                      case WAIT: // wait for both EMG calibrations to be done
 934   4                          if (emg_1_status == NORMAL && emg_2_status == NORMAL)
 935   4                              UD_status = DISCARD;           // goto discard sample
 936   4                      break;
 937   4                  }
 938   3                  
 939   3                  if (interrupt_flag){
 940   4                      interrupt_flag = FALSE;
 941   4                      interrupt_manager();
 942   4                  }
 943   3                  // Joystick LR
 944   3                  switch (LR_status) {
 945   4                      case NORMAL:
 946   4                          i_aux = ADC_buf[3];
 947   4      
 948   4                          i_aux = (int32) (((float) (i_aux - LR_mean_value) / LR_mean_value) * g_mem.joystick_ga
             -in); 
 949   4                          
 950   4                          if (interrupt_flag){
 951   5                              interrupt_flag = FALSE;
 952   5                              interrupt_manager();
 953   5                          }
 954   4      
 955   4                          //Saturation
 956   4                          if (i_aux < -1024)
 957   4                              i_aux = -1024;
 958   4                          if (i_aux > 1024)
 959   4                              i_aux = 1024;
 960   4      
 961   4                          if (interrupt_flag){
 962   5                              interrupt_flag = FALSE;
 963   5                              interrupt_manager();
 964   5                          }
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 17  

 965   4      
 966   4                          g_meas.joystick[0] = (int16) i_aux;
 967   4      
 968   4                      break;
 969   4      
 970   4                      case RESET: // reset variables
 971   4                          LR_counter = 0;
 972   4                          LR_mean_value = 0;
 973   4                          LR_status = WAIT; // goes waiting for all conversions to be done
 974   4                      break;
 975   4      
 976   4                      case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples8
 977   4                          LR_counter++;
 978   4                          if (LR_counter == JOYSTICK_SAMPLE_TO_DISCARD) {
 979   5                              LR_counter = 0;                     // reset counter
 980   5      
 981   5                              if (interrupt_flag){
 982   6                                  interrupt_flag = FALSE;
 983   6                                  interrupt_manager();
 984   6                              }
 985   5      
 986   5                              LR_status = SUM_AND_MEAN;           // sum and mean status
 987   5                          }
 988   4                      break;
 989   4      
 990   4                      case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
 991   4                          // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
 992   4                          LR_counter++;
 993   4                          LR_mean_value += ADC_buf[3];
 994   4                          if (LR_counter == SAMPLES_FOR_JOYSTICK_MEAN) {
 995   5                              LR_mean_value = LR_mean_value / SAMPLES_FOR_JOYSTICK_MEAN; // calc mean
 996   5                              
 997   5                              if (interrupt_flag){
 998   6                                  interrupt_flag = FALSE;
 999   6                                  interrupt_manager();
1000   6                              }
1001   5      
1002   5                              LR_counter = 0;               // reset counter
1003   5                              LR_status = NORMAL;           // goto normal execution
1004   5                          }
1005   4                      break;
1006   4      
1007   4                      case WAIT:
1008   4                          if(emg_1_status == NORMAL && emg_2_status == NORMAL && UD_status == NORMAL)
1009   4                              LR_status = DISCARD;
1010   4                      break;
1011   4                  }
1012   3      
1013   3                  if (interrupt_flag){
1014   4                      interrupt_flag = FALSE;
1015   4                      interrupt_manager();
1016   4                  }
1017   3                  
1018   3              } 
1019   2              else {
1020   3                  // Read ADC_buf[2] and ADC_buf[3] as EMGs
1021   3                  
1022   3                  // EMG 1 calibration state machine
1023   3              
1024   3                  // Calibration state machine
1025   3                  switch(emg_1_status) {
1026   4                      case NORMAL: // normal execution
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 18  

1027   4                          i_aux = (int32)ADC_buf[2];
1028   4                          if (i_aux < 0) 
1029   4                              i_aux = 0;
1030   4                          i_aux = filter_ch1(i_aux);
1031   4                          i_aux = (i_aux << 10) / g_mem.emg_max_value[0];
1032   4              
1033   4                          if (interrupt_flag){
1034   5                              interrupt_flag = FALSE;
1035   5                              interrupt_manager();
1036   5                          }
1037   4                          //Saturation
1038   4                          if (i_aux < 0)
1039   4                              i_aux = 0;
1040   4                          else
1041   4                              if (i_aux > 1024) 
1042   4                                  i_aux = 1024;
1043   4                          
1044   4                          g_meas.emg[0] = i_aux;
1045   4              
1046   4                          if (interrupt_flag){
1047   5                              interrupt_flag = FALSE;
1048   5                              interrupt_manager();
1049   5                          }
1050   4                          
1051   4                          break;
1052   4      
1053   4                      case RESET: // reset variables
1054   4                          emg_counter_1 = 0;
1055   4                          g_mem.emg_max_value[0] = 0;
1056   4                          emg_1_status = DISCARD; // goto next status
1057   4                          
1058   4                          break;
1059   4      
1060   4                      case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
1061   4                          emg_counter_1++;
1062   4                          if (emg_counter_1 == EMG_SAMPLE_TO_DISCARD) {
1063   5                              emg_counter_1 = 0;          // reset counter
1064   5                              
1065   5                              LED_CTRL_Write(1);
1066   5                              LED_BLINK_EN_Write(0);
1067   5                                  
1068   5                              if (interrupt_flag){
1069   6                                  interrupt_flag = FALSE;
1070   6                                  interrupt_manager();
1071   6                              }
1072   5                              
1073   5                              emg_1_status = SUM_AND_MEAN;           // sum and mean status
1074   5                          }
1075   4                          break;
1076   4      
1077   4                      case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1078   4                          // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
1079   4                          emg_counter_1++;
1080   4                          if (ADC_buf[2] < 0) 
1081   4                              ADC_buf[2] = 0;
1082   4                          g_mem.emg_max_value[0] += filter_ch1((int32)ADC_buf[2]);
1083   4                          
1084   4                          if (interrupt_flag){
1085   5                              interrupt_flag = FALSE;
1086   5                              interrupt_manager();
1087   5                          }
1088   4                          
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 19  

1089   4                          if (emg_counter_1 == SAMPLES_FOR_EMG_MEAN) {
1090   5                              g_mem.emg_max_value[0] = g_mem.emg_max_value[0] / SAMPLES_FOR_EMG_MEAN; // calc me
             -an
1091   5              
1092   5                              if (interrupt_flag){
1093   6                                  interrupt_flag = FALSE;
1094   6                                  interrupt_manager();
1095   6                              }                    
1096   5                              
1097   5                              LED_CTRL_Write(0);
1098   5                              LED_BLINK_EN_Write(0);
1099   5                              
1100   5                              emg_counter_1 = 0;          // reset counter
1101   5      
1102   5                              emg_1_status = NORMAL;           // goto normal execution
1103   5                          }
1104   4                          break;
1105   4      
1106   4                      default:
1107   4                          break;
1108   4                  }
1109   3              
1110   3                  if (interrupt_flag){
1111   4                      interrupt_flag = FALSE;
1112   4                      interrupt_manager();
1113   4                  }
1114   3                  // EMG 2 calibration state machine
1115   3                  switch(emg_2_status) {
1116   4                      case NORMAL: // normal execution
1117   4                          i_aux = (int32)ADC_buf[3];
1118   4                          if (i_aux < 0)
1119   4                              i_aux = 0;
1120   4                          i_aux = filter_ch2(i_aux);
1121   4                          i_aux = (i_aux << 10) / g_mem.emg_max_value[1];
1122   4              
1123   4                          if (interrupt_flag){
1124   5                              interrupt_flag = FALSE;
1125   5                              interrupt_manager();
1126   5                          }
1127   4                          
1128   4                          if (i_aux < 0) 
1129   4                              i_aux = 0;
1130   4                          else
1131   4                              if (i_aux > 1024)
1132   4                                  i_aux = 1024;
1133   4                          
1134   4                          g_meas.emg[1] = i_aux;
1135   4      
1136   4                          break;
1137   4      
1138   4                      case RESET: // reset variables
1139   4                          emg_counter_2 = 0;
1140   4                          g_mem.emg_max_value[1] = 0;
1141   4              
1142   4                          if (interrupt_flag){
1143   5                              interrupt_flag = FALSE;
1144   5                              interrupt_manager();
1145   5                          }
1146   4                          
1147   4                          emg_2_status = WAIT; // wait for EMG 1 calibration
1148   4                          break;
1149   4      
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 20  

1150   4                      case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
1151   4                          emg_counter_2++;
1152   4                          if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
1153   5                              emg_counter_2 = 0;          // reset counter
1154   5                              
1155   5                              LED_CTRL_Write(1);
1156   5                              LED_BLINK_EN_Write(0);
1157   5              
1158   5                              if (interrupt_flag){
1159   6                                  interrupt_flag = FALSE;
1160   6                                  interrupt_manager();
1161   6                              }
1162   5                              
1163   5                              emg_2_status = SUM_AND_MEAN;           // sum and mean status
1164   5                          }
1165   4                          break;
1166   4      
1167   4                      case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1168   4                          // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
1169   4                          emg_counter_2++;
1170   4                          if (ADC_buf[3] < 0)
1171   4                              ADC_buf[3] = 0;
1172   4                          g_mem.emg_max_value[1] += filter_ch2((int32)ADC_buf[3]);
1173   4              
1174   4                          if (interrupt_flag){
1175   5                              interrupt_flag = FALSE;
1176   5                              interrupt_manager();
1177   5                          }
1178   4                          
1179   4                          if (emg_counter_2 == SAMPLES_FOR_EMG_MEAN) {
1180   5                              g_mem.emg_max_value[1] = g_mem.emg_max_value[1] / SAMPLES_FOR_EMG_MEAN; // calc me
             -an
1181   5                              
1182   5                              LED_CTRL_Write(0);
1183   5                              LED_BLINK_EN_Write(0);
1184   5                              
1185   5                              emg_counter_2 = 0;          // reset counter
1186   5                          
1187   5                              if (interrupt_flag){
1188   6                                  interrupt_flag = FALSE;
1189   6                                  interrupt_manager();
1190   6                              }
1191   5                              
1192   5                              emg_2_status = WAIT_EoC;           // goto end of calibration wait
1193   5                          }
1194   4                          break;
1195   4      
1196   4                      case WAIT: // wait for EMG calibration to be done
1197   4                          if (emg_1_status == NORMAL)
1198   4                              emg_2_status = DISCARD;           // goto discard sample
1199   4                          break;
1200   4      
1201   4                      case WAIT_EoC:  // wait for end of calibration procedure (only for LED visibility reasons)
1202   4                          emg_counter_2++;
1203   4                          if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
1204   5                              emg_counter_2 = 0;          // reset counter
1205   5      
1206   5                              if (interrupt_flag){
1207   6                                  interrupt_flag = FALSE;
1208   6                                  interrupt_manager();
1209   6                              }
1210   5                              
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 21  

1211   5                              // if EMG control mode active, activate motors accordingly with startup value
1212   5                              if ((c_mem.input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
1213   5                                  (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
1214   5                                  (c_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
1215   5                                  (c_mem.input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
1216   6                                  g_ref.pos[0] = g_meas.pos[0];
1217   6                                  g_ref.pos[1] = g_meas.pos[1];
1218   6                              }
1219   5                                  
1220   5                              emg_2_status = NORMAL;           // goto normal execution
1221   5                          }
1222   4                          break;
1223   4                          
1224   4                      default:
1225   4                          break;
1226   4                  }
1227   3                      
1228   3                  if (interrupt_flag){
1229   4                      interrupt_flag = FALSE;
1230   4                      interrupt_manager();
1231   4                  }
1232   3              }
1233   2          }
1234   1          else {
1235   2      
1236   2              emg_1_status = RESET; 
1237   2              emg_2_status = RESET;
1238   2      
1239   2              UD_status = RESET;
1240   2              LR_status = RESET;
1241   2                      
1242   2              tension_valid = FALSE;
1243   2              
1244   2              //fixed
1245   2              LED_CTRL_Write(1);
1246   2              //PWM Blink Enable
1247   2              LED_BLINK_EN_Write(0);
1248   2                  
1249   2              if (interrupt_flag){
1250   3                  interrupt_flag = FALSE;
1251   3                  interrupt_manager();
1252   3              }
1253   2              
1254   2              if (c_mem.emg_calibration_flag) {
1255   3                  if ((c_mem.input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
1256   3                      (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
1257   3                      (c_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
1258   3                      (c_mem.input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
1259   4                  }
1260   3              }
1261   2      
1262   2              // Reset emg
1263   2              g_meas.emg[0] = 0;
1264   2              g_meas.emg[1] = 0;
1265   2              
1266   2              // Reset Joystick
1267   2              g_meas.joystick[0] = 0;
1268   2              g_meas.joystick[1] = 0;
1269   2      
1270   2          }
1271   1          
1272   1          // The board LED blinks if attached battery is not fully charged
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 22  

1273   1          if (!first_tension_valid && tension_valid == TRUE && emg_1_status == NORMAL && emg_2_status == NORMAL)
             -{
1274   2              dev_tension_f = filter_voltage(dev_tension);
1275   2              if (dev_tension_f > 0.92 * pow_tension){
1276   3                  //fixed
1277   3                  LED_CTRL_Write(1);
1278   3                  
1279   3                  //PWM Blink Enable
1280   3                  LED_BLINK_EN_Write(0);
1281   3              }
1282   2              else {
1283   3                  // blink
1284   3                  LED_CTRL_Write(0);
1285   3                  
1286   3                  //PWM Blink Enable
1287   3                  LED_BLINK_EN_Write(1);
1288   3                  
1289   3                  // Disable slave or motors because of not fully charged battery
1290   3                  if (master_mode) {
1291   4                      deactivate_slaves();
1292   4                      
1293   4                      // Check Interrupt 
1294   4                      if (interrupt_flag){
1295   5                          interrupt_flag = FALSE;
1296   5                          interrupt_manager();
1297   5                      }
1298   4                      
1299   4                      master_mode = 0;        // exit from master mode
1300   4                  }
1301   3              }
1302   2          }
1303   1              
1304   1          if (interrupt_flag){
1305   2              interrupt_flag = FALSE;
1306   2              interrupt_manager();
1307   2          }
1308   1      }
1309          
1310          /* [] END OF FILE */
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 23  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION ISR_RS485_RX_ExInterrupt (BEGIN)
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 70
0000 D200        E     SETB    interrupt_flag
                                           ; SOURCE LINE # 72
0002 32                RETI    
             ; FUNCTION ISR_RS485_RX_ExInterrupt (END)

             ; FUNCTION interrupt_manager (BEGIN)
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 105
0000 E4                CLR     A
0001 F500        R     MOV     package_count,A
0003         ?C0002:
                                           ; SOURCE LINE # 111
0003 120000      E     LCALL   UART_RS485_GetRxBufferSize
0006 EF                MOV     A,R7
0007 7003              JNZ     $ + 5H
0009 020000      R     LJMP    ?C0025
000C E500        R     MOV     A,package_count
000E C3                CLR     C
000F 9406              SUBB    A,#06H
0011 4003              JC      $ + 5H
0013 020000      R     LJMP    ?C0025
                                           ; SOURCE LINE # 115
0016 120000      E     LCALL   UART_RS485_GetChar
0019 8F00        R     MOV     rx_data,R7
                                           ; SOURCE LINE # 117
001B E500        R     MOV     A,state
001D 14                DEC     A
001E 6049              JZ      ?C0009
0020 14                DEC     A
0021 6068              JZ      ?C0013
0023 14                DEC     A
0024 7003              JNZ     $ + 5H
0026 020000      R     LJMP    ?C0020
0029 14                DEC     A
002A 7003              JNZ     $ + 5H
002C 020000      R     LJMP    ?C0023
002F 2404              ADD     A,#04H
0031 70D0              JNZ     ?C0002
                                           ; SOURCE LINE # 119
0033         ?C0005:
                                           ; SOURCE LINE # 121
0033 850000      R     MOV     rx_queue,rx_queue+01H
                                           ; SOURCE LINE # 122
0036 850000      R     MOV     rx_queue+01H,rx_queue+02H
                                           ; SOURCE LINE # 123
0039 850000      R     MOV     rx_queue+02H,rx_data
                                           ; SOURCE LINE # 126
003C E500        R     MOV     A,rx_queue+01H
003E B43A11            CJNE    A,#03AH,?C0006
0041 E500        R     MOV     A,rx_queue+02H
0043 B43A0C            CJNE    A,#03AH,?C0006
                                           ; SOURCE LINE # 127
0046 E4                CLR     A
0047 F500        R     MOV     rx_queue,A
                                           ; SOURCE LINE # 128
0049 F500        R     MOV     rx_queue+01H,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 24  

                                           ; SOURCE LINE # 129
004B F500        R     MOV     rx_queue+02H,A
                                           ; SOURCE LINE # 130
004D 750001      R     MOV     state,#01H
                                           ; SOURCE LINE # 131
0050 80B1              SJMP    ?C0002
0052         ?C0006:
                                           ; SOURCE LINE # 132
0052 E500        R     MOV     A,rx_queue
0054 B43FAC            CJNE    A,#03FH,?C0002
0057 E500        R     MOV     A,rx_queue+01H
0059 B40DA7            CJNE    A,#0DH,?C0002
005C E500        R     MOV     A,rx_queue+02H
005E 640A              XRL     A,#0AH
0060 70A1              JNZ     ?C0002
                                           ; SOURCE LINE # 135
0062 FF                MOV     R7,A
0063 FE                MOV     R6,A
0064 120000      E     LCALL   _infoGet
                                           ; SOURCE LINE # 136
0067 809A              SJMP    ?C0002
                                           ; SOURCE LINE # 139
0069         ?C0009:
                                           ; SOURCE LINE # 142
0069 900000      E     MOV     DPTR,#c_mem+01H
006C E0                MOVX    A,@DPTR
006D 6500        R     XRL     A,rx_data
006F 600B              JZ      ?C0011
0071 E500        R     MOV     A,rx_data
0073 6007              JZ      ?C0011
0075 900000      E     MOV     DPTR,#c_mem+067H
0078 E0                MOVX    A,@DPTR
0079 B50004            CJNE    A,rx_data,?C0010
007C         ?C0011:
                                           ; SOURCE LINE # 143
007C C200        R     CLR     rx_data_type
007E 8002              SJMP    ?C0012
0080         ?C0010:
                                           ; SOURCE LINE # 145
0080 D200        R     SETB    rx_data_type
0082         ?C0012:
                                           ; SOURCE LINE # 147
0082 E4                CLR     A
0083 F500        R     MOV     data_packet_length,A
                                           ; SOURCE LINE # 148
0085 750002      R     MOV     state,#02H
                                           ; SOURCE LINE # 149
0088 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 152
008B         ?C0013:
                                           ; SOURCE LINE # 155
008B 850000      R     MOV     data_packet_length,rx_data
                                           ; SOURCE LINE # 157
008E E500        R     MOV     A,data_packet_length
0090 D3                SETB    C
0091 9401              SUBB    A,#01H
0093 5008              JNC     ?C0014
                                           ; SOURCE LINE # 158
0095 E4                CLR     A
0096 F500        R     MOV     data_packet_length,A
                                           ; SOURCE LINE # 159
0098 F500        R     MOV     state,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 25  

                                           ; SOURCE LINE # 160
009A 020000      R     LJMP    ?C0002
009D         ?C0014:
009D E500        R     MOV     A,data_packet_length
009F D3                SETB    C
00A0 9480              SUBB    A,#080H
00A2 4008              JC      ?C0016
                                           ; SOURCE LINE # 161
00A4 E4                CLR     A
00A5 F500        R     MOV     data_packet_length,A
                                           ; SOURCE LINE # 162
00A7 F500        R     MOV     state,A
                                           ; SOURCE LINE # 163
00A9 020000      R     LJMP    ?C0002
00AC         ?C0016:
                                           ; SOURCE LINE # 164
00AC E4                CLR     A
00AD F500        R     MOV     data_packet_index,A
                                           ; SOURCE LINE # 166
00AF 200006            JB      rx_data_type,?C0018
                                           ; SOURCE LINE # 167
00B2 750003      R     MOV     state,#03H
00B5 020000      R     LJMP    ?C0002
00B8         ?C0018:
                                           ; SOURCE LINE # 169
00B8 750004      R     MOV     state,#04H
                                           ; SOURCE LINE # 170
                                           ; SOURCE LINE # 171
00BB 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 174
00BE         ?C0020:
                                           ; SOURCE LINE # 176
00BE 7400        R     MOV     A,#LOW data_packet_buffer
00C0 2500        R     ADD     A,data_packet_index
00C2 F582              MOV     DPL,A
00C4 E4                CLR     A
00C5 3400        R     ADDC    A,#HIGH data_packet_buffer
00C7 F583              MOV     DPH,A
00C9 E500        R     MOV     A,rx_data
00CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 177
00CC 0500        R     INC     data_packet_index
                                           ; SOURCE LINE # 180
00CE E500        R     MOV     A,data_packet_index
00D0 C3                CLR     C
00D1 9500        R     SUBB    A,data_packet_length
00D3 5003              JNC     $ + 5H
00D5 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 182
00D8 200025            JB      rx_data_type,?C0022
                                           ; SOURCE LINE # 184
00DB AF00        R     MOV     R7,data_packet_length
00DD 7E00              MOV     R6,#00H
00DF 7800        E     MOV     R0,#LOW g_rx
00E1 7C00        E     MOV     R4,#HIGH g_rx
00E3 7D01              MOV     R5,#01H
00E5 7B01              MOV     R3,#01H
00E7 7A00        R     MOV     R2,#HIGH data_packet_buffer
00E9 7900        R     MOV     R1,#LOW data_packet_buffer
00EB 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 185
00EE 900000      E     MOV     DPTR,#g_rx+080H
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 26  

00F1 E4                CLR     A
00F2 F0                MOVX    @DPTR,A
00F3 A3                INC     DPTR
00F4 E500        R     MOV     A,data_packet_length
00F6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 186
00F7 900000      E     MOV     DPTR,#g_rx+084H
00FA 7401              MOV     A,#01H
00FC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 188
00FD 120000      E     LCALL   commProcess
                                           ; SOURCE LINE # 189
0100         ?C0022:
                                           ; SOURCE LINE # 191
0100 E4                CLR     A
0101 F500        R     MOV     data_packet_index,A
                                           ; SOURCE LINE # 192
0103 F500        R     MOV     data_packet_length,A
                                           ; SOURCE LINE # 193
0105 F500        R     MOV     state,A
                                           ; SOURCE LINE # 194
0107 0500        R     INC     package_count
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 197
0109 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 200
010C         ?C0023:
                                           ; SOURCE LINE # 201
010C 1500        R     DEC     data_packet_length
010E E500        R     MOV     A,data_packet_length
0110 6003              JZ      $ + 5H
0112 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 202
0115 F500        R     MOV     data_packet_index,A
                                           ; SOURCE LINE # 203
0117 F500        R     MOV     data_packet_length,A
                                           ; SOURCE LINE # 204
0119 7F01              MOV     R7,#01H
011B 120000      E     LCALL   _RS485_CTS_Write
                                           ; SOURCE LINE # 205
011E E4                CLR     A
011F FF                MOV     R7,A
0120 120000      E     LCALL   _RS485_CTS_Write
                                           ; SOURCE LINE # 206
0123 E4                CLR     A
0124 F500        R     MOV     state,A
                                           ; SOURCE LINE # 207
0126 0500        R     INC     package_count
                                           ; SOURCE LINE # 208
                                           ; SOURCE LINE # 209
0128 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 210
                                           ; SOURCE LINE # 211
012B 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 212
012E         ?C0025:
012E 22                RET     
             ; FUNCTION interrupt_manager (END)

             ; FUNCTION function_scheduler (BEGIN)
                                           ; SOURCE LINE # 221
                                           ; SOURCE LINE # 225
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 27  

0000 120000      E     LCALL   MY_TIMER_ReadCounter
0003 900000      E     MOV     DPTR,#timer_value0
0006 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 229
0009 7F01              MOV     R7,#01H
000B 120000      E     LCALL   _ADC_SOC_Write
                                           ; SOURCE LINE # 233
000E 300005            JNB     interrupt_flag,?C0026
                                           ; SOURCE LINE # 234
0011 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 235
0013 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 236
0016         ?C0026:
                                           ; SOURCE LINE # 240
0016 E4                CLR     A
0017 FF                MOV     R7,A
0018 120000      R     LCALL   _encoder_reading
                                           ; SOURCE LINE # 244
001B 300005            JNB     interrupt_flag,?C0027
                                           ; SOURCE LINE # 245
001E C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 246
0020 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 247
0023         ?C0027:
                                           ; SOURCE LINE # 249
0023 7F01              MOV     R7,#01H
0025 120000      R     LCALL   _encoder_reading
                                           ; SOURCE LINE # 253
0028 300005            JNB     interrupt_flag,?C0028
                                           ; SOURCE LINE # 254
002B C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 255
002D 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 256
0030         ?C0028:
                                           ; SOURCE LINE # 258
0030 7F02              MOV     R7,#02H
0032 120000      R     LCALL   _encoder_reading
                                           ; SOURCE LINE # 262
0035 300005            JNB     interrupt_flag,?C0029
                                           ; SOURCE LINE # 263
0038 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 264
003A 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 265
003D         ?C0029:
                                           ; SOURCE LINE # 269
003D 120000      R     LCALL   motor_control
                                           ; SOURCE LINE # 273
0040 300005            JNB     interrupt_flag,?C0030
                                           ; SOURCE LINE # 274
0043 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 275
0045 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 276
0048         ?C0030:
                                           ; SOURCE LINE # 280
0048 120000      R     LCALL   analog_read_end
                                           ; SOURCE LINE # 282
004B 300005            JNB     interrupt_flag,?C0031
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 28  

                                           ; SOURCE LINE # 283
004E C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 284
0050 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 285
0053         ?C0031:
                                           ; SOURCE LINE # 289
0053 900000      E     MOV     DPTR,#master_mode
0056 E0                MOVX    A,@DPTR
0057 7003              JNZ     $ + 5H
0059 020000      R     LJMP    ?C0032
                                           ; SOURCE LINE # 291
005C 900000      E     MOV     DPTR,#c_mem+056H
005F E0                MOVX    A,@DPTR
0060 6068              JZ      ?C0033
                                           ; SOURCE LINE # 294
0062 900000      E     MOV     DPTR,#c_mem+047H
0065 E0                MOVX    A,@DPTR
0066 6401              XRL     A,#01H
0068 7055              JNZ     ?C0034
                                           ; SOURCE LINE # 295
006A 900000      R     MOV     DPTR,#counter_calibration
006D E0                MOVX    A,@DPTR
006E 7004              JNZ     ?C0236
0070 A3                INC     DPTR
0071 E0                MOVX    A,@DPTR
0072 640A              XRL     A,#0AH
0074         ?C0236:
0074 7033              JNZ     ?C0035
                                           ; SOURCE LINE # 298
0076 900000      E     MOV     DPTR,#c_mem+054H
0079 E0                MOVX    A,@DPTR
007A 7004              JNZ     ?C0037
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E 6016              JZ      ?C0036
0080         ?C0037:
                                           ; SOURCE LINE # 299
0080 900000      E     MOV     DPTR,#SH_current_position
0083 E0                MOVX    A,@DPTR
0084 FC                MOV     R4,A
0085 A3                INC     DPTR
0086 E0                MOVX    A,@DPTR
0087 FD                MOV     R5,A
0088 A3                INC     DPTR
0089 E0                MOVX    A,@DPTR
008A FE                MOV     R6,A
008B A3                INC     DPTR
008C E0                MOVX    A,@DPTR
008D FF                MOV     R7,A
008E 900000      E     MOV     DPTR,#curr_pos_res
0091 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 300
0094 8009              SJMP    ?C0038
0096         ?C0036:
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 302
0096 120000      E     LCALL   commReadMeasFromSH
0099 900000      E     MOV     DPTR,#curr_pos_res
009C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 303
009F         ?C0038:
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 29  

                                           ; SOURCE LINE # 306
009F 120000      E     LCALL   check_rest_position
                                           ; SOURCE LINE # 307
00A2 E4                CLR     A
00A3 900000      R     MOV     DPTR,#counter_calibration
00A6 F0                MOVX    @DPTR,A
00A7 A3                INC     DPTR
00A8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 308
00A9         ?C0035:
                                           ; SOURCE LINE # 309
00A9 900000      R     MOV     DPTR,#counter_calibration+01H
00AC E0                MOVX    A,@DPTR
00AD 04                INC     A
00AE F0                MOVX    @DPTR,A
00AF 7006              JNZ     ?C0237
00B1 900000      R     MOV     DPTR,#counter_calibration
00B4 E0                MOVX    A,@DPTR
00B5 04                INC     A
00B6 F0                MOVX    @DPTR,A
00B7         ?C0237:
                                           ; SOURCE LINE # 312
00B7 300005            JNB     interrupt_flag,?C0034
                                           ; SOURCE LINE # 313
00BA C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 314
00BC 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 315
                                           ; SOURCE LINE # 316
00BF         ?C0034:
                                           ; SOURCE LINE # 318
00BF 120000      E     LCALL   drive_SH
                                           ; SOURCE LINE # 321
00C2 300005            JNB     interrupt_flag,?C0033
                                           ; SOURCE LINE # 322
00C5 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 323
00C7 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 324
                                           ; SOURCE LINE # 325
00CA         ?C0033:
                                           ; SOURCE LINE # 327
00CA 900000      E     MOV     DPTR,#c_mem+054H
00CD E0                MOVX    A,@DPTR
00CE 6020              JZ      ?C0041
                                           ; SOURCE LINE # 329
00D0 A3                INC     DPTR
00D1 E0                MOVX    A,@DPTR
00D2 6011              JZ      ?C0042
00D4 900000      E     MOV     DPTR,#c_mem+069H
00D7 E0                MOVX    A,@DPTR
00D8 FF                MOV     R7,A
00D9 900000      E     MOV     DPTR,#c_mem+068H
00DC E0                MOVX    A,@DPTR
00DD B50705            CJNE    A,AR7,?C0042
                                           ; SOURCE LINE # 330
00E0 120000      E     LCALL   drive_force_proprio_fb
                                           ; SOURCE LINE # 331
00E3 8003              SJMP    ?C0043
00E5         ?C0042:
                                           ; SOURCE LINE # 332
                                           ; SOURCE LINE # 333
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 30  

00E5 120000      E     LCALL   drive_force_fb
                                           ; SOURCE LINE # 334
00E8         ?C0043:
                                           ; SOURCE LINE # 337
00E8 300005            JNB     interrupt_flag,?C0041
                                           ; SOURCE LINE # 338
00EB C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 339
00ED 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 340
                                           ; SOURCE LINE # 342
00F0         ?C0041:
                                           ; SOURCE LINE # 344
00F0 900000      E     MOV     DPTR,#c_mem+055H
00F3 E0                MOVX    A,@DPTR
00F4 601D              JZ      ?C0032
                                           ; SOURCE LINE # 346
00F6 900000      E     MOV     DPTR,#c_mem+054H
00F9 E0                MOVX    A,@DPTR
00FA 600C              JZ      ?C0047
00FC 900000      E     MOV     DPTR,#c_mem+069H
00FF E0                MOVX    A,@DPTR
0100 FF                MOV     R7,A
0101 900000      E     MOV     DPTR,#c_mem+068H
0104 E0                MOVX    A,@DPTR
0105 6F                XRL     A,R7
0106 6003              JZ      ?C0046
0108         ?C0047:
                                           ; SOURCE LINE # 347
0108 120000      E     LCALL   drive_proprio_fb
                                           ; SOURCE LINE # 348
010B         ?C0046:
                                           ; SOURCE LINE # 351
010B 300005            JNB     interrupt_flag,?C0032
                                           ; SOURCE LINE # 352
010E C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 353
0110 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 354
                                           ; SOURCE LINE # 355
                                           ; SOURCE LINE # 357
0113         ?C0032:
                                           ; SOURCE LINE # 361
0113 300005            JNB     interrupt_flag,?C0049
                                           ; SOURCE LINE # 362
0116 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 363
0118 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 364
011B         ?C0049:
                                           ; SOURCE LINE # 369
011B 900000      E     MOV     DPTR,#calib
011E E0                MOVX    A,@DPTR
011F B40124            CJNE    A,#01H,?C0050
                                           ; SOURCE LINE # 370
0122 900000      R     MOV     DPTR,#counter_calibration
0125 E0                MOVX    A,@DPTR
0126 7004              JNZ     ?C0238
0128 A3                INC     DPTR
0129 E0                MOVX    A,@DPTR
012A 640A              XRL     A,#0AH
012C         ?C0238:
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 31  

012C 700A              JNZ     ?C0051
                                           ; SOURCE LINE # 371
012E 120000      E     LCALL   calibration
                                           ; SOURCE LINE # 372
0131 E4                CLR     A
0132 900000      R     MOV     DPTR,#counter_calibration
0135 F0                MOVX    @DPTR,A
0136 A3                INC     DPTR
0137 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 373
0138         ?C0051:
                                           ; SOURCE LINE # 374
0138 900000      R     MOV     DPTR,#counter_calibration+01H
013B E0                MOVX    A,@DPTR
013C 04                INC     A
013D F0                MOVX    @DPTR,A
013E 7006              JNZ     ?C0239
0140 900000      R     MOV     DPTR,#counter_calibration
0143 E0                MOVX    A,@DPTR
0144 04                INC     A
0145 F0                MOVX    @DPTR,A
0146         ?C0239:
                                           ; SOURCE LINE # 375
0146         ?C0050:
                                           ; SOURCE LINE # 379
0146 300005            JNB     interrupt_flag,?C0052
                                           ; SOURCE LINE # 380
0149 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 381
014B 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 382
014E         ?C0052:
                                           ; SOURCE LINE # 388
014E 7800        E     MOV     R0,#LOW g_measOld
0150 7C00        E     MOV     R4,#HIGH g_measOld
0152 7D01              MOV     R5,#01H
0154 7B01              MOV     R3,#01H
0156 7A00        E     MOV     R2,#HIGH g_meas
0158 7900        E     MOV     R1,#LOW g_meas
015A 7E00              MOV     R6,#00H
015C 7F33              MOV     R7,#033H
015E 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 389
0161 7800        E     MOV     R0,#LOW g_refOld
0163 7C00        E     MOV     R4,#HIGH g_refOld
0165 7D01              MOV     R5,#01H
0167 7B01              MOV     R3,#01H
0169 7A00        E     MOV     R2,#HIGH g_ref
016B 7900        E     MOV     R1,#LOW g_ref
016D 7E00              MOV     R6,#00H
016F 7F08              MOV     R7,#08H
0171 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 392
0174 7800        E     MOV     R0,#LOW g_ref
0176 7C00        E     MOV     R4,#HIGH g_ref
0178 7D01              MOV     R5,#01H
017A 7B01              MOV     R3,#01H
017C 7A00        E     MOV     R2,#HIGH g_refNew
017E 7900        E     MOV     R1,#LOW g_refNew
0180 7E00              MOV     R6,#00H
0182 7F08              MOV     R7,#08H
0184 120000      E     LCALL   ?C?COPYAMD
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 32  

                                           ; SOURCE LINE # 394
0187 300005            JNB     interrupt_flag,?C0053
                                           ; SOURCE LINE # 395
018A C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 396
018C 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 397
018F         ?C0053:
                                           ; SOURCE LINE # 399
018F 120000      E     LCALL   MY_TIMER_ReadCounter
0192 900000      E     MOV     DPTR,#timer_value
0195 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 400
0198 7F40              MOV     R7,#040H
019A 7E4B              MOV     R6,#04BH
019C 7D4C              MOV     R5,#04CH
019E 7C00              MOV     R4,#00H
01A0 120000      E     LCALL   _MY_TIMER_WriteCounter
                                           ; SOURCE LINE # 402
01A3 22                RET     
             ; FUNCTION function_scheduler (END)

             ; FUNCTION motor_control (BEGIN)
                                           ; SOURCE LINE # 408
                                           ; SOURCE LINE # 421
0000 900000      E     MOV     DPTR,#c_mem+037H
0003 E0                MOVX    A,@DPTR
0004 FE                MOV     R6,A
0005 A3                INC     DPTR
0006 E0                MOVX    A,@DPTR
0007 FF                MOV     R7,A
0008 FB                MOV     R3,A
0009 AA06              MOV     R2,AR6
000B E4                CLR     A
000C 900000      E     MOV     DPTR,#g_meas+0FH
000F E0                MOVX    A,@DPTR
0010 FC                MOV     R4,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 FD                MOV     R5,A
0014 A3                INC     DPTR
0015 E0                MOVX    A,@DPTR
0016 FE                MOV     R6,A
0017 A3                INC     DPTR
0018 E0                MOVX    A,@DPTR
0019 C3                CLR     C
001A 9B                SUBB    A,R3
001B F500        R     MOV     err_emg_1+03H,A
001D EE                MOV     A,R6
001E 9A                SUBB    A,R2
001F F500        R     MOV     err_emg_1+02H,A
0021 ED                MOV     A,R5
0022 9400              SUBB    A,#00H
0024 F500        R     MOV     err_emg_1+01H,A
0026 EC                MOV     A,R4
0027 9400              SUBB    A,#00H
0029 F500        R     MOV     err_emg_1,A
                                           ; SOURCE LINE # 422
002B 900000      E     MOV     DPTR,#c_mem+039H
002E E0                MOVX    A,@DPTR
002F FE                MOV     R6,A
0030 A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 33  

0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
0033 FB                MOV     R3,A
0034 AA06              MOV     R2,AR6
0036 E4                CLR     A
0037 900000      E     MOV     DPTR,#g_meas+013H
003A E0                MOVX    A,@DPTR
003B FC                MOV     R4,A
003C A3                INC     DPTR
003D E0                MOVX    A,@DPTR
003E FD                MOV     R5,A
003F A3                INC     DPTR
0040 E0                MOVX    A,@DPTR
0041 FE                MOV     R6,A
0042 A3                INC     DPTR
0043 E0                MOVX    A,@DPTR
0044 C3                CLR     C
0045 9B                SUBB    A,R3
0046 F500        R     MOV     err_emg_2+03H,A
0048 EE                MOV     A,R6
0049 9A                SUBB    A,R2
004A F500        R     MOV     err_emg_2+02H,A
004C ED                MOV     A,R5
004D 9400              SUBB    A,#00H
004F F500        R     MOV     err_emg_2+01H,A
0051 EC                MOV     A,R4
0052 9400              SUBB    A,#00H
0054 F500        R     MOV     err_emg_2,A
                                           ; SOURCE LINE # 425
0056 900000      E     MOV     DPTR,#c_mem+02H
0059 E0                MOVX    A,@DPTR
005A 24FE              ADD     A,#0FEH
005C 7003              JNZ     $ + 5H
005E 020000      R     LJMP    ?C0063
0061 14                DEC     A
0062 7003              JNZ     $ + 5H
0064 020000      R     LJMP    ?C0066
0067 14                DEC     A
0068 7003              JNZ     $ + 5H
006A 020000      R     LJMP    ?C0069
006D 14                DEC     A
006E 7003              JNZ     $ + 5H
0070 020000      R     LJMP    ?C0079
0073 14                DEC     A
0074 7003              JNZ     $ + 5H
0076 020000      R     LJMP    ?C0091
0079 2405              ADD     A,#05H
007B 6003              JZ      $ + 5H
007D 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 427
0080         ?C0056:
                                           ; SOURCE LINE # 429
0080 900000      E     MOV     DPTR,#master_mode
0083 E0                MOVX    A,@DPTR
0084 6026              JZ      ?C0057
                                           ; SOURCE LINE # 431
0086 900000      E     MOV     DPTR,#c_mem+045H
0089 E0                MOVX    A,@DPTR
008A FF                MOV     R7,A
008B 33                RLC     A
008C 95E0              SUBB    A,ACC
008E FE                MOV     R6,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 34  

008F FD                MOV     R5,A
0090 FC                MOV     R4,A
0091 900000      E     MOV     DPTR,#g_meas
0094 E0                MOVX    A,@DPTR
0095 F8                MOV     R0,A
0096 A3                INC     DPTR
0097 E0                MOVX    A,@DPTR
0098 F9                MOV     R1,A
0099 A3                INC     DPTR
009A E0                MOVX    A,@DPTR
009B FA                MOV     R2,A
009C A3                INC     DPTR
009D E0                MOVX    A,@DPTR
009E FB                MOV     R3,A
009F 120000      E     LCALL   ?C?LMUL
00A2 8F00        R     MOV     handle_value+03H,R7
00A4 8E00        R     MOV     handle_value+02H,R6
00A6 8D00        R     MOV     handle_value+01H,R5
00A8 8C00        R     MOV     handle_value,R4
                                           ; SOURCE LINE # 432
00AA 8009              SJMP    ?C0058
00AC         ?C0057:
                                           ; SOURCE LINE # 433
                                           ; SOURCE LINE # 437
00AC E4                CLR     A
00AD F500        R     MOV     handle_value+03H,A
00AF F500        R     MOV     handle_value+02H,A
00B1 F500        R     MOV     handle_value+01H,A
00B3 F500        R     MOV     handle_value,A
                                           ; SOURCE LINE # 438
00B5         ?C0058:
                                           ; SOURCE LINE # 441
00B5 900000      E     MOV     DPTR,#g_ref
00B8 E0                MOVX    A,@DPTR
00B9 F8                MOV     R0,A
00BA A3                INC     DPTR
00BB E0                MOVX    A,@DPTR
00BC F9                MOV     R1,A
00BD A3                INC     DPTR
00BE E0                MOVX    A,@DPTR
00BF FA                MOV     R2,A
00C0 A3                INC     DPTR
00C1 E0                MOVX    A,@DPTR
00C2 FB                MOV     R3,A
00C3 C3                CLR     C
00C4 E500        R     MOV     A,handle_value+03H
00C6 9B                SUBB    A,R3
00C7 FF                MOV     R7,A
00C8 E500        R     MOV     A,handle_value+02H
00CA 9A                SUBB    A,R2
00CB FE                MOV     R6,A
00CC E500        R     MOV     A,handle_value+01H
00CE 99                SUBB    A,R1
00CF FD                MOV     R5,A
00D0 E500        R     MOV     A,handle_value
00D2 98                SUBB    A,R0
00D3 FC                MOV     R4,A
00D4 900000      E     MOV     DPTR,#c_mem+02FH
00D7 E0                MOVX    A,@DPTR
00D8 F8                MOV     R0,A
00D9 A3                INC     DPTR
00DA E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 35  

00DB F9                MOV     R1,A
00DC A3                INC     DPTR
00DD E0                MOVX    A,@DPTR
00DE FA                MOV     R2,A
00DF A3                INC     DPTR
00E0 E0                MOVX    A,@DPTR
00E1 FB                MOV     R3,A
00E2 C3                CLR     C
00E3 120000      E     LCALL   ?C?SLCMP
00E6 5044              JNC     ?C0059
00E8 E4                CLR     A
00E9 FF                MOV     R7,A
00EA FE                MOV     R6,A
00EB FD                MOV     R5,A
00EC FC                MOV     R4,A
00ED 900000      E     MOV     DPTR,#c_mem+02FH
00F0 E0                MOVX    A,@DPTR
00F1 F8                MOV     R0,A
00F2 A3                INC     DPTR
00F3 E0                MOVX    A,@DPTR
00F4 A3                INC     DPTR
00F5 E0                MOVX    A,@DPTR
00F6 A3                INC     DPTR
00F7 E0                MOVX    A,@DPTR
00F8 C3                CLR     C
00F9 120000      E     LCALL   ?C?SLCMP
00FC 602E              JZ      ?C0059
                                           ; SOURCE LINE # 442
00FE 900000      E     MOV     DPTR,#g_ref
0101 E0                MOVX    A,@DPTR
0102 FC                MOV     R4,A
0103 A3                INC     DPTR
0104 E0                MOVX    A,@DPTR
0105 FD                MOV     R5,A
0106 A3                INC     DPTR
0107 E0                MOVX    A,@DPTR
0108 FE                MOV     R6,A
0109 A3                INC     DPTR
010A E0                MOVX    A,@DPTR
010B FF                MOV     R7,A
010C 900000      E     MOV     DPTR,#c_mem+02FH
010F E0                MOVX    A,@DPTR
0110 F8                MOV     R0,A
0111 A3                INC     DPTR
0112 E0                MOVX    A,@DPTR
0113 A3                INC     DPTR
0114 E0                MOVX    A,@DPTR
0115 A3                INC     DPTR
0116 E0                MOVX    A,@DPTR
0117 EF                MOV     A,R7
0118 2B                ADD     A,R3
0119 FF                MOV     R7,A
011A EE                MOV     A,R6
011B 3A                ADDC    A,R2
011C FE                MOV     R6,A
011D ED                MOV     A,R5
011E 39                ADDC    A,R1
011F FD                MOV     R5,A
0120 EC                MOV     A,R4
0121 38                ADDC    A,R0
0122 FC                MOV     R4,A
0123 900000      E     MOV     DPTR,#g_ref
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 36  

0126 120000      E     LCALL   ?C?LSTXDATA
0129 020000      R     LJMP    ?C0055
012C         ?C0059:
                                           ; SOURCE LINE # 443
                                           ; SOURCE LINE # 444
012C 900000      E     MOV     DPTR,#g_ref
012F E0                MOVX    A,@DPTR
0130 F8                MOV     R0,A
0131 A3                INC     DPTR
0132 E0                MOVX    A,@DPTR
0133 F9                MOV     R1,A
0134 A3                INC     DPTR
0135 E0                MOVX    A,@DPTR
0136 FA                MOV     R2,A
0137 A3                INC     DPTR
0138 E0                MOVX    A,@DPTR
0139 FB                MOV     R3,A
013A C3                CLR     C
013B E500        R     MOV     A,handle_value+03H
013D 9B                SUBB    A,R3
013E FF                MOV     R7,A
013F E500        R     MOV     A,handle_value+02H
0141 9A                SUBB    A,R2
0142 FE                MOV     R6,A
0143 E500        R     MOV     A,handle_value+01H
0145 99                SUBB    A,R1
0146 FD                MOV     R5,A
0147 E500        R     MOV     A,handle_value
0149 98                SUBB    A,R0
014A FC                MOV     R4,A
014B 900000      E     MOV     DPTR,#c_mem+033H
014E E0                MOVX    A,@DPTR
014F F8                MOV     R0,A
0150 A3                INC     DPTR
0151 E0                MOVX    A,@DPTR
0152 F9                MOV     R1,A
0153 A3                INC     DPTR
0154 E0                MOVX    A,@DPTR
0155 FA                MOV     R2,A
0156 A3                INC     DPTR
0157 E0                MOVX    A,@DPTR
0158 FB                MOV     R3,A
0159 D3                SETB    C
015A 120000      E     LCALL   ?C?SLCMP
015D 4043              JC      ?C0061
015F E4                CLR     A
0160 FF                MOV     R7,A
0161 FE                MOV     R6,A
0162 FD                MOV     R5,A
0163 FC                MOV     R4,A
0164 900000      E     MOV     DPTR,#c_mem+033H
0167 E0                MOVX    A,@DPTR
0168 F8                MOV     R0,A
0169 A3                INC     DPTR
016A E0                MOVX    A,@DPTR
016B A3                INC     DPTR
016C E0                MOVX    A,@DPTR
016D A3                INC     DPTR
016E E0                MOVX    A,@DPTR
016F 120000      E     LCALL   ?C?SLCMP
0172 602E              JZ      ?C0061
                                           ; SOURCE LINE # 445
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 37  

0174 900000      E     MOV     DPTR,#g_ref
0177 E0                MOVX    A,@DPTR
0178 FC                MOV     R4,A
0179 A3                INC     DPTR
017A E0                MOVX    A,@DPTR
017B FD                MOV     R5,A
017C A3                INC     DPTR
017D E0                MOVX    A,@DPTR
017E FE                MOV     R6,A
017F A3                INC     DPTR
0180 E0                MOVX    A,@DPTR
0181 FF                MOV     R7,A
0182 900000      E     MOV     DPTR,#c_mem+033H
0185 E0                MOVX    A,@DPTR
0186 F8                MOV     R0,A
0187 A3                INC     DPTR
0188 E0                MOVX    A,@DPTR
0189 A3                INC     DPTR
018A E0                MOVX    A,@DPTR
018B A3                INC     DPTR
018C E0                MOVX    A,@DPTR
018D EF                MOV     A,R7
018E 2B                ADD     A,R3
018F FF                MOV     R7,A
0190 EE                MOV     A,R6
0191 3A                ADDC    A,R2
0192 FE                MOV     R6,A
0193 ED                MOV     A,R5
0194 39                ADDC    A,R1
0195 FD                MOV     R5,A
0196 EC                MOV     A,R4
0197 38                ADDC    A,R0
0198 FC                MOV     R4,A
0199 900000      E     MOV     DPTR,#g_ref
019C 120000      E     LCALL   ?C?LSTXDATA
019F 020000      R     LJMP    ?C0055
01A2         ?C0061:
                                           ; SOURCE LINE # 447
01A2 AF00        R     MOV     R7,handle_value+03H
01A4 AE00        R     MOV     R6,handle_value+02H
01A6 AD00        R     MOV     R5,handle_value+01H
01A8 AC00        R     MOV     R4,handle_value
01AA 900000      E     MOV     DPTR,#g_ref
01AD 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 448
                                           ; SOURCE LINE # 449
01B0 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 451
01B3         ?C0063:
                                           ; SOURCE LINE # 452
01B3 E4                CLR     A
01B4 FF                MOV     R7,A
01B5 FE                MOV     R6,A
01B6 FD                MOV     R5,A
01B7 FC                MOV     R4,A
01B8 AB00        R     MOV     R3,err_emg_1+03H
01BA AA00        R     MOV     R2,err_emg_1+02H
01BC A900        R     MOV     R1,err_emg_1+01H
01BE A800        R     MOV     R0,err_emg_1
01C0 D3                SETB    C
01C1 120000      E     LCALL   ?C?SLCMP
01C4 403D              JC      ?C0064
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 38  

                                           ; SOURCE LINE # 453
01C6 900000      E     MOV     DPTR,#g_mem+027H
01C9 E0                MOVX    A,@DPTR
01CA FC                MOV     R4,A
01CB A3                INC     DPTR
01CC E0                MOVX    A,@DPTR
01CD FD                MOV     R5,A
01CE A3                INC     DPTR
01CF E0                MOVX    A,@DPTR
01D0 FE                MOV     R6,A
01D1 A3                INC     DPTR
01D2 E0                MOVX    A,@DPTR
01D3 FF                MOV     R7,A
01D4 A800        R     MOV     R0,err_emg_1
01D6 120000      E     LCALL   ?C?LMUL
01D9 C006              PUSH    AR6
01DB C007              PUSH    AR7
01DD 900000      E     MOV     DPTR,#c_mem+037H
01E0 E0                MOVX    A,@DPTR
01E1 FE                MOV     R6,A
01E2 A3                INC     DPTR
01E3 E0                MOVX    A,@DPTR
01E4 FF                MOV     R7,A
01E5 C3                CLR     C
01E6 E4                CLR     A
01E7 9F                SUBB    A,R7
01E8 FF                MOV     R7,A
01E9 7404              MOV     A,#04H
01EB 9E                SUBB    A,R6
01EC FE                MOV     R6,A
01ED AB07              MOV     R3,AR7
01EF FA                MOV     R2,A
01F0 E4                CLR     A
01F1 F9                MOV     R1,A
01F2 F8                MOV     R0,A
01F3 D007              POP     AR7
01F5 D006              POP     AR6
01F7 120000      E     LCALL   ?C?SLDIV
01FA 900000      E     MOV     DPTR,#g_ref
01FD 120000      E     LCALL   ?C?LSTXDATA
0200 020000      R     LJMP    ?C0055
0203         ?C0064:
                                           ; SOURCE LINE # 455
0203 E4                CLR     A
0204 FF                MOV     R7,A
0205 FE                MOV     R6,A
0206 FD                MOV     R5,A
0207 FC                MOV     R4,A
0208 900000      E     MOV     DPTR,#g_ref
020B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 456
020E 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 458
0211         ?C0066:
                                           ; SOURCE LINE # 459
0211 900000      E     MOV     DPTR,#g_refOld
0214 E0                MOVX    A,@DPTR
0215 FC                MOV     R4,A
0216 A3                INC     DPTR
0217 E0                MOVX    A,@DPTR
0218 FD                MOV     R5,A
0219 A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 39  

021A E0                MOVX    A,@DPTR
021B FE                MOV     R6,A
021C A3                INC     DPTR
021D E0                MOVX    A,@DPTR
021E FF                MOV     R7,A
021F 900000      E     MOV     DPTR,#g_ref
0222 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 460
0225 E4                CLR     A
0226 FF                MOV     R7,A
0227 FE                MOV     R6,A
0228 FD                MOV     R5,A
0229 FC                MOV     R4,A
022A AB00        R     MOV     R3,err_emg_1+03H
022C AA00        R     MOV     R2,err_emg_1+02H
022E A900        R     MOV     R1,err_emg_1+01H
0230 A800        R     MOV     R0,err_emg_1
0232 D3                SETB    C
0233 120000      E     LCALL   ?C?SLCMP
0236 4056              JC      ?C0067
                                           ; SOURCE LINE # 461
0238 900000      E     MOV     DPTR,#g_mem+044H
023B E0                MOVX    A,@DPTR
023C FF                MOV     R7,A
023D E4                CLR     A
023E FC                MOV     R4,A
023F FD                MOV     R5,A
0240 FE                MOV     R6,A
0241 A800        R     MOV     R0,err_emg_1
0243 120000      E     LCALL   ?C?LMUL
0246 E4                CLR     A
0247 7B02              MOV     R3,#02H
0249 FA                MOV     R2,A
024A F9                MOV     R1,A
024B F8                MOV     R0,A
024C 120000      E     LCALL   ?C?LMUL
024F C006              PUSH    AR6
0251 C007              PUSH    AR7
0253 900000      E     MOV     DPTR,#c_mem+037H
0256 E0                MOVX    A,@DPTR
0257 FE                MOV     R6,A
0258 A3                INC     DPTR
0259 E0                MOVX    A,@DPTR
025A FF                MOV     R7,A
025B C3                CLR     C
025C E4                CLR     A
025D 9F                SUBB    A,R7
025E FF                MOV     R7,A
025F 7404              MOV     A,#04H
0261 9E                SUBB    A,R6
0262 FE                MOV     R6,A
0263 AB07              MOV     R3,AR7
0265 FA                MOV     R2,A
0266 E4                CLR     A
0267 F9                MOV     R1,A
0268 F8                MOV     R0,A
0269 D007              POP     AR7
026B D006              POP     AR6
026D 120000      E     LCALL   ?C?SLDIV
0270 900000      E     MOV     DPTR,#g_refOld
0273 E0                MOVX    A,@DPTR
0274 F8                MOV     R0,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 40  

0275 A3                INC     DPTR
0276 E0                MOVX    A,@DPTR
0277 F9                MOV     R1,A
0278 A3                INC     DPTR
0279 E0                MOVX    A,@DPTR
027A FA                MOV     R2,A
027B A3                INC     DPTR
027C E0                MOVX    A,@DPTR
027D 2F                ADD     A,R7
027E FF                MOV     R7,A
027F EA                MOV     A,R2
0280 3E                ADDC    A,R6
0281 FE                MOV     R6,A
0282 E9                MOV     A,R1
0283 3D                ADDC    A,R5
0284 FD                MOV     R5,A
0285 E8                MOV     A,R0
0286 3C                ADDC    A,R4
0287 FC                MOV     R4,A
0288 900000      E     MOV     DPTR,#g_ref
028B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 462
028E         ?C0067:
                                           ; SOURCE LINE # 463
028E E4                CLR     A
028F FF                MOV     R7,A
0290 FE                MOV     R6,A
0291 FD                MOV     R5,A
0292 FC                MOV     R4,A
0293 AB00        R     MOV     R3,err_emg_2+03H
0295 AA00        R     MOV     R2,err_emg_2+02H
0297 A900        R     MOV     R1,err_emg_2+01H
0299 A800        R     MOV     R0,err_emg_2
029B D3                SETB    C
029C 120000      E     LCALL   ?C?SLCMP
029F 5003              JNC     $ + 5H
02A1 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 464
02A4 900000      E     MOV     DPTR,#g_mem+044H
02A7 E0                MOVX    A,@DPTR
02A8 FF                MOV     R7,A
02A9 E4                CLR     A
02AA FC                MOV     R4,A
02AB FD                MOV     R5,A
02AC FE                MOV     R6,A
02AD A800        R     MOV     R0,err_emg_2
02AF 120000      E     LCALL   ?C?LMUL
02B2 E4                CLR     A
02B3 7B02              MOV     R3,#02H
02B5 FA                MOV     R2,A
02B6 F9                MOV     R1,A
02B7 F8                MOV     R0,A
02B8 120000      E     LCALL   ?C?LMUL
02BB C006              PUSH    AR6
02BD C007              PUSH    AR7
02BF 900000      E     MOV     DPTR,#c_mem+039H
02C2 E0                MOVX    A,@DPTR
02C3 FE                MOV     R6,A
02C4 A3                INC     DPTR
02C5 E0                MOVX    A,@DPTR
02C6 FF                MOV     R7,A
02C7 C3                CLR     C
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 41  

02C8 E4                CLR     A
02C9 9F                SUBB    A,R7
02CA FF                MOV     R7,A
02CB 7404              MOV     A,#04H
02CD 9E                SUBB    A,R6
02CE FE                MOV     R6,A
02CF AB07              MOV     R3,AR7
02D1 FA                MOV     R2,A
02D2 E4                CLR     A
02D3 F9                MOV     R1,A
02D4 F8                MOV     R0,A
02D5 D007              POP     AR7
02D7 D006              POP     AR6
02D9 120000      E     LCALL   ?C?SLDIV
02DC A804              MOV     R0,AR4
02DE A905              MOV     R1,AR5
02E0 AA06              MOV     R2,AR6
02E2 AB07              MOV     R3,AR7
02E4 900000      E     MOV     DPTR,#g_refOld
02E7 E0                MOVX    A,@DPTR
02E8 FC                MOV     R4,A
02E9 A3                INC     DPTR
02EA E0                MOVX    A,@DPTR
02EB FD                MOV     R5,A
02EC A3                INC     DPTR
02ED E0                MOVX    A,@DPTR
02EE FE                MOV     R6,A
02EF A3                INC     DPTR
02F0 E0                MOVX    A,@DPTR
02F1 C3                CLR     C
02F2 9B                SUBB    A,R3
02F3 FF                MOV     R7,A
02F4 EE                MOV     A,R6
02F5 9A                SUBB    A,R2
02F6 FE                MOV     R6,A
02F7 ED                MOV     A,R5
02F8 99                SUBB    A,R1
02F9 FD                MOV     R5,A
02FA EC                MOV     A,R4
02FB 98                SUBB    A,R0
02FC FC                MOV     R4,A
02FD 900000      E     MOV     DPTR,#g_ref
0300 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 465
                                           ; SOURCE LINE # 466
0303 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 468
0306         ?C0069:
                                           ; SOURCE LINE # 469
0306 900000      E     MOV     DPTR,#g_refOld
0309 E0                MOVX    A,@DPTR
030A FC                MOV     R4,A
030B A3                INC     DPTR
030C E0                MOVX    A,@DPTR
030D FD                MOV     R5,A
030E A3                INC     DPTR
030F E0                MOVX    A,@DPTR
0310 FE                MOV     R6,A
0311 A3                INC     DPTR
0312 E0                MOVX    A,@DPTR
0313 FF                MOV     R7,A
0314 900000      E     MOV     DPTR,#g_ref
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 42  

0317 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 470
031A 900000      R     MOV     DPTR,#current_emg
031D E0                MOVX    A,@DPTR
031E 14                DEC     A
031F 6048              JZ      ?C0074
0321 14                DEC     A
0322 7003              JNZ     $ + 5H
0324 020000      R     LJMP    ?C0076
0327 2402              ADD     A,#02H
0329 6003              JZ      $ + 5H
032B 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 471
032E         ?C0071:
                                           ; SOURCE LINE # 473
032E E4                CLR     A
032F FF                MOV     R7,A
0330 FE                MOV     R6,A
0331 FD                MOV     R5,A
0332 FC                MOV     R4,A
0333 AB00        R     MOV     R3,err_emg_1+03H
0335 AA00        R     MOV     R2,err_emg_1+02H
0337 A900        R     MOV     R1,err_emg_1+01H
0339 A800        R     MOV     R0,err_emg_1
033B D3                SETB    C
033C 120000      E     LCALL   ?C?SLCMP
033F 4009              JC      ?C0072
                                           ; SOURCE LINE # 474
0341 900000      R     MOV     DPTR,#current_emg
0344 7401              MOV     A,#01H
0346 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 475
0347 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 476
034A         ?C0072:
                                           ; SOURCE LINE # 477
034A E4                CLR     A
034B FF                MOV     R7,A
034C FE                MOV     R6,A
034D FD                MOV     R5,A
034E FC                MOV     R4,A
034F AB00        R     MOV     R3,err_emg_2+03H
0351 AA00        R     MOV     R2,err_emg_2+02H
0353 A900        R     MOV     R1,err_emg_2+01H
0355 A800        R     MOV     R0,err_emg_2
0357 D3                SETB    C
0358 120000      E     LCALL   ?C?SLCMP
035B 5003              JNC     $ + 5H
035D 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 478
0360 900000      R     MOV     DPTR,#current_emg
0363 7402              MOV     A,#02H
0365 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 479
0366 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 480
                                           ; SOURCE LINE # 481
                                           ; SOURCE LINE # 483
0369         ?C0074:
                                           ; SOURCE LINE # 485
0369 E4                CLR     A
036A FF                MOV     R7,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 43  

036B FE                MOV     R6,A
036C FD                MOV     R5,A
036D FC                MOV     R4,A
036E AB00        R     MOV     R3,err_emg_1+03H
0370 AA00        R     MOV     R2,err_emg_1+02H
0372 A900        R     MOV     R1,err_emg_1+01H
0374 A800        R     MOV     R0,err_emg_1
0376 C3                CLR     C
0377 120000      E     LCALL   ?C?SLCMP
037A 5008              JNC     ?C0075
                                           ; SOURCE LINE # 486
037C E4                CLR     A
037D 900000      R     MOV     DPTR,#current_emg
0380 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 487
0381 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 488
0384         ?C0075:
                                           ; SOURCE LINE # 489
0384 900000      E     MOV     DPTR,#g_mem+044H
0387 E0                MOVX    A,@DPTR
0388 FF                MOV     R7,A
0389 E4                CLR     A
038A FC                MOV     R4,A
038B FD                MOV     R5,A
038C FE                MOV     R6,A
038D AB00        R     MOV     R3,err_emg_1+03H
038F AA00        R     MOV     R2,err_emg_1+02H
0391 A900        R     MOV     R1,err_emg_1+01H
0393 A800        R     MOV     R0,err_emg_1
0395 120000      E     LCALL   ?C?LMUL
0398 E4                CLR     A
0399 7B02              MOV     R3,#02H
039B FA                MOV     R2,A
039C F9                MOV     R1,A
039D F8                MOV     R0,A
039E 120000      E     LCALL   ?C?LMUL
03A1 C006              PUSH    AR6
03A3 C007              PUSH    AR7
03A5 900000      E     MOV     DPTR,#c_mem+037H
03A8 E0                MOVX    A,@DPTR
03A9 FE                MOV     R6,A
03AA A3                INC     DPTR
03AB E0                MOVX    A,@DPTR
03AC FF                MOV     R7,A
03AD C3                CLR     C
03AE E4                CLR     A
03AF 9F                SUBB    A,R7
03B0 FF                MOV     R7,A
03B1 7404              MOV     A,#04H
03B3 9E                SUBB    A,R6
03B4 FE                MOV     R6,A
03B5 AB07              MOV     R3,AR7
03B7 FA                MOV     R2,A
03B8 E4                CLR     A
03B9 F9                MOV     R1,A
03BA F8                MOV     R0,A
03BB D007              POP     AR7
03BD D006              POP     AR6
03BF 120000      E     LCALL   ?C?SLDIV
03C2 900000      E     MOV     DPTR,#g_refOld
03C5 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 44  

03C6 F8                MOV     R0,A
03C7 A3                INC     DPTR
03C8 E0                MOVX    A,@DPTR
03C9 F9                MOV     R1,A
03CA A3                INC     DPTR
03CB E0                MOVX    A,@DPTR
03CC FA                MOV     R2,A
03CD A3                INC     DPTR
03CE E0                MOVX    A,@DPTR
03CF 2F                ADD     A,R7
03D0 FF                MOV     R7,A
03D1 EA                MOV     A,R2
03D2 3E                ADDC    A,R6
03D3 FE                MOV     R6,A
03D4 E9                MOV     A,R1
03D5 3D                ADDC    A,R5
03D6 FD                MOV     R5,A
03D7 E8                MOV     A,R0
03D8 3C                ADDC    A,R4
03D9 FC                MOV     R4,A
03DA 900000      E     MOV     DPTR,#g_ref
03DD 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 490
03E0 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 492
03E3         ?C0076:
                                           ; SOURCE LINE # 494
03E3 E4                CLR     A
03E4 FF                MOV     R7,A
03E5 FE                MOV     R6,A
03E6 FD                MOV     R5,A
03E7 FC                MOV     R4,A
03E8 AB00        R     MOV     R3,err_emg_2+03H
03EA AA00        R     MOV     R2,err_emg_2+02H
03EC A900        R     MOV     R1,err_emg_2+01H
03EE A800        R     MOV     R0,err_emg_2
03F0 C3                CLR     C
03F1 120000      E     LCALL   ?C?SLCMP
03F4 5008              JNC     ?C0077
                                           ; SOURCE LINE # 495
03F6 E4                CLR     A
03F7 900000      R     MOV     DPTR,#current_emg
03FA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 496
03FB 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 497
03FE         ?C0077:
                                           ; SOURCE LINE # 498
03FE 900000      E     MOV     DPTR,#g_mem+044H
0401 E0                MOVX    A,@DPTR
0402 FF                MOV     R7,A
0403 E4                CLR     A
0404 FC                MOV     R4,A
0405 FD                MOV     R5,A
0406 FE                MOV     R6,A
0407 AB00        R     MOV     R3,err_emg_2+03H
0409 AA00        R     MOV     R2,err_emg_2+02H
040B A900        R     MOV     R1,err_emg_2+01H
040D A800        R     MOV     R0,err_emg_2
040F 120000      E     LCALL   ?C?LMUL
0412 E4                CLR     A
0413 7B02              MOV     R3,#02H
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 45  

0415 FA                MOV     R2,A
0416 F9                MOV     R1,A
0417 F8                MOV     R0,A
0418 120000      E     LCALL   ?C?LMUL
041B C006              PUSH    AR6
041D C007              PUSH    AR7
041F 900000      E     MOV     DPTR,#c_mem+039H
0422 E0                MOVX    A,@DPTR
0423 FE                MOV     R6,A
0424 A3                INC     DPTR
0425 E0                MOVX    A,@DPTR
0426 FF                MOV     R7,A
0427 C3                CLR     C
0428 E4                CLR     A
0429 9F                SUBB    A,R7
042A FF                MOV     R7,A
042B 7404              MOV     A,#04H
042D 9E                SUBB    A,R6
042E FE                MOV     R6,A
042F AB07              MOV     R3,AR7
0431 FA                MOV     R2,A
0432 E4                CLR     A
0433 F9                MOV     R1,A
0434 F8                MOV     R0,A
0435 D007              POP     AR7
0437 D006              POP     AR6
0439 120000      E     LCALL   ?C?SLDIV
043C A804              MOV     R0,AR4
043E A905              MOV     R1,AR5
0440 AA06              MOV     R2,AR6
0442 AB07              MOV     R3,AR7
0444 900000      E     MOV     DPTR,#g_refOld
0447 E0                MOVX    A,@DPTR
0448 FC                MOV     R4,A
0449 A3                INC     DPTR
044A E0                MOVX    A,@DPTR
044B FD                MOV     R5,A
044C A3                INC     DPTR
044D E0                MOVX    A,@DPTR
044E FE                MOV     R6,A
044F A3                INC     DPTR
0450 E0                MOVX    A,@DPTR
0451 C3                CLR     C
0452 9B                SUBB    A,R3
0453 FF                MOV     R7,A
0454 EE                MOV     A,R6
0455 9A                SUBB    A,R2
0456 FE                MOV     R6,A
0457 ED                MOV     A,R5
0458 99                SUBB    A,R1
0459 FD                MOV     R5,A
045A EC                MOV     A,R4
045B 98                SUBB    A,R0
045C FC                MOV     R4,A
045D 900000      E     MOV     DPTR,#g_ref
0460 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 499
0463 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 501
                                           ; SOURCE LINE # 502
                                           ; SOURCE LINE # 503
                                           ; SOURCE LINE # 505
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 46  

0466 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 507
0469         ?C0079:
                                           ; SOURCE LINE # 508
0469 900000      E     MOV     DPTR,#g_refOld
046C E0                MOVX    A,@DPTR
046D FC                MOV     R4,A
046E A3                INC     DPTR
046F E0                MOVX    A,@DPTR
0470 FD                MOV     R5,A
0471 A3                INC     DPTR
0472 E0                MOVX    A,@DPTR
0473 FE                MOV     R6,A
0474 A3                INC     DPTR
0475 E0                MOVX    A,@DPTR
0476 FF                MOV     R7,A
0477 900000      E     MOV     DPTR,#g_ref
047A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 509
047D 900000      R     MOV     DPTR,#current_emg
0480 E0                MOVX    A,@DPTR
0481 14                DEC     A
0482 6048              JZ      ?C0084
0484 14                DEC     A
0485 7003              JNZ     $ + 5H
0487 020000      R     LJMP    ?C0087
048A 2402              ADD     A,#02H
048C 6003              JZ      $ + 5H
048E 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 511
0491         ?C0081:
                                           ; SOURCE LINE # 512
0491 E4                CLR     A
0492 FF                MOV     R7,A
0493 FE                MOV     R6,A
0494 FD                MOV     R5,A
0495 FC                MOV     R4,A
0496 AB00        R     MOV     R3,err_emg_1+03H
0498 AA00        R     MOV     R2,err_emg_1+02H
049A A900        R     MOV     R1,err_emg_1+01H
049C A800        R     MOV     R0,err_emg_1
049E D3                SETB    C
049F 120000      E     LCALL   ?C?SLCMP
04A2 4009              JC      ?C0082
                                           ; SOURCE LINE # 513
04A4 900000      R     MOV     DPTR,#current_emg
04A7 7401              MOV     A,#01H
04A9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 514
04AA 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 515
04AD         ?C0082:
                                           ; SOURCE LINE # 516
04AD E4                CLR     A
04AE FF                MOV     R7,A
04AF FE                MOV     R6,A
04B0 FD                MOV     R5,A
04B1 FC                MOV     R4,A
04B2 AB00        R     MOV     R3,err_emg_2+03H
04B4 AA00        R     MOV     R2,err_emg_2+02H
04B6 A900        R     MOV     R1,err_emg_2+01H
04B8 A800        R     MOV     R0,err_emg_2
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 47  

04BA D3                SETB    C
04BB 120000      E     LCALL   ?C?SLCMP
04BE 5003              JNC     $ + 5H
04C0 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 517
04C3 900000      R     MOV     DPTR,#current_emg
04C6 7402              MOV     A,#02H
04C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 518
04C9 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 519
                                           ; SOURCE LINE # 520
                                           ; SOURCE LINE # 523
04CC         ?C0084:
                                           ; SOURCE LINE # 525
04CC E4                CLR     A
04CD FF                MOV     R7,A
04CE FE                MOV     R6,A
04CF FD                MOV     R5,A
04D0 FC                MOV     R4,A
04D1 AB00        R     MOV     R3,err_emg_1+03H
04D3 AA00        R     MOV     R2,err_emg_1+02H
04D5 A900        R     MOV     R1,err_emg_1+01H
04D7 A800        R     MOV     R0,err_emg_1
04D9 C3                CLR     C
04DA 120000      E     LCALL   ?C?SLCMP
04DD 501B              JNC     ?C0085
04DF E4                CLR     A
04E0 FF                MOV     R7,A
04E1 FE                MOV     R6,A
04E2 FD                MOV     R5,A
04E3 FC                MOV     R4,A
04E4 AB00        R     MOV     R3,err_emg_2+03H
04E6 AA00        R     MOV     R2,err_emg_2+02H
04E8 A900        R     MOV     R1,err_emg_2+01H
04EA A800        R     MOV     R0,err_emg_2
04EC C3                CLR     C
04ED 120000      E     LCALL   ?C?SLCMP
04F0 5008              JNC     ?C0085
                                           ; SOURCE LINE # 526
04F2 E4                CLR     A
04F3 900000      R     MOV     DPTR,#current_emg
04F6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 527
04F7 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 528
04FA         ?C0085:
                                           ; SOURCE LINE # 530
04FA E4                CLR     A
04FB FF                MOV     R7,A
04FC FE                MOV     R6,A
04FD FD                MOV     R5,A
04FE FC                MOV     R4,A
04FF AB00        R     MOV     R3,err_emg_1+03H
0501 AA00        R     MOV     R2,err_emg_1+02H
0503 A900        R     MOV     R1,err_emg_1+01H
0505 A800        R     MOV     R0,err_emg_1
0507 D3                SETB    C
0508 120000      E     LCALL   ?C?SLCMP
050B 5003              JNC     $ + 5H
050D 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 531
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 48  

0510 900000      E     MOV     DPTR,#g_mem+044H
0513 E0                MOVX    A,@DPTR
0514 FF                MOV     R7,A
0515 E4                CLR     A
0516 FC                MOV     R4,A
0517 FD                MOV     R5,A
0518 FE                MOV     R6,A
0519 A800        R     MOV     R0,err_emg_1
051B 120000      E     LCALL   ?C?LMUL
051E 7802              MOV     R0,#02H
0520 120000      E     LCALL   ?C?LSHL
0523 C006              PUSH    AR6
0525 C007              PUSH    AR7
0527 900000      E     MOV     DPTR,#c_mem+037H
052A E0                MOVX    A,@DPTR
052B FE                MOV     R6,A
052C A3                INC     DPTR
052D E0                MOVX    A,@DPTR
052E FF                MOV     R7,A
052F C3                CLR     C
0530 E4                CLR     A
0531 9F                SUBB    A,R7
0532 FF                MOV     R7,A
0533 7404              MOV     A,#04H
0535 9E                SUBB    A,R6
0536 FE                MOV     R6,A
0537 AB07              MOV     R3,AR7
0539 FA                MOV     R2,A
053A E4                CLR     A
053B F9                MOV     R1,A
053C F8                MOV     R0,A
053D D007              POP     AR7
053F D006              POP     AR6
0541 120000      E     LCALL   ?C?SLDIV
0544 900000      E     MOV     DPTR,#g_refOld
0547 E0                MOVX    A,@DPTR
0548 F8                MOV     R0,A
0549 A3                INC     DPTR
054A E0                MOVX    A,@DPTR
054B F9                MOV     R1,A
054C A3                INC     DPTR
054D E0                MOVX    A,@DPTR
054E FA                MOV     R2,A
054F A3                INC     DPTR
0550 E0                MOVX    A,@DPTR
0551 2F                ADD     A,R7
0552 FF                MOV     R7,A
0553 EA                MOV     A,R2
0554 3E                ADDC    A,R6
0555 FE                MOV     R6,A
0556 E9                MOV     A,R1
0557 3D                ADDC    A,R5
0558 FD                MOV     R5,A
0559 E8                MOV     A,R0
055A 3C                ADDC    A,R4
055B FC                MOV     R4,A
055C 900000      E     MOV     DPTR,#g_ref
055F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 533
0562 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 536
0565         ?C0087:
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 49  

                                           ; SOURCE LINE # 538
0565 E4                CLR     A
0566 FF                MOV     R7,A
0567 FE                MOV     R6,A
0568 FD                MOV     R5,A
0569 FC                MOV     R4,A
056A AB00        R     MOV     R3,err_emg_1+03H
056C AA00        R     MOV     R2,err_emg_1+02H
056E A900        R     MOV     R1,err_emg_1+01H
0570 A800        R     MOV     R0,err_emg_1
0572 C3                CLR     C
0573 120000      E     LCALL   ?C?SLCMP
0576 501B              JNC     ?C0088
0578 E4                CLR     A
0579 FF                MOV     R7,A
057A FE                MOV     R6,A
057B FD                MOV     R5,A
057C FC                MOV     R4,A
057D AB00        R     MOV     R3,err_emg_2+03H
057F AA00        R     MOV     R2,err_emg_2+02H
0581 A900        R     MOV     R1,err_emg_2+01H
0583 A800        R     MOV     R0,err_emg_2
0585 C3                CLR     C
0586 120000      E     LCALL   ?C?SLCMP
0589 5008              JNC     ?C0088
                                           ; SOURCE LINE # 539
058B E4                CLR     A
058C 900000      R     MOV     DPTR,#current_emg
058F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 540
0590 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 541
0593         ?C0088:
                                           ; SOURCE LINE # 543
0593 E4                CLR     A
0594 FF                MOV     R7,A
0595 FE                MOV     R6,A
0596 FD                MOV     R5,A
0597 FC                MOV     R4,A
0598 AB00        R     MOV     R3,err_emg_2+03H
059A AA00        R     MOV     R2,err_emg_2+02H
059C A900        R     MOV     R1,err_emg_2+01H
059E A800        R     MOV     R0,err_emg_2
05A0 D3                SETB    C
05A1 120000      E     LCALL   ?C?SLCMP
05A4 5003              JNC     $ + 5H
05A6 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 544
05A9 900000      E     MOV     DPTR,#c_mem+044H
05AC E0                MOVX    A,@DPTR
05AD FF                MOV     R7,A
05AE E4                CLR     A
05AF FC                MOV     R4,A
05B0 FD                MOV     R5,A
05B1 FE                MOV     R6,A
05B2 A800        R     MOV     R0,err_emg_2
05B4 120000      E     LCALL   ?C?LMUL
05B7 7802              MOV     R0,#02H
05B9 120000      E     LCALL   ?C?LSHL
05BC C006              PUSH    AR6
05BE C007              PUSH    AR7
05C0 900000      E     MOV     DPTR,#c_mem+039H
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 50  

05C3 E0                MOVX    A,@DPTR
05C4 FE                MOV     R6,A
05C5 A3                INC     DPTR
05C6 E0                MOVX    A,@DPTR
05C7 FF                MOV     R7,A
05C8 C3                CLR     C
05C9 E4                CLR     A
05CA 9F                SUBB    A,R7
05CB FF                MOV     R7,A
05CC 7404              MOV     A,#04H
05CE 9E                SUBB    A,R6
05CF FE                MOV     R6,A
05D0 AB07              MOV     R3,AR7
05D2 FA                MOV     R2,A
05D3 E4                CLR     A
05D4 F9                MOV     R1,A
05D5 F8                MOV     R0,A
05D6 D007              POP     AR7
05D8 D006              POP     AR6
05DA 120000      E     LCALL   ?C?SLDIV
05DD A804              MOV     R0,AR4
05DF A905              MOV     R1,AR5
05E1 AA06              MOV     R2,AR6
05E3 AB07              MOV     R3,AR7
05E5 900000      E     MOV     DPTR,#g_refOld
05E8 E0                MOVX    A,@DPTR
05E9 FC                MOV     R4,A
05EA A3                INC     DPTR
05EB E0                MOVX    A,@DPTR
05EC FD                MOV     R5,A
05ED A3                INC     DPTR
05EE E0                MOVX    A,@DPTR
05EF FE                MOV     R6,A
05F0 A3                INC     DPTR
05F1 E0                MOVX    A,@DPTR
05F2 C3                CLR     C
05F3 9B                SUBB    A,R3
05F4 FF                MOV     R7,A
05F5 EE                MOV     A,R6
05F6 9A                SUBB    A,R2
05F7 FE                MOV     R6,A
05F8 ED                MOV     A,R5
05F9 99                SUBB    A,R1
05FA FD                MOV     R5,A
05FB EC                MOV     A,R4
05FC 98                SUBB    A,R0
05FD FC                MOV     R4,A
05FE 900000      E     MOV     DPTR,#g_ref
0601 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 545
                                           ; SOURCE LINE # 546
0604 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 548
                                           ; SOURCE LINE # 549
                                           ; SOURCE LINE # 550
                                           ; SOURCE LINE # 552
0607 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 554
060A         ?C0091:
                                           ; SOURCE LINE # 556
060A 900000      E     MOV     DPTR,#c_mem+06DH
060D E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 51  

060E FC                MOV     R4,A
060F A3                INC     DPTR
0610 E0                MOVX    A,@DPTR
0611 FD                MOV     R5,A
0612 E4                CLR     A
0613 120000      E     LCALL   ?C?FCASTI
0616 E4                CLR     A
0617 FB                MOV     R3,A
0618 FA                MOV     R2,A
0619 F9                MOV     R1,A
061A 7840              MOV     R0,#040H
061C 120000      E     LCALL   ?C?FPDIV
061F C004              PUSH    AR4
0621 C005              PUSH    AR5
0623 C006              PUSH    AR6
0625 C007              PUSH    AR7
0627 900000      E     MOV     DPTR,#g_meas+02FH
062A E0                MOVX    A,@DPTR
062B FC                MOV     R4,A
062C A3                INC     DPTR
062D E0                MOVX    A,@DPTR
062E FD                MOV     R5,A
062F EC                MOV     A,R4
0630 120000      E     LCALL   ?C?FCASTI
0633 D003              POP     AR3
0635 D002              POP     AR2
0637 D001              POP     AR1
0639 D000              POP     AR0
063B 120000      E     LCALL   ?C?FPDIV
063E 8F00        R     MOV     joy_perc+03H,R7
0640 8E00        R     MOV     joy_perc+02H,R6
0642 8D00        R     MOV     joy_perc+01H,R5
0644 8C00        R     MOV     joy_perc,R4
                                           ; SOURCE LINE # 557
0646 900000      E     MOV     DPTR,#c_mem+06BH
0649 E0                MOVX    A,@DPTR
064A FC                MOV     R4,A
064B A3                INC     DPTR
064C E0                MOVX    A,@DPTR
064D FD                MOV     R5,A
064E E4                CLR     A
064F 120000      E     LCALL   ?C?FCASTI
0652 AB00        R     MOV     R3,joy_perc+03H
0654 AA00        R     MOV     R2,joy_perc+02H
0656 A900        R     MOV     R1,joy_perc+01H
0658 A800        R     MOV     R0,joy_perc
065A 120000      E     LCALL   ?C?FPMUL
065D C004              PUSH    AR4
065F C005              PUSH    AR5
0661 C006              PUSH    AR6
0663 C007              PUSH    AR7
0665 900000      E     MOV     DPTR,#g_refOld
0668 E0                MOVX    A,@DPTR
0669 FC                MOV     R4,A
066A A3                INC     DPTR
066B E0                MOVX    A,@DPTR
066C FD                MOV     R5,A
066D A3                INC     DPTR
066E E0                MOVX    A,@DPTR
066F FE                MOV     R6,A
0670 A3                INC     DPTR
0671 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 52  

0672 FF                MOV     R7,A
0673 EC                MOV     A,R4
0674 120000      E     LCALL   ?C?FCASTL
0677 D003              POP     AR3
0679 D002              POP     AR2
067B D001              POP     AR1
067D D000              POP     AR0
067F 120000      E     LCALL   ?C?FPADD
0682 120000      E     LCALL   ?C?CASTF
0685 900000      E     MOV     DPTR,#g_ref
0688 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 559
                                           ; SOURCE LINE # 560
                                           ; SOURCE LINE # 561
                                           ; SOURCE LINE # 562
068B         ?C0055:
                                           ; SOURCE LINE # 565
068B 900000      E     MOV     DPTR,#c_mem+01EH
068E E0                MOVX    A,@DPTR
068F 606A              JZ      ?C0093
                                           ; SOURCE LINE # 566
0691 A3                INC     DPTR
0692 E0                MOVX    A,@DPTR
0693 FC                MOV     R4,A
0694 A3                INC     DPTR
0695 E0                MOVX    A,@DPTR
0696 FD                MOV     R5,A
0697 A3                INC     DPTR
0698 E0                MOVX    A,@DPTR
0699 FE                MOV     R6,A
069A A3                INC     DPTR
069B E0                MOVX    A,@DPTR
069C FF                MOV     R7,A
069D 900000      E     MOV     DPTR,#g_ref
06A0 E0                MOVX    A,@DPTR
06A1 F8                MOV     R0,A
06A2 A3                INC     DPTR
06A3 E0                MOVX    A,@DPTR
06A4 F9                MOV     R1,A
06A5 A3                INC     DPTR
06A6 E0                MOVX    A,@DPTR
06A7 FA                MOV     R2,A
06A8 A3                INC     DPTR
06A9 E0                MOVX    A,@DPTR
06AA FB                MOV     R3,A
06AB C3                CLR     C
06AC 120000      E     LCALL   ?C?SLCMP
06AF 5014              JNC     ?C0094
                                           ; SOURCE LINE # 567
06B1 900000      E     MOV     DPTR,#c_mem+01FH
06B4 E0                MOVX    A,@DPTR
06B5 FC                MOV     R4,A
06B6 A3                INC     DPTR
06B7 E0                MOVX    A,@DPTR
06B8 FD                MOV     R5,A
06B9 A3                INC     DPTR
06BA E0                MOVX    A,@DPTR
06BB FE                MOV     R6,A
06BC A3                INC     DPTR
06BD E0                MOVX    A,@DPTR
06BE FF                MOV     R7,A
06BF 900000      E     MOV     DPTR,#g_ref
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 53  

06C2 120000      E     LCALL   ?C?LSTXDATA
06C5         ?C0094:
                                           ; SOURCE LINE # 568
06C5 900000      E     MOV     DPTR,#c_mem+027H
06C8 E0                MOVX    A,@DPTR
06C9 FC                MOV     R4,A
06CA A3                INC     DPTR
06CB E0                MOVX    A,@DPTR
06CC FD                MOV     R5,A
06CD A3                INC     DPTR
06CE E0                MOVX    A,@DPTR
06CF FE                MOV     R6,A
06D0 A3                INC     DPTR
06D1 E0                MOVX    A,@DPTR
06D2 FF                MOV     R7,A
06D3 900000      E     MOV     DPTR,#g_ref
06D6 E0                MOVX    A,@DPTR
06D7 F8                MOV     R0,A
06D8 A3                INC     DPTR
06D9 E0                MOVX    A,@DPTR
06DA F9                MOV     R1,A
06DB A3                INC     DPTR
06DC E0                MOVX    A,@DPTR
06DD FA                MOV     R2,A
06DE A3                INC     DPTR
06DF E0                MOVX    A,@DPTR
06E0 FB                MOV     R3,A
06E1 D3                SETB    C
06E2 120000      E     LCALL   ?C?SLCMP
06E5 4014              JC      ?C0093
                                           ; SOURCE LINE # 569
06E7 900000      E     MOV     DPTR,#c_mem+027H
06EA E0                MOVX    A,@DPTR
06EB FC                MOV     R4,A
06EC A3                INC     DPTR
06ED E0                MOVX    A,@DPTR
06EE FD                MOV     R5,A
06EF A3                INC     DPTR
06F0 E0                MOVX    A,@DPTR
06F1 FE                MOV     R6,A
06F2 A3                INC     DPTR
06F3 E0                MOVX    A,@DPTR
06F4 FF                MOV     R7,A
06F5 900000      E     MOV     DPTR,#g_ref
06F8 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 570
06FB         ?C0093:
                                           ; SOURCE LINE # 572
06FB 900000      E     MOV     DPTR,#c_mem+047H
06FE E0                MOVX    A,@DPTR
06FF 6401              XRL     A,#01H
0701 6003              JZ      $ + 5H
0703 020000      R     LJMP    ?C0101
                                           ; SOURCE LINE # 573
0706 900000      E     MOV     DPTR,#rest_enabled
0709 E0                MOVX    A,@DPTR
070A B40114            CJNE    A,#01H,?C0097
                                           ; SOURCE LINE # 575
070D 900000      E     MOV     DPTR,#rest_pos_curr_ref
0710 E0                MOVX    A,@DPTR
0711 FC                MOV     R4,A
0712 A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 54  

0713 E0                MOVX    A,@DPTR
0714 FD                MOV     R5,A
0715 A3                INC     DPTR
0716 E0                MOVX    A,@DPTR
0717 FE                MOV     R6,A
0718 A3                INC     DPTR
0719 E0                MOVX    A,@DPTR
071A FF                MOV     R7,A
071B 900000      E     MOV     DPTR,#g_ref
071E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 576
0721         ?C0097:
                                           ; SOURCE LINE # 578
0721 900000      E     MOV     DPTR,#forced_open
0724 E0                MOVX    A,@DPTR
0725 6401              XRL     A,#01H
0727 6003              JZ      $ + 5H
0729 020000      R     LJMP    ?C0101
                                           ; SOURCE LINE # 580
072C FF                MOV     R7,A
072D FE                MOV     R6,A
072E FD                MOV     R5,A
072F FC                MOV     R4,A
0730 AB00        R     MOV     R3,err_emg_2+03H
0732 AA00        R     MOV     R2,err_emg_2+02H
0734 A900        R     MOV     R1,err_emg_2+01H
0736 A800        R     MOV     R0,err_emg_2
0738 D3                SETB    C
0739 120000      E     LCALL   ?C?SLCMP
073C 405C              JC      ?C0099
                                           ; SOURCE LINE # 581
073E 900000      E     MOV     DPTR,#g_mem+048H
0741 E0                MOVX    A,@DPTR
0742 FC                MOV     R4,A
0743 A3                INC     DPTR
0744 E0                MOVX    A,@DPTR
0745 FD                MOV     R5,A
0746 A3                INC     DPTR
0747 E0                MOVX    A,@DPTR
0748 FE                MOV     R6,A
0749 A3                INC     DPTR
074A E0                MOVX    A,@DPTR
074B FF                MOV     R7,A
074C A800        R     MOV     R0,err_emg_2
074E 120000      E     LCALL   ?C?LMUL
0751 C006              PUSH    AR6
0753 C007              PUSH    AR7
0755 900000      E     MOV     DPTR,#c_mem+039H
0758 E0                MOVX    A,@DPTR
0759 FE                MOV     R6,A
075A A3                INC     DPTR
075B E0                MOVX    A,@DPTR
075C FF                MOV     R7,A
075D C3                CLR     C
075E E4                CLR     A
075F 9F                SUBB    A,R7
0760 FF                MOV     R7,A
0761 7404              MOV     A,#04H
0763 9E                SUBB    A,R6
0764 FE                MOV     R6,A
0765 AB07              MOV     R3,AR7
0767 FA                MOV     R2,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 55  

0768 E4                CLR     A
0769 F9                MOV     R1,A
076A F8                MOV     R0,A
076B D007              POP     AR7
076D D006              POP     AR6
076F 120000      E     LCALL   ?C?SLDIV
0772 A804              MOV     R0,AR4
0774 A905              MOV     R1,AR5
0776 AA06              MOV     R2,AR6
0778 AB07              MOV     R3,AR7
077A 900000      E     MOV     DPTR,#g_mem+048H
077D E0                MOVX    A,@DPTR
077E FC                MOV     R4,A
077F A3                INC     DPTR
0780 E0                MOVX    A,@DPTR
0781 FD                MOV     R5,A
0782 A3                INC     DPTR
0783 E0                MOVX    A,@DPTR
0784 FE                MOV     R6,A
0785 A3                INC     DPTR
0786 E0                MOVX    A,@DPTR
0787 C3                CLR     C
0788 9B                SUBB    A,R3
0789 FF                MOV     R7,A
078A EE                MOV     A,R6
078B 9A                SUBB    A,R2
078C FE                MOV     R6,A
078D ED                MOV     A,R5
078E 99                SUBB    A,R1
078F FD                MOV     R5,A
0790 EC                MOV     A,R4
0791 98                SUBB    A,R0
0792 FC                MOV     R4,A
0793 900000      E     MOV     DPTR,#g_ref
0796 120000      E     LCALL   ?C?LSTXDATA
0799 22                RET     
079A         ?C0099:
                                           ; SOURCE LINE # 582
                                           ; SOURCE LINE # 583
079A 900000      E     MOV     DPTR,#g_mem+048H
079D E0                MOVX    A,@DPTR
079E FC                MOV     R4,A
079F A3                INC     DPTR
07A0 E0                MOVX    A,@DPTR
07A1 FD                MOV     R5,A
07A2 A3                INC     DPTR
07A3 E0                MOVX    A,@DPTR
07A4 FE                MOV     R6,A
07A5 A3                INC     DPTR
07A6 E0                MOVX    A,@DPTR
07A7 FF                MOV     R7,A
07A8 900000      E     MOV     DPTR,#g_ref
07AB 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 584
07AE E4                CLR     A
07AF 900000      E     MOV     DPTR,#forced_open
07B2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 585
                                           ; SOURCE LINE # 586
                                           ; SOURCE LINE # 587
                                           ; SOURCE LINE # 588
07B3         ?C0101:
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 56  

07B3 22                RET     
             ; FUNCTION motor_control (END)

             ; FUNCTION _encoder_reading (BEGIN)
                                           ; SOURCE LINE # 594
;---- Variable 'idx' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 596
0000 8F00        R     MOV     index,R7
                                           ; SOURCE LINE # 620
0002 E500        R     MOV     A,index
0004 C3                CLR     C
0005 9403              SUBB    A,#03H
0007 4003              JC      $ + 5H
0009 020000      R     LJMP    ?C0103
000C         ?C0102:
                                           ; SOURCE LINE # 623
000C 300022            JNB     reset_last_value_flag,?C0104
                                           ; SOURCE LINE # 624
;---- Variable 'jj' assigned to Register 'R3' ----
000F 7B03              MOV     R3,#03H
0011         ?C0105:
0011 AF03              MOV     R7,AR3
0013 1B                DEC     R3
0014 EF                MOV     A,R7
0015 6018              JZ      ?C0106
                                           ; SOURCE LINE # 625
0017 E4                CLR     A
0018 FF                MOV     R7,A
0019 FE                MOV     R6,A
001A FD                MOV     R5,A
001B FC                MOV     R4,A
001C EB                MOV     A,R3
001D 25E0              ADD     A,ACC
001F 25E0              ADD     A,ACC
0021 2400        R     ADD     A,#LOW last_value_encoder
0023 F582              MOV     DPL,A
0025 E4                CLR     A
0026 3400        R     ADDC    A,#HIGH last_value_encoder
0028 F583              MOV     DPH,A
002A 120000      E     LCALL   ?C?LSTXDATA
002D 80E2              SJMP    ?C0105
002F         ?C0106:
                                           ; SOURCE LINE # 627
002F C200        E     CLR     reset_last_value_flag
                                           ; SOURCE LINE # 628
0031         ?C0104:
                                           ; SOURCE LINE # 632
0031 E500        R     MOV     A,index
0033 7018              JNZ     ?C0107
                                           ; SOURCE LINE # 633
0035 120000      E     LCALL   SHIFTREG_ENC_1_ReadData
0038 7801              MOV     R0,#01H
003A 120000      E     LCALL   ?C?ULSHR
003D EF                MOV     A,R7
003E EE                MOV     A,R6
003F ED                MOV     A,R5
0040 5403              ANL     A,#03H
0042 FD                MOV     R5,A
0043 E4                CLR     A
0044 FC                MOV     R4,A
0045 900000      R     MOV     DPTR,#data_encoder
0048 120000      E     LCALL   ?C?LSTXDATA
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 57  

004B 8033              SJMP    ?C0108
004D         ?C0107:
                                           ; SOURCE LINE # 634
                                           ; SOURCE LINE # 635
004D E500        R     MOV     A,index
004F B40118            CJNE    A,#01H,?C0109
                                           ; SOURCE LINE # 636
0052 120000      E     LCALL   SHIFTREG_ENC_2_ReadData
0055 7801              MOV     R0,#01H
0057 120000      E     LCALL   ?C?ULSHR
005A EF                MOV     A,R7
005B EE                MOV     A,R6
005C ED                MOV     A,R5
005D 5403              ANL     A,#03H
005F FD                MOV     R5,A
0060 E4                CLR     A
0061 FC                MOV     R4,A
0062 900000      R     MOV     DPTR,#data_encoder
0065 120000      E     LCALL   ?C?LSTXDATA
0068 8016              SJMP    ?C0108
006A         ?C0109:
                                           ; SOURCE LINE # 638
006A 120000      E     LCALL   SHIFTREG_ENC_3_ReadData
006D 7801              MOV     R0,#01H
006F 120000      E     LCALL   ?C?ULSHR
0072 EF                MOV     A,R7
0073 EE                MOV     A,R6
0074 ED                MOV     A,R5
0075 5403              ANL     A,#03H
0077 FD                MOV     R5,A
0078 E4                CLR     A
0079 FC                MOV     R4,A
007A 900000      R     MOV     DPTR,#data_encoder
007D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 639
0080         ?C0108:
                                           ; SOURCE LINE # 642
0080 7B01              MOV     R3,#01H
0082 7A00        R     MOV     R2,#HIGH data_encoder
0084 7900        R     MOV     R1,#LOW data_encoder
0086 120000      E     LCALL   _check_enc_data
0089 4003              JC      $ + 5H
008B 020000      R     LJMP    ?C0111
                                           ; SOURCE LINE # 644
008E 900000      R     MOV     DPTR,#data_encoder
0091 E0                MOVX    A,@DPTR
0092 FC                MOV     R4,A
0093 A3                INC     DPTR
0094 E0                MOVX    A,@DPTR
0095 FD                MOV     R5,A
0096 A3                INC     DPTR
0097 E0                MOVX    A,@DPTR
0098 FE                MOV     R6,A
0099 A3                INC     DPTR
009A E0                MOVX    A,@DPTR
009B 54C0              ANL     A,#0C0H
009D FF                MOV     R7,A
009E EE                MOV     A,R6
009F ED                MOV     A,R5
00A0 5403              ANL     A,#03H
00A2 FD                MOV     R5,A
00A3 E4                CLR     A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 58  

00A4 2F                ADD     A,R7
00A5 FF                MOV     R7,A
00A6 E4                CLR     A
00A7 3E                ADDC    A,R6
00A8 FE                MOV     R6,A
00A9 ED                MOV     A,R5
00AA 34FE              ADDC    A,#0FEH
00AC FD                MOV     R5,A
00AD E4                CLR     A
00AE 34FF              ADDC    A,#0FFH
00B0 FC                MOV     R4,A
00B1 7802              MOV     R0,#02H
00B3 120000      E     LCALL   ?C?ULSHR
00B6 EE                MOV     A,R6
00B7 33                RLC     A
00B8 95E0              SUBB    A,ACC
00BA FD                MOV     R5,A
00BB FC                MOV     R4,A
00BC E500        R     MOV     A,index
00BE 25E0              ADD     A,ACC
00C0 25E0              ADD     A,ACC
00C2 2400        E     ADD     A,#LOW g_mem+06H
00C4 F582              MOV     DPL,A
00C6 E4                CLR     A
00C7 3400        E     ADDC    A,#HIGH g_mem+06H
00C9 F583              MOV     DPH,A
00CB E0                MOVX    A,@DPTR
00CC F8                MOV     R0,A
00CD A3                INC     DPTR
00CE E0                MOVX    A,@DPTR
00CF F9                MOV     R1,A
00D0 A3                INC     DPTR
00D1 E0                MOVX    A,@DPTR
00D2 FA                MOV     R2,A
00D3 A3                INC     DPTR
00D4 E0                MOVX    A,@DPTR
00D5 2F                ADD     A,R7
00D6 FF                MOV     R7,A
00D7 EA                MOV     A,R2
00D8 3E                ADDC    A,R6
00D9 FE                MOV     R6,A
00DA E9                MOV     A,R1
00DB 3D                ADDC    A,R5
00DC FD                MOV     R5,A
00DD E8                MOV     A,R0
00DE 3C                ADDC    A,R4
00DF FC                MOV     R4,A
00E0 900000      R     MOV     DPTR,#value_encoder
00E3 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 651
00E6 300027            JNB     only_first_time,?C0112
                                           ; SOURCE LINE # 652
00E9 900000      R     MOV     DPTR,#value_encoder
00EC E0                MOVX    A,@DPTR
00ED FC                MOV     R4,A
00EE A3                INC     DPTR
00EF E0                MOVX    A,@DPTR
00F0 FD                MOV     R5,A
00F1 A3                INC     DPTR
00F2 E0                MOVX    A,@DPTR
00F3 FE                MOV     R6,A
00F4 A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 59  

00F5 E0                MOVX    A,@DPTR
00F6 FF                MOV     R7,A
00F7 E500        R     MOV     A,index
00F9 25E0              ADD     A,ACC
00FB 25E0              ADD     A,ACC
00FD 2400        R     ADD     A,#LOW last_value_encoder
00FF F582              MOV     DPL,A
0101 E4                CLR     A
0102 3400        R     ADDC    A,#HIGH last_value_encoder
0104 F583              MOV     DPH,A
0106 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 653
0109 E500        R     MOV     A,index
010B B40202            CJNE    A,#02H,?C0112
                                           ; SOURCE LINE # 654
010E C200        R     CLR     only_first_time
                                           ; SOURCE LINE # 655
0110         ?C0112:
                                           ; SOURCE LINE # 658
0110 E500        R     MOV     A,index
0112 25E0              ADD     A,ACC
0114 25E0              ADD     A,ACC
0116 2400        R     ADD     A,#LOW last_value_encoder
0118 F582              MOV     DPL,A
011A E4                CLR     A
011B 3400        R     ADDC    A,#HIGH last_value_encoder
011D F583              MOV     DPH,A
011F E0                MOVX    A,@DPTR
0120 F8                MOV     R0,A
0121 A3                INC     DPTR
0122 E0                MOVX    A,@DPTR
0123 F9                MOV     R1,A
0124 A3                INC     DPTR
0125 E0                MOVX    A,@DPTR
0126 FA                MOV     R2,A
0127 A3                INC     DPTR
0128 E0                MOVX    A,@DPTR
0129 FB                MOV     R3,A
012A 900000      R     MOV     DPTR,#value_encoder
012D E0                MOVX    A,@DPTR
012E FC                MOV     R4,A
012F A3                INC     DPTR
0130 E0                MOVX    A,@DPTR
0131 FD                MOV     R5,A
0132 A3                INC     DPTR
0133 E0                MOVX    A,@DPTR
0134 FE                MOV     R6,A
0135 A3                INC     DPTR
0136 E0                MOVX    A,@DPTR
0137 C3                CLR     C
0138 9B                SUBB    A,R3
0139 FF                MOV     R7,A
013A EE                MOV     A,R6
013B 9A                SUBB    A,R2
013C FE                MOV     R6,A
013D ED                MOV     A,R5
013E 99                SUBB    A,R1
013F FD                MOV     R5,A
0140 EC                MOV     A,R4
0141 98                SUBB    A,R0
0142 FC                MOV     R4,A
0143 900000      R     MOV     DPTR,#aux
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 60  

0146 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 678
0149 E4                CLR     A
014A FF                MOV     R7,A
014B 7EC0              MOV     R6,#0C0H
014D FD                MOV     R5,A
014E FC                MOV     R4,A
014F 900000      R     MOV     DPTR,#aux
0152 E0                MOVX    A,@DPTR
0153 F8                MOV     R0,A
0154 A3                INC     DPTR
0155 E0                MOVX    A,@DPTR
0156 F9                MOV     R1,A
0157 A3                INC     DPTR
0158 E0                MOVX    A,@DPTR
0159 FA                MOV     R2,A
015A A3                INC     DPTR
015B E0                MOVX    A,@DPTR
015C FB                MOV     R3,A
015D D3                SETB    C
015E 120000      E     LCALL   ?C?SLCMP
0161 4010              JC      ?C0114
                                           ; SOURCE LINE # 679
0163 7400        E     MOV     A,#LOW g_meas+0CH
0165 2500        R     ADD     A,index
0167 F582              MOV     DPL,A
0169 E4                CLR     A
016A 3400        E     ADDC    A,#HIGH g_meas+0CH
016C F583              MOV     DPH,A
016E E0                MOVX    A,@DPTR
016F 14                DEC     A
0170 F0                MOVX    @DPTR,A
0171 8068              SJMP    ?C0115
0173         ?C0114:
                                           ; SOURCE LINE # 680
                                           ; SOURCE LINE # 681
0173 7F00              MOV     R7,#00H
0175 7E40              MOV     R6,#040H
0177 7DFF              MOV     R5,#0FFH
0179 7CFF              MOV     R4,#0FFH
017B 900000      R     MOV     DPTR,#aux
017E E0                MOVX    A,@DPTR
017F F8                MOV     R0,A
0180 A3                INC     DPTR
0181 E0                MOVX    A,@DPTR
0182 F9                MOV     R1,A
0183 A3                INC     DPTR
0184 E0                MOVX    A,@DPTR
0185 FA                MOV     R2,A
0186 A3                INC     DPTR
0187 E0                MOVX    A,@DPTR
0188 FB                MOV     R3,A
0189 C3                CLR     C
018A 120000      E     LCALL   ?C?SLCMP
018D 5010              JNC     ?C0116
                                           ; SOURCE LINE # 682
018F 7400        E     MOV     A,#LOW g_meas+0CH
0191 2500        R     ADD     A,index
0193 F582              MOV     DPL,A
0195 E4                CLR     A
0196 3400        E     ADDC    A,#HIGH g_meas+0CH
0198 F583              MOV     DPH,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 61  

019A E0                MOVX    A,@DPTR
019B 04                INC     A
019C F0                MOVX    @DPTR,A
019D 803C              SJMP    ?C0115
019F         ?C0116:
                                           ; SOURCE LINE # 683
                                           ; SOURCE LINE # 684
019F 900000      R     MOV     DPTR,#aux
01A2 E0                MOVX    A,@DPTR
01A3 A3                INC     DPTR
01A4 E0                MOVX    A,@DPTR
01A5 A3                INC     DPTR
01A6 E0                MOVX    A,@DPTR
01A7 FE                MOV     R6,A
01A8 A3                INC     DPTR
01A9 E0                MOVX    A,@DPTR
01AA FF                MOV     R7,A
01AB 120000      E     LCALL   _abs
01AE D3                SETB    C
01AF EF                MOV     A,R7
01B0 9400              SUBB    A,#00H
01B2 EE                MOV     A,R6
01B3 6480              XRL     A,#080H
01B5 94C0              SUBB    A,#0C0H
01B7 4022              JC      ?C0115
                                           ; SOURCE LINE # 685
01B9 7400        R     MOV     A,#LOW error
01BB 2500        R     ADD     A,index
01BD F582              MOV     DPL,A
01BF E4                CLR     A
01C0 3400        R     ADDC    A,#HIGH error
01C2 F583              MOV     DPH,A
01C4 E0                MOVX    A,@DPTR
01C5 04                INC     A
01C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 686
01C7 7400        R     MOV     A,#LOW error
01C9 2500        R     ADD     A,index
01CB F582              MOV     DPL,A
01CD E4                CLR     A
01CE 3400        R     ADDC    A,#HIGH error
01D0 F583              MOV     DPH,A
01D2 E0                MOVX    A,@DPTR
01D3 C3                CLR     C
01D4 940A              SUBB    A,#0AH
01D6 5003              JNC     $ + 5H
01D8 020000      R     LJMP    ?C0103
01DB         ?C0119:
                                           ; SOURCE LINE # 689
                                           ; SOURCE LINE # 690
                                           ; SOURCE LINE # 691
01DB         ?C0115:
                                           ; SOURCE LINE # 693
01DB 7400        R     MOV     A,#LOW error
01DD 2500        R     ADD     A,index
01DF F582              MOV     DPL,A
01E1 E4                CLR     A
01E2 3400        R     ADDC    A,#HIGH error
01E4 F583              MOV     DPH,A
01E6 E4                CLR     A
01E7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 695
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 62  

01E8 900000      R     MOV     DPTR,#value_encoder
01EB E0                MOVX    A,@DPTR
01EC FC                MOV     R4,A
01ED A3                INC     DPTR
01EE E0                MOVX    A,@DPTR
01EF FD                MOV     R5,A
01F0 A3                INC     DPTR
01F1 E0                MOVX    A,@DPTR
01F2 FE                MOV     R6,A
01F3 A3                INC     DPTR
01F4 E0                MOVX    A,@DPTR
01F5 FF                MOV     R7,A
01F6 E500        R     MOV     A,index
01F8 25E0              ADD     A,ACC
01FA 25E0              ADD     A,ACC
01FC 2400        R     ADD     A,#LOW last_value_encoder
01FE F582              MOV     DPL,A
0200 E4                CLR     A
0201 3400        R     ADDC    A,#HIGH last_value_encoder
0203 F583              MOV     DPH,A
0205 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 697
0208 900000      R     MOV     DPTR,#value_encoder
020B E0                MOVX    A,@DPTR
020C F8                MOV     R0,A
020D A3                INC     DPTR
020E E0                MOVX    A,@DPTR
020F F9                MOV     R1,A
0210 A3                INC     DPTR
0211 E0                MOVX    A,@DPTR
0212 FA                MOV     R2,A
0213 A3                INC     DPTR
0214 E0                MOVX    A,@DPTR
0215 FB                MOV     R3,A
0216 C000              PUSH    AR0
0218 7400        E     MOV     A,#LOW g_meas+0CH
021A 2500        R     ADD     A,index
021C F582              MOV     DPL,A
021E E4                CLR     A
021F 3400        E     ADDC    A,#HIGH g_meas+0CH
0221 F583              MOV     DPH,A
0223 E0                MOVX    A,@DPTR
0224 FF                MOV     R7,A
0225 33                RLC     A
0226 95E0              SUBB    A,ACC
0228 FE                MOV     R6,A
0229 FD                MOV     R5,A
022A FC                MOV     R4,A
022B 7810              MOV     R0,#010H
022D 120000      E     LCALL   ?C?LSHL
0230 D000              POP     AR0
0232 EB                MOV     A,R3
0233 2F                ADD     A,R7
0234 FF                MOV     R7,A
0235 EA                MOV     A,R2
0236 3E                ADDC    A,R6
0237 FE                MOV     R6,A
0238 E9                MOV     A,R1
0239 3D                ADDC    A,R5
023A FD                MOV     R5,A
023B E8                MOV     A,R0
023C 3C                ADDC    A,R4
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 63  

023D FC                MOV     R4,A
023E 900000      R     MOV     DPTR,#value_encoder
0241 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 699
0244 E500        R     MOV     A,index
0246 25E0              ADD     A,ACC
0248 25E0              ADD     A,ACC
024A 2400        E     ADD     A,#LOW c_mem+012H
024C F582              MOV     DPL,A
024E E4                CLR     A
024F 3400        E     ADDC    A,#HIGH c_mem+012H
0251 F583              MOV     DPH,A
0253 E0                MOVX    A,@DPTR
0254 FC                MOV     R4,A
0255 A3                INC     DPTR
0256 E0                MOVX    A,@DPTR
0257 FD                MOV     R5,A
0258 A3                INC     DPTR
0259 E0                MOVX    A,@DPTR
025A FE                MOV     R6,A
025B A3                INC     DPTR
025C E0                MOVX    A,@DPTR
025D FF                MOV     R7,A
025E E4                CLR     A
025F FB                MOV     R3,A
0260 FA                MOV     R2,A
0261 7980              MOV     R1,#080H
0263 783F              MOV     R0,#03FH
0265 120000      E     LCALL   ?C?FPCMP3
0268 6038              JZ      ?C0120
                                           ; SOURCE LINE # 700
026A 900000      R     MOV     DPTR,#value_encoder
026D E0                MOVX    A,@DPTR
026E FC                MOV     R4,A
026F A3                INC     DPTR
0270 E0                MOVX    A,@DPTR
0271 FD                MOV     R5,A
0272 A3                INC     DPTR
0273 E0                MOVX    A,@DPTR
0274 FE                MOV     R6,A
0275 A3                INC     DPTR
0276 E0                MOVX    A,@DPTR
0277 FF                MOV     R7,A
0278 EC                MOV     A,R4
0279 120000      E     LCALL   ?C?FCASTL
027C E500        R     MOV     A,index
027E 25E0              ADD     A,ACC
0280 25E0              ADD     A,ACC
0282 2400        E     ADD     A,#LOW c_mem+012H
0284 F582              MOV     DPL,A
0286 E4                CLR     A
0287 3400        E     ADDC    A,#HIGH c_mem+012H
0289 F583              MOV     DPH,A
028B E0                MOVX    A,@DPTR
028C F8                MOV     R0,A
028D A3                INC     DPTR
028E E0                MOVX    A,@DPTR
028F F9                MOV     R1,A
0290 A3                INC     DPTR
0291 E0                MOVX    A,@DPTR
0292 FA                MOV     R2,A
0293 A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 64  

0294 E0                MOVX    A,@DPTR
0295 FB                MOV     R3,A
0296 120000      E     LCALL   ?C?FPMUL
0299 120000      E     LCALL   ?C?CASTF
029C 900000      R     MOV     DPTR,#value_encoder
029F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 701
02A2         ?C0120:
                                           ; SOURCE LINE # 703
02A2 900000      R     MOV     DPTR,#value_encoder
02A5 E0                MOVX    A,@DPTR
02A6 FC                MOV     R4,A
02A7 A3                INC     DPTR
02A8 E0                MOVX    A,@DPTR
02A9 FD                MOV     R5,A
02AA A3                INC     DPTR
02AB E0                MOVX    A,@DPTR
02AC FE                MOV     R6,A
02AD A3                INC     DPTR
02AE E0                MOVX    A,@DPTR
02AF FF                MOV     R7,A
02B0 E500        R     MOV     A,index
02B2 25E0              ADD     A,ACC
02B4 25E0              ADD     A,ACC
02B6 2400        E     ADD     A,#LOW g_meas
02B8 F582              MOV     DPL,A
02BA E4                CLR     A
02BB 3400        E     ADDC    A,#HIGH g_meas
02BD F583              MOV     DPH,A
02BF 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 704
02C2         ?C0111:
                                           ; SOURCE LINE # 706
02C2 E500        R     MOV     A,index
02C4 14                DEC     A
02C5 7003              JNZ     $ + 5H
02C7 020000      R     LJMP    ?C0123
02CA 14                DEC     A
02CB 7003              JNZ     $ + 5H
02CD 020000      R     LJMP    ?C0124
02D0 2402              ADD     A,#02H
02D2 6003              JZ      $ + 5H
02D4 020000      R     LJMP    ?C0121
                                           ; SOURCE LINE # 707
02D7         ?C0122:
                                           ; SOURCE LINE # 708
02D7 E4                CLR     A
02D8 7F03              MOV     R7,#03H
02DA FE                MOV     R6,A
02DB FD                MOV     R5,A
02DC FC                MOV     R4,A
02DD 900000      R     MOV     DPTR,#value_encoder
02E0 E0                MOVX    A,@DPTR
02E1 F8                MOV     R0,A
02E2 A3                INC     DPTR
02E3 E0                MOVX    A,@DPTR
02E4 F9                MOV     R1,A
02E5 A3                INC     DPTR
02E6 E0                MOVX    A,@DPTR
02E7 FA                MOV     R2,A
02E8 A3                INC     DPTR
02E9 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 65  

02EA FB                MOV     R3,A
02EB 120000      E     LCALL   ?C?LMUL
02EE 900000      R     MOV     DPTR,#v_value
02F1 E0                MOVX    A,@DPTR
02F2 F8                MOV     R0,A
02F3 A3                INC     DPTR
02F4 E0                MOVX    A,@DPTR
02F5 F9                MOV     R1,A
02F6 A3                INC     DPTR
02F7 E0                MOVX    A,@DPTR
02F8 FA                MOV     R2,A
02F9 A3                INC     DPTR
02FA E0                MOVX    A,@DPTR
02FB 2F                ADD     A,R7
02FC FF                MOV     R7,A
02FD EA                MOV     A,R2
02FE 3E                ADDC    A,R6
02FF FE                MOV     R6,A
0300 E9                MOV     A,R1
0301 3D                ADDC    A,R5
0302 FD                MOV     R5,A
0303 E8                MOV     A,R0
0304 3C                ADDC    A,R4
0305 FC                MOV     R4,A
0306 900000      R     MOV     DPTR,#vv_value
0309 E0                MOVX    A,@DPTR
030A F8                MOV     R0,A
030B A3                INC     DPTR
030C E0                MOVX    A,@DPTR
030D F9                MOV     R1,A
030E A3                INC     DPTR
030F E0                MOVX    A,@DPTR
0310 FA                MOV     R2,A
0311 A3                INC     DPTR
0312 E0                MOVX    A,@DPTR
0313 FB                MOV     R3,A
0314 C3                CLR     C
0315 EF                MOV     A,R7
0316 9B                SUBB    A,R3
0317 FF                MOV     R7,A
0318 EE                MOV     A,R6
0319 9A                SUBB    A,R2
031A FE                MOV     R6,A
031B ED                MOV     A,R5
031C 99                SUBB    A,R1
031D FD                MOV     R5,A
031E EC                MOV     A,R4
031F 98                SUBB    A,R0
0320 FC                MOV     R4,A
0321 C004              PUSH    AR4
0323 C005              PUSH    AR5
0325 C006              PUSH    AR6
0327 C007              PUSH    AR7
0329 E4                CLR     A
032A 7F03              MOV     R7,#03H
032C FE                MOV     R6,A
032D FD                MOV     R5,A
032E FC                MOV     R4,A
032F 900000      R     MOV     DPTR,#vvv_value
0332 E0                MOVX    A,@DPTR
0333 F8                MOV     R0,A
0334 A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 66  

0335 E0                MOVX    A,@DPTR
0336 F9                MOV     R1,A
0337 A3                INC     DPTR
0338 E0                MOVX    A,@DPTR
0339 FA                MOV     R2,A
033A A3                INC     DPTR
033B E0                MOVX    A,@DPTR
033C FB                MOV     R3,A
033D 120000      E     LCALL   ?C?LMUL
0340 A804              MOV     R0,AR4
0342 A905              MOV     R1,AR5
0344 AA06              MOV     R2,AR6
0346 AB07              MOV     R3,AR7
0348 D007              POP     AR7
034A D006              POP     AR6
034C D005              POP     AR5
034E D004              POP     AR4
0350 C3                CLR     C
0351 EF                MOV     A,R7
0352 9B                SUBB    A,R3
0353 FF                MOV     R7,A
0354 EE                MOV     A,R6
0355 9A                SUBB    A,R2
0356 FE                MOV     R6,A
0357 ED                MOV     A,R5
0358 99                SUBB    A,R1
0359 FD                MOV     R5,A
035A EC                MOV     A,R4
035B 98                SUBB    A,R0
035C FC                MOV     R4,A
035D E4                CLR     A
035E 7B0A              MOV     R3,#0AH
0360 FA                MOV     R2,A
0361 F9                MOV     R1,A
0362 F8                MOV     R0,A
0363 120000      E     LCALL   ?C?LMUL
0366 120000      E     LCALL   _filter_vel_1
0369 EE                MOV     A,R6
036A 33                RLC     A
036B 95E0              SUBB    A,ACC
036D FD                MOV     R5,A
036E FC                MOV     R4,A
036F 900000      R     MOV     DPTR,#speed_encoder
0372 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 709
0375 020000      R     LJMP    ?C0121
                                           ; SOURCE LINE # 710
                                           ; SOURCE LINE # 711
0378         ?C0123:
                                           ; SOURCE LINE # 712
0378 E4                CLR     A
0379 7F03              MOV     R7,#03H
037B FE                MOV     R6,A
037C FD                MOV     R5,A
037D FC                MOV     R4,A
037E 900000      R     MOV     DPTR,#value_encoder
0381 E0                MOVX    A,@DPTR
0382 F8                MOV     R0,A
0383 A3                INC     DPTR
0384 E0                MOVX    A,@DPTR
0385 F9                MOV     R1,A
0386 A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 67  

0387 E0                MOVX    A,@DPTR
0388 FA                MOV     R2,A
0389 A3                INC     DPTR
038A E0                MOVX    A,@DPTR
038B FB                MOV     R3,A
038C 120000      E     LCALL   ?C?LMUL
038F 900000      R     MOV     DPTR,#v_value+04H
0392 E0                MOVX    A,@DPTR
0393 F8                MOV     R0,A
0394 A3                INC     DPTR
0395 E0                MOVX    A,@DPTR
0396 F9                MOV     R1,A
0397 A3                INC     DPTR
0398 E0                MOVX    A,@DPTR
0399 FA                MOV     R2,A
039A A3                INC     DPTR
039B E0                MOVX    A,@DPTR
039C 2F                ADD     A,R7
039D FF                MOV     R7,A
039E EA                MOV     A,R2
039F 3E                ADDC    A,R6
03A0 FE                MOV     R6,A
03A1 E9                MOV     A,R1
03A2 3D                ADDC    A,R5
03A3 FD                MOV     R5,A
03A4 E8                MOV     A,R0
03A5 3C                ADDC    A,R4
03A6 FC                MOV     R4,A
03A7 900000      R     MOV     DPTR,#vv_value+04H
03AA E0                MOVX    A,@DPTR
03AB F8                MOV     R0,A
03AC A3                INC     DPTR
03AD E0                MOVX    A,@DPTR
03AE F9                MOV     R1,A
03AF A3                INC     DPTR
03B0 E0                MOVX    A,@DPTR
03B1 FA                MOV     R2,A
03B2 A3                INC     DPTR
03B3 E0                MOVX    A,@DPTR
03B4 FB                MOV     R3,A
03B5 C3                CLR     C
03B6 EF                MOV     A,R7
03B7 9B                SUBB    A,R3
03B8 FF                MOV     R7,A
03B9 EE                MOV     A,R6
03BA 9A                SUBB    A,R2
03BB FE                MOV     R6,A
03BC ED                MOV     A,R5
03BD 99                SUBB    A,R1
03BE FD                MOV     R5,A
03BF EC                MOV     A,R4
03C0 98                SUBB    A,R0
03C1 FC                MOV     R4,A
03C2 C004              PUSH    AR4
03C4 C005              PUSH    AR5
03C6 C006              PUSH    AR6
03C8 C007              PUSH    AR7
03CA E4                CLR     A
03CB 7F03              MOV     R7,#03H
03CD FE                MOV     R6,A
03CE FD                MOV     R5,A
03CF FC                MOV     R4,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 68  

03D0 900000      R     MOV     DPTR,#vvv_value+04H
03D3 E0                MOVX    A,@DPTR
03D4 F8                MOV     R0,A
03D5 A3                INC     DPTR
03D6 E0                MOVX    A,@DPTR
03D7 F9                MOV     R1,A
03D8 A3                INC     DPTR
03D9 E0                MOVX    A,@DPTR
03DA FA                MOV     R2,A
03DB A3                INC     DPTR
03DC E0                MOVX    A,@DPTR
03DD FB                MOV     R3,A
03DE 120000      E     LCALL   ?C?LMUL
03E1 A804              MOV     R0,AR4
03E3 A905              MOV     R1,AR5
03E5 AA06              MOV     R2,AR6
03E7 AB07              MOV     R3,AR7
03E9 D007              POP     AR7
03EB D006              POP     AR6
03ED D005              POP     AR5
03EF D004              POP     AR4
03F1 C3                CLR     C
03F2 EF                MOV     A,R7
03F3 9B                SUBB    A,R3
03F4 FF                MOV     R7,A
03F5 EE                MOV     A,R6
03F6 9A                SUBB    A,R2
03F7 FE                MOV     R6,A
03F8 ED                MOV     A,R5
03F9 99                SUBB    A,R1
03FA FD                MOV     R5,A
03FB EC                MOV     A,R4
03FC 98                SUBB    A,R0
03FD FC                MOV     R4,A
03FE E4                CLR     A
03FF 7B0A              MOV     R3,#0AH
0401 FA                MOV     R2,A
0402 F9                MOV     R1,A
0403 F8                MOV     R0,A
0404 120000      E     LCALL   ?C?LMUL
0407 120000      E     LCALL   _filter_vel_2
040A EE                MOV     A,R6
040B 33                RLC     A
040C 95E0              SUBB    A,ACC
040E FD                MOV     R5,A
040F FC                MOV     R4,A
0410 900000      R     MOV     DPTR,#speed_encoder
0413 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 713
0416 020000      R     LJMP    ?C0121
                                           ; SOURCE LINE # 714
                                           ; SOURCE LINE # 715
0419         ?C0124:
                                           ; SOURCE LINE # 716
0419 E4                CLR     A
041A 7F03              MOV     R7,#03H
041C FE                MOV     R6,A
041D FD                MOV     R5,A
041E FC                MOV     R4,A
041F 900000      R     MOV     DPTR,#value_encoder
0422 E0                MOVX    A,@DPTR
0423 F8                MOV     R0,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 69  

0424 A3                INC     DPTR
0425 E0                MOVX    A,@DPTR
0426 F9                MOV     R1,A
0427 A3                INC     DPTR
0428 E0                MOVX    A,@DPTR
0429 FA                MOV     R2,A
042A A3                INC     DPTR
042B E0                MOVX    A,@DPTR
042C FB                MOV     R3,A
042D 120000      E     LCALL   ?C?LMUL
0430 900000      R     MOV     DPTR,#v_value+08H
0433 E0                MOVX    A,@DPTR
0434 F8                MOV     R0,A
0435 A3                INC     DPTR
0436 E0                MOVX    A,@DPTR
0437 F9                MOV     R1,A
0438 A3                INC     DPTR
0439 E0                MOVX    A,@DPTR
043A FA                MOV     R2,A
043B A3                INC     DPTR
043C E0                MOVX    A,@DPTR
043D 2F                ADD     A,R7
043E FF                MOV     R7,A
043F EA                MOV     A,R2
0440 3E                ADDC    A,R6
0441 FE                MOV     R6,A
0442 E9                MOV     A,R1
0443 3D                ADDC    A,R5
0444 FD                MOV     R5,A
0445 E8                MOV     A,R0
0446 3C                ADDC    A,R4
0447 FC                MOV     R4,A
0448 900000      R     MOV     DPTR,#vv_value+08H
044B E0                MOVX    A,@DPTR
044C F8                MOV     R0,A
044D A3                INC     DPTR
044E E0                MOVX    A,@DPTR
044F F9                MOV     R1,A
0450 A3                INC     DPTR
0451 E0                MOVX    A,@DPTR
0452 FA                MOV     R2,A
0453 A3                INC     DPTR
0454 E0                MOVX    A,@DPTR
0455 FB                MOV     R3,A
0456 C3                CLR     C
0457 EF                MOV     A,R7
0458 9B                SUBB    A,R3
0459 FF                MOV     R7,A
045A EE                MOV     A,R6
045B 9A                SUBB    A,R2
045C FE                MOV     R6,A
045D ED                MOV     A,R5
045E 99                SUBB    A,R1
045F FD                MOV     R5,A
0460 EC                MOV     A,R4
0461 98                SUBB    A,R0
0462 FC                MOV     R4,A
0463 C004              PUSH    AR4
0465 C005              PUSH    AR5
0467 C006              PUSH    AR6
0469 C007              PUSH    AR7
046B E4                CLR     A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 70  

046C 7F03              MOV     R7,#03H
046E FE                MOV     R6,A
046F FD                MOV     R5,A
0470 FC                MOV     R4,A
0471 900000      R     MOV     DPTR,#vvv_value+08H
0474 E0                MOVX    A,@DPTR
0475 F8                MOV     R0,A
0476 A3                INC     DPTR
0477 E0                MOVX    A,@DPTR
0478 F9                MOV     R1,A
0479 A3                INC     DPTR
047A E0                MOVX    A,@DPTR
047B FA                MOV     R2,A
047C A3                INC     DPTR
047D E0                MOVX    A,@DPTR
047E FB                MOV     R3,A
047F 120000      E     LCALL   ?C?LMUL
0482 A804              MOV     R0,AR4
0484 A905              MOV     R1,AR5
0486 AA06              MOV     R2,AR6
0488 AB07              MOV     R3,AR7
048A D007              POP     AR7
048C D006              POP     AR6
048E D005              POP     AR5
0490 D004              POP     AR4
0492 C3                CLR     C
0493 EF                MOV     A,R7
0494 9B                SUBB    A,R3
0495 FF                MOV     R7,A
0496 EE                MOV     A,R6
0497 9A                SUBB    A,R2
0498 FE                MOV     R6,A
0499 ED                MOV     A,R5
049A 99                SUBB    A,R1
049B FD                MOV     R5,A
049C EC                MOV     A,R4
049D 98                SUBB    A,R0
049E FC                MOV     R4,A
049F E4                CLR     A
04A0 7B0A              MOV     R3,#0AH
04A2 FA                MOV     R2,A
04A3 F9                MOV     R1,A
04A4 F8                MOV     R0,A
04A5 120000      E     LCALL   ?C?LMUL
04A8 120000      E     LCALL   _filter_vel_3
04AB EE                MOV     A,R6
04AC 33                RLC     A
04AD 95E0              SUBB    A,ACC
04AF FD                MOV     R5,A
04B0 FC                MOV     R4,A
04B1 900000      R     MOV     DPTR,#speed_encoder
04B4 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 717
                                           ; SOURCE LINE # 718
                                           ; SOURCE LINE # 719
04B7         ?C0121:
                                           ; SOURCE LINE # 721
04B7 900000      R     MOV     DPTR,#speed_encoder
04BA E0                MOVX    A,@DPTR
04BB FC                MOV     R4,A
04BC A3                INC     DPTR
04BD E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 71  

04BE FD                MOV     R5,A
04BF A3                INC     DPTR
04C0 E0                MOVX    A,@DPTR
04C1 FE                MOV     R6,A
04C2 A3                INC     DPTR
04C3 E0                MOVX    A,@DPTR
04C4 FF                MOV     R7,A
04C5 E500        R     MOV     A,index
04C7 25E0              ADD     A,ACC
04C9 25E0              ADD     A,ACC
04CB 2400        E     ADD     A,#LOW g_meas+017H
04CD F582              MOV     DPL,A
04CF E4                CLR     A
04D0 3400        E     ADDC    A,#HIGH g_meas+017H
04D2 F583              MOV     DPH,A
04D4 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 724
04D7 E500        R     MOV     A,index
04D9 14                DEC     A
04DA 7003              JNZ     $ + 5H
04DC 020000      R     LJMP    ?C0127
04DF 14                DEC     A
04E0 7003              JNZ     $ + 5H
04E2 020000      R     LJMP    ?C0128
04E5 2402              ADD     A,#02H
04E7 6003              JZ      $ + 5H
04E9 020000      R     LJMP    ?C0125
                                           ; SOURCE LINE # 725
04EC         ?C0126:
                                           ; SOURCE LINE # 726
04EC E4                CLR     A
04ED 7F03              MOV     R7,#03H
04EF FE                MOV     R6,A
04F0 FD                MOV     R5,A
04F1 FC                MOV     R4,A
04F2 900000      R     MOV     DPTR,#speed_encoder
04F5 E0                MOVX    A,@DPTR
04F6 F8                MOV     R0,A
04F7 A3                INC     DPTR
04F8 E0                MOVX    A,@DPTR
04F9 F9                MOV     R1,A
04FA A3                INC     DPTR
04FB E0                MOVX    A,@DPTR
04FC FA                MOV     R2,A
04FD A3                INC     DPTR
04FE E0                MOVX    A,@DPTR
04FF FB                MOV     R3,A
0500 120000      E     LCALL   ?C?LMUL
0503 900000      R     MOV     DPTR,#a_value
0506 E0                MOVX    A,@DPTR
0507 F8                MOV     R0,A
0508 A3                INC     DPTR
0509 E0                MOVX    A,@DPTR
050A F9                MOV     R1,A
050B A3                INC     DPTR
050C E0                MOVX    A,@DPTR
050D FA                MOV     R2,A
050E A3                INC     DPTR
050F E0                MOVX    A,@DPTR
0510 2F                ADD     A,R7
0511 FF                MOV     R7,A
0512 EA                MOV     A,R2
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 72  

0513 3E                ADDC    A,R6
0514 FE                MOV     R6,A
0515 E9                MOV     A,R1
0516 3D                ADDC    A,R5
0517 FD                MOV     R5,A
0518 E8                MOV     A,R0
0519 3C                ADDC    A,R4
051A FC                MOV     R4,A
051B 900000      R     MOV     DPTR,#aa_value
051E E0                MOVX    A,@DPTR
051F F8                MOV     R0,A
0520 A3                INC     DPTR
0521 E0                MOVX    A,@DPTR
0522 F9                MOV     R1,A
0523 A3                INC     DPTR
0524 E0                MOVX    A,@DPTR
0525 FA                MOV     R2,A
0526 A3                INC     DPTR
0527 E0                MOVX    A,@DPTR
0528 FB                MOV     R3,A
0529 C3                CLR     C
052A EF                MOV     A,R7
052B 9B                SUBB    A,R3
052C FF                MOV     R7,A
052D EE                MOV     A,R6
052E 9A                SUBB    A,R2
052F FE                MOV     R6,A
0530 ED                MOV     A,R5
0531 99                SUBB    A,R1
0532 FD                MOV     R5,A
0533 EC                MOV     A,R4
0534 98                SUBB    A,R0
0535 FC                MOV     R4,A
0536 C004              PUSH    AR4
0538 C005              PUSH    AR5
053A C006              PUSH    AR6
053C C007              PUSH    AR7
053E E4                CLR     A
053F 7F03              MOV     R7,#03H
0541 FE                MOV     R6,A
0542 FD                MOV     R5,A
0543 FC                MOV     R4,A
0544 900000      R     MOV     DPTR,#aaa_value
0547 E0                MOVX    A,@DPTR
0548 F8                MOV     R0,A
0549 A3                INC     DPTR
054A E0                MOVX    A,@DPTR
054B F9                MOV     R1,A
054C A3                INC     DPTR
054D E0                MOVX    A,@DPTR
054E FA                MOV     R2,A
054F A3                INC     DPTR
0550 E0                MOVX    A,@DPTR
0551 FB                MOV     R3,A
0552 120000      E     LCALL   ?C?LMUL
0555 A804              MOV     R0,AR4
0557 A905              MOV     R1,AR5
0559 AA06              MOV     R2,AR6
055B AB07              MOV     R3,AR7
055D D007              POP     AR7
055F D006              POP     AR6
0561 D005              POP     AR5
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 73  

0563 D004              POP     AR4
0565 C3                CLR     C
0566 EF                MOV     A,R7
0567 9B                SUBB    A,R3
0568 FF                MOV     R7,A
0569 EE                MOV     A,R6
056A 9A                SUBB    A,R2
056B FE                MOV     R6,A
056C ED                MOV     A,R5
056D 99                SUBB    A,R1
056E FD                MOV     R5,A
056F EC                MOV     A,R4
0570 98                SUBB    A,R0
0571 FC                MOV     R4,A
0572 E4                CLR     A
0573 7B0A              MOV     R3,#0AH
0575 FA                MOV     R2,A
0576 F9                MOV     R1,A
0577 F8                MOV     R0,A
0578 120000      E     LCALL   ?C?LMUL
057B 120000      E     LCALL   _filter_acc_1
057E EE                MOV     A,R6
057F 33                RLC     A
0580 95E0              SUBB    A,ACC
0582 FD                MOV     R5,A
0583 FC                MOV     R4,A
0584 900000      R     MOV     DPTR,#accel_encoder
0587 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 727
058A 020000      R     LJMP    ?C0125
                                           ; SOURCE LINE # 729
058D         ?C0127:
                                           ; SOURCE LINE # 730
058D E4                CLR     A
058E 7F03              MOV     R7,#03H
0590 FE                MOV     R6,A
0591 FD                MOV     R5,A
0592 FC                MOV     R4,A
0593 900000      R     MOV     DPTR,#speed_encoder
0596 E0                MOVX    A,@DPTR
0597 F8                MOV     R0,A
0598 A3                INC     DPTR
0599 E0                MOVX    A,@DPTR
059A F9                MOV     R1,A
059B A3                INC     DPTR
059C E0                MOVX    A,@DPTR
059D FA                MOV     R2,A
059E A3                INC     DPTR
059F E0                MOVX    A,@DPTR
05A0 FB                MOV     R3,A
05A1 120000      E     LCALL   ?C?LMUL
05A4 900000      R     MOV     DPTR,#a_value+04H
05A7 E0                MOVX    A,@DPTR
05A8 F8                MOV     R0,A
05A9 A3                INC     DPTR
05AA E0                MOVX    A,@DPTR
05AB F9                MOV     R1,A
05AC A3                INC     DPTR
05AD E0                MOVX    A,@DPTR
05AE FA                MOV     R2,A
05AF A3                INC     DPTR
05B0 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 74  

05B1 2F                ADD     A,R7
05B2 FF                MOV     R7,A
05B3 EA                MOV     A,R2
05B4 3E                ADDC    A,R6
05B5 FE                MOV     R6,A
05B6 E9                MOV     A,R1
05B7 3D                ADDC    A,R5
05B8 FD                MOV     R5,A
05B9 E8                MOV     A,R0
05BA 3C                ADDC    A,R4
05BB FC                MOV     R4,A
05BC 900000      R     MOV     DPTR,#aa_value+04H
05BF E0                MOVX    A,@DPTR
05C0 F8                MOV     R0,A
05C1 A3                INC     DPTR
05C2 E0                MOVX    A,@DPTR
05C3 F9                MOV     R1,A
05C4 A3                INC     DPTR
05C5 E0                MOVX    A,@DPTR
05C6 FA                MOV     R2,A
05C7 A3                INC     DPTR
05C8 E0                MOVX    A,@DPTR
05C9 FB                MOV     R3,A
05CA C3                CLR     C
05CB EF                MOV     A,R7
05CC 9B                SUBB    A,R3
05CD FF                MOV     R7,A
05CE EE                MOV     A,R6
05CF 9A                SUBB    A,R2
05D0 FE                MOV     R6,A
05D1 ED                MOV     A,R5
05D2 99                SUBB    A,R1
05D3 FD                MOV     R5,A
05D4 EC                MOV     A,R4
05D5 98                SUBB    A,R0
05D6 FC                MOV     R4,A
05D7 C004              PUSH    AR4
05D9 C005              PUSH    AR5
05DB C006              PUSH    AR6
05DD C007              PUSH    AR7
05DF E4                CLR     A
05E0 7F03              MOV     R7,#03H
05E2 FE                MOV     R6,A
05E3 FD                MOV     R5,A
05E4 FC                MOV     R4,A
05E5 900000      R     MOV     DPTR,#aaa_value+04H
05E8 E0                MOVX    A,@DPTR
05E9 F8                MOV     R0,A
05EA A3                INC     DPTR
05EB E0                MOVX    A,@DPTR
05EC F9                MOV     R1,A
05ED A3                INC     DPTR
05EE E0                MOVX    A,@DPTR
05EF FA                MOV     R2,A
05F0 A3                INC     DPTR
05F1 E0                MOVX    A,@DPTR
05F2 FB                MOV     R3,A
05F3 120000      E     LCALL   ?C?LMUL
05F6 A804              MOV     R0,AR4
05F8 A905              MOV     R1,AR5
05FA AA06              MOV     R2,AR6
05FC AB07              MOV     R3,AR7
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 75  

05FE D007              POP     AR7
0600 D006              POP     AR6
0602 D005              POP     AR5
0604 D004              POP     AR4
0606 C3                CLR     C
0607 EF                MOV     A,R7
0608 9B                SUBB    A,R3
0609 FF                MOV     R7,A
060A EE                MOV     A,R6
060B 9A                SUBB    A,R2
060C FE                MOV     R6,A
060D ED                MOV     A,R5
060E 99                SUBB    A,R1
060F FD                MOV     R5,A
0610 EC                MOV     A,R4
0611 98                SUBB    A,R0
0612 FC                MOV     R4,A
0613 E4                CLR     A
0614 7B0A              MOV     R3,#0AH
0616 FA                MOV     R2,A
0617 F9                MOV     R1,A
0618 F8                MOV     R0,A
0619 120000      E     LCALL   ?C?LMUL
061C 120000      E     LCALL   _filter_acc_2
061F EE                MOV     A,R6
0620 33                RLC     A
0621 95E0              SUBB    A,ACC
0623 FD                MOV     R5,A
0624 FC                MOV     R4,A
0625 900000      R     MOV     DPTR,#accel_encoder
0628 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 731
062B 020000      R     LJMP    ?C0125
                                           ; SOURCE LINE # 733
062E         ?C0128:
                                           ; SOURCE LINE # 734
062E E4                CLR     A
062F 7F03              MOV     R7,#03H
0631 FE                MOV     R6,A
0632 FD                MOV     R5,A
0633 FC                MOV     R4,A
0634 900000      R     MOV     DPTR,#speed_encoder
0637 E0                MOVX    A,@DPTR
0638 F8                MOV     R0,A
0639 A3                INC     DPTR
063A E0                MOVX    A,@DPTR
063B F9                MOV     R1,A
063C A3                INC     DPTR
063D E0                MOVX    A,@DPTR
063E FA                MOV     R2,A
063F A3                INC     DPTR
0640 E0                MOVX    A,@DPTR
0641 FB                MOV     R3,A
0642 120000      E     LCALL   ?C?LMUL
0645 900000      R     MOV     DPTR,#a_value+08H
0648 E0                MOVX    A,@DPTR
0649 F8                MOV     R0,A
064A A3                INC     DPTR
064B E0                MOVX    A,@DPTR
064C F9                MOV     R1,A
064D A3                INC     DPTR
064E E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 76  

064F FA                MOV     R2,A
0650 A3                INC     DPTR
0651 E0                MOVX    A,@DPTR
0652 2F                ADD     A,R7
0653 FF                MOV     R7,A
0654 EA                MOV     A,R2
0655 3E                ADDC    A,R6
0656 FE                MOV     R6,A
0657 E9                MOV     A,R1
0658 3D                ADDC    A,R5
0659 FD                MOV     R5,A
065A E8                MOV     A,R0
065B 3C                ADDC    A,R4
065C FC                MOV     R4,A
065D 900000      R     MOV     DPTR,#aa_value+08H
0660 E0                MOVX    A,@DPTR
0661 F8                MOV     R0,A
0662 A3                INC     DPTR
0663 E0                MOVX    A,@DPTR
0664 F9                MOV     R1,A
0665 A3                INC     DPTR
0666 E0                MOVX    A,@DPTR
0667 FA                MOV     R2,A
0668 A3                INC     DPTR
0669 E0                MOVX    A,@DPTR
066A FB                MOV     R3,A
066B C3                CLR     C
066C EF                MOV     A,R7
066D 9B                SUBB    A,R3
066E FF                MOV     R7,A
066F EE                MOV     A,R6
0670 9A                SUBB    A,R2
0671 FE                MOV     R6,A
0672 ED                MOV     A,R5
0673 99                SUBB    A,R1
0674 FD                MOV     R5,A
0675 EC                MOV     A,R4
0676 98                SUBB    A,R0
0677 FC                MOV     R4,A
0678 C004              PUSH    AR4
067A C005              PUSH    AR5
067C C006              PUSH    AR6
067E C007              PUSH    AR7
0680 E4                CLR     A
0681 7F03              MOV     R7,#03H
0683 FE                MOV     R6,A
0684 FD                MOV     R5,A
0685 FC                MOV     R4,A
0686 900000      R     MOV     DPTR,#aaa_value+08H
0689 E0                MOVX    A,@DPTR
068A F8                MOV     R0,A
068B A3                INC     DPTR
068C E0                MOVX    A,@DPTR
068D F9                MOV     R1,A
068E A3                INC     DPTR
068F E0                MOVX    A,@DPTR
0690 FA                MOV     R2,A
0691 A3                INC     DPTR
0692 E0                MOVX    A,@DPTR
0693 FB                MOV     R3,A
0694 120000      E     LCALL   ?C?LMUL
0697 A804              MOV     R0,AR4
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 77  

0699 A905              MOV     R1,AR5
069B AA06              MOV     R2,AR6
069D AB07              MOV     R3,AR7
069F D007              POP     AR7
06A1 D006              POP     AR6
06A3 D005              POP     AR5
06A5 D004              POP     AR4
06A7 C3                CLR     C
06A8 EF                MOV     A,R7
06A9 9B                SUBB    A,R3
06AA FF                MOV     R7,A
06AB EE                MOV     A,R6
06AC 9A                SUBB    A,R2
06AD FE                MOV     R6,A
06AE ED                MOV     A,R5
06AF 99                SUBB    A,R1
06B0 FD                MOV     R5,A
06B1 EC                MOV     A,R4
06B2 98                SUBB    A,R0
06B3 FC                MOV     R4,A
06B4 E4                CLR     A
06B5 7B0A              MOV     R3,#0AH
06B7 FA                MOV     R2,A
06B8 F9                MOV     R1,A
06B9 F8                MOV     R0,A
06BA 120000      E     LCALL   ?C?LMUL
06BD 120000      E     LCALL   _filter_acc_3
06C0 EE                MOV     A,R6
06C1 33                RLC     A
06C2 95E0              SUBB    A,ACC
06C4 FD                MOV     R5,A
06C5 FC                MOV     R4,A
06C6 900000      R     MOV     DPTR,#accel_encoder
06C9 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 735
                                           ; SOURCE LINE # 736
06CC         ?C0125:
                                           ; SOURCE LINE # 738
06CC 900000      R     MOV     DPTR,#accel_encoder
06CF E0                MOVX    A,@DPTR
06D0 FC                MOV     R4,A
06D1 A3                INC     DPTR
06D2 E0                MOVX    A,@DPTR
06D3 FD                MOV     R5,A
06D4 A3                INC     DPTR
06D5 E0                MOVX    A,@DPTR
06D6 FE                MOV     R6,A
06D7 A3                INC     DPTR
06D8 E0                MOVX    A,@DPTR
06D9 FF                MOV     R7,A
06DA E500        R     MOV     A,index
06DC 25E0              ADD     A,ACC
06DE 25E0              ADD     A,ACC
06E0 2400        E     ADD     A,#LOW g_meas+023H
06E2 F582              MOV     DPL,A
06E4 E4                CLR     A
06E5 3400        E     ADDC    A,#HIGH g_meas+023H
06E7 F583              MOV     DPH,A
06E9 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 741
06EC E500        R     MOV     A,index
06EE 25E0              ADD     A,ACC
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 78  

06F0 25E0              ADD     A,ACC
06F2 2400        R     ADD     A,#LOW vv_value
06F4 F582              MOV     DPL,A
06F6 E4                CLR     A
06F7 3400        R     ADDC    A,#HIGH vv_value
06F9 F583              MOV     DPH,A
06FB E0                MOVX    A,@DPTR
06FC FC                MOV     R4,A
06FD A3                INC     DPTR
06FE E0                MOVX    A,@DPTR
06FF FD                MOV     R5,A
0700 A3                INC     DPTR
0701 E0                MOVX    A,@DPTR
0702 FE                MOV     R6,A
0703 A3                INC     DPTR
0704 E0                MOVX    A,@DPTR
0705 FF                MOV     R7,A
0706 E500        R     MOV     A,index
0708 25E0              ADD     A,ACC
070A 25E0              ADD     A,ACC
070C 2400        R     ADD     A,#LOW vvv_value
070E F582              MOV     DPL,A
0710 E4                CLR     A
0711 3400        R     ADDC    A,#HIGH vvv_value
0713 F583              MOV     DPH,A
0715 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 742
0718 E500        R     MOV     A,index
071A 25E0              ADD     A,ACC
071C 25E0              ADD     A,ACC
071E 2400        R     ADD     A,#LOW v_value
0720 F582              MOV     DPL,A
0722 E4                CLR     A
0723 3400        R     ADDC    A,#HIGH v_value
0725 F583              MOV     DPH,A
0727 E0                MOVX    A,@DPTR
0728 FC                MOV     R4,A
0729 A3                INC     DPTR
072A E0                MOVX    A,@DPTR
072B FD                MOV     R5,A
072C A3                INC     DPTR
072D E0                MOVX    A,@DPTR
072E FE                MOV     R6,A
072F A3                INC     DPTR
0730 E0                MOVX    A,@DPTR
0731 FF                MOV     R7,A
0732 E500        R     MOV     A,index
0734 25E0              ADD     A,ACC
0736 25E0              ADD     A,ACC
0738 2400        R     ADD     A,#LOW vv_value
073A F582              MOV     DPL,A
073C E4                CLR     A
073D 3400        R     ADDC    A,#HIGH vv_value
073F F583              MOV     DPH,A
0741 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 743
0744 900000      R     MOV     DPTR,#value_encoder
0747 E0                MOVX    A,@DPTR
0748 FC                MOV     R4,A
0749 A3                INC     DPTR
074A E0                MOVX    A,@DPTR
074B FD                MOV     R5,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 79  

074C A3                INC     DPTR
074D E0                MOVX    A,@DPTR
074E FE                MOV     R6,A
074F A3                INC     DPTR
0750 E0                MOVX    A,@DPTR
0751 FF                MOV     R7,A
0752 E500        R     MOV     A,index
0754 25E0              ADD     A,ACC
0756 25E0              ADD     A,ACC
0758 2400        R     ADD     A,#LOW v_value
075A F582              MOV     DPL,A
075C E4                CLR     A
075D 3400        R     ADDC    A,#HIGH v_value
075F F583              MOV     DPH,A
0761 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 745
0764 E500        R     MOV     A,index
0766 25E0              ADD     A,ACC
0768 25E0              ADD     A,ACC
076A 2400        R     ADD     A,#LOW aa_value
076C F582              MOV     DPL,A
076E E4                CLR     A
076F 3400        R     ADDC    A,#HIGH aa_value
0771 F583              MOV     DPH,A
0773 E0                MOVX    A,@DPTR
0774 FC                MOV     R4,A
0775 A3                INC     DPTR
0776 E0                MOVX    A,@DPTR
0777 FD                MOV     R5,A
0778 A3                INC     DPTR
0779 E0                MOVX    A,@DPTR
077A FE                MOV     R6,A
077B A3                INC     DPTR
077C E0                MOVX    A,@DPTR
077D FF                MOV     R7,A
077E E500        R     MOV     A,index
0780 25E0              ADD     A,ACC
0782 25E0              ADD     A,ACC
0784 2400        R     ADD     A,#LOW aaa_value
0786 F582              MOV     DPL,A
0788 E4                CLR     A
0789 3400        R     ADDC    A,#HIGH aaa_value
078B F583              MOV     DPH,A
078D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 746
0790 E500        R     MOV     A,index
0792 25E0              ADD     A,ACC
0794 25E0              ADD     A,ACC
0796 2400        R     ADD     A,#LOW a_value
0798 F582              MOV     DPL,A
079A E4                CLR     A
079B 3400        R     ADDC    A,#HIGH a_value
079D F583              MOV     DPH,A
079F E0                MOVX    A,@DPTR
07A0 FC                MOV     R4,A
07A1 A3                INC     DPTR
07A2 E0                MOVX    A,@DPTR
07A3 FD                MOV     R5,A
07A4 A3                INC     DPTR
07A5 E0                MOVX    A,@DPTR
07A6 FE                MOV     R6,A
07A7 A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 80  

07A8 E0                MOVX    A,@DPTR
07A9 FF                MOV     R7,A
07AA E500        R     MOV     A,index
07AC 25E0              ADD     A,ACC
07AE 25E0              ADD     A,ACC
07B0 2400        R     ADD     A,#LOW aa_value
07B2 F582              MOV     DPL,A
07B4 E4                CLR     A
07B5 3400        R     ADDC    A,#HIGH aa_value
07B7 F583              MOV     DPH,A
07B9 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 747
07BC 900000      R     MOV     DPTR,#speed_encoder
07BF E0                MOVX    A,@DPTR
07C0 FC                MOV     R4,A
07C1 A3                INC     DPTR
07C2 E0                MOVX    A,@DPTR
07C3 FD                MOV     R5,A
07C4 A3                INC     DPTR
07C5 E0                MOVX    A,@DPTR
07C6 FE                MOV     R6,A
07C7 A3                INC     DPTR
07C8 E0                MOVX    A,@DPTR
07C9 FF                MOV     R7,A
07CA E500        R     MOV     A,index
07CC 25E0              ADD     A,ACC
07CE 25E0              ADD     A,ACC
07D0 2400        R     ADD     A,#LOW a_value
07D2 F582              MOV     DPL,A
07D4 E4                CLR     A
07D5 3400        R     ADDC    A,#HIGH a_value
07D7 F583              MOV     DPH,A
07D9 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 748
07DC         ?C0103:
07DC 22                RET     
             ; FUNCTION _encoder_reading (END)

             ; FUNCTION analog_read_end (BEGIN)
                                           ; SOURCE LINE # 754
0000         ?C0129:
                                           ; SOURCE LINE # 797
0000 120000      E     LCALL   ADC_STATUS_Read
0003 EF                MOV     A,R7
0004 700A              JNZ     ?C0130
                                           ; SOURCE LINE # 798
0006 3000F7            JNB     interrupt_flag,?C0129
                                           ; SOURCE LINE # 799
0009 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 800
000B 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 801
                                           ; SOURCE LINE # 802
000E 80F0              SJMP    ?C0129
0010         ?C0130:
                                           ; SOURCE LINE # 805
0010 900000      E     MOV     DPTR,#ADC_buf+01H
0013 E0                MOVX    A,@DPTR
0014 249A              ADD     A,#09AH
0016 FF                MOV     R7,A
0017 900000      E     MOV     DPTR,#ADC_buf
001A E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 81  

001B 34F9              ADDC    A,#0F9H
001D FE                MOV     R6,A
001E 33                RLC     A
001F 95E0              SUBB    A,ACC
0021 FD                MOV     R5,A
0022 FC                MOV     R4,A
0023 E4                CLR     A
0024 7BA0              MOV     R3,#0A0H
0026 7A07              MOV     R2,#07H
0028 F9                MOV     R1,A
0029 F8                MOV     R0,A
002A 120000      E     LCALL   ?C?LMUL
002D 7807              MOV     R0,#07H
002F 120000      E     LCALL   ?C?SLSHR
0032 900000      E     MOV     DPTR,#dev_tension
0035 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 807
0038 300005            JNB     interrupt_flag,?C0132
                                           ; SOURCE LINE # 808
003B C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 809
003D 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 810
0040         ?C0132:
                                           ; SOURCE LINE # 812
0040 900000      E     MOV     DPTR,#first_tension_valid
0043 E0                MOVX    A,@DPTR
0044 6077              JZ      ?C0133
0046 300074            JNB     tension_valid,?C0133
                                           ; SOURCE LINE # 813
0049 900000      R     MOV     DPTR,#count
004C E0                MOVX    A,@DPTR
004D 04                INC     A
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 815
004F E0                MOVX    A,@DPTR
0050 64E8              XRL     A,#0E8H
0052 7002              JNZ     ?C0240
0054 7403              MOV     A,#03H
0056         ?C0240:
0056 7065              JNZ     ?C0133
                                           ; SOURCE LINE # 816
0058 7F28              MOV     R7,#028H
005A 7E23              MOV     R6,#023H
005C FD                MOV     R5,A
005D FC                MOV     R4,A
005E 900000      E     MOV     DPTR,#dev_tension
0061 E0                MOVX    A,@DPTR
0062 F8                MOV     R0,A
0063 A3                INC     DPTR
0064 E0                MOVX    A,@DPTR
0065 F9                MOV     R1,A
0066 A3                INC     DPTR
0067 E0                MOVX    A,@DPTR
0068 FA                MOV     R2,A
0069 A3                INC     DPTR
006A E0                MOVX    A,@DPTR
006B FB                MOV     R3,A
006C C3                CLR     C
006D 120000      E     LCALL   ?C?SLCMP
0070 500F              JNC     ?C0135
                                           ; SOURCE LINE # 817
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 82  

0072 E4                CLR     A
0073 7F40              MOV     R7,#040H
0075 7E1F              MOV     R6,#01FH
0077 FD                MOV     R5,A
0078 FC                MOV     R4,A
0079 900000      E     MOV     DPTR,#pow_tension
007C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 818
007F 8037              SJMP    ?C0136
0081         ?C0135:
                                           ; SOURCE LINE # 819
                                           ; SOURCE LINE # 820
0081 E4                CLR     A
0082 7FC8              MOV     R7,#0C8H
0084 7E32              MOV     R6,#032H
0086 FD                MOV     R5,A
0087 FC                MOV     R4,A
0088 900000      E     MOV     DPTR,#dev_tension
008B E0                MOVX    A,@DPTR
008C F8                MOV     R0,A
008D A3                INC     DPTR
008E E0                MOVX    A,@DPTR
008F F9                MOV     R1,A
0090 A3                INC     DPTR
0091 E0                MOVX    A,@DPTR
0092 FA                MOV     R2,A
0093 A3                INC     DPTR
0094 E0                MOVX    A,@DPTR
0095 FB                MOV     R3,A
0096 C3                CLR     C
0097 120000      E     LCALL   ?C?SLCMP
009A 500F              JNC     ?C0137
                                           ; SOURCE LINE # 821
009C E4                CLR     A
009D 7FE0              MOV     R7,#0E0H
009F 7E2E              MOV     R6,#02EH
00A1 FD                MOV     R5,A
00A2 FC                MOV     R4,A
00A3 900000      E     MOV     DPTR,#pow_tension
00A6 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 822
00A9 800D              SJMP    ?C0136
00AB         ?C0137:
                                           ; SOURCE LINE # 824
00AB E4                CLR     A
00AC 7FC0              MOV     R7,#0C0H
00AE 7E5D              MOV     R6,#05DH
00B0 FD                MOV     R5,A
00B1 FC                MOV     R4,A
00B2 900000      E     MOV     DPTR,#pow_tension
00B5 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 825
00B8         ?C0136:
                                           ; SOURCE LINE # 827
00B8 E4                CLR     A
00B9 900000      E     MOV     DPTR,#first_tension_valid
00BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 828
                                           ; SOURCE LINE # 829
00BD         ?C0133:
                                           ; SOURCE LINE # 833
00BD E4                CLR     A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 83  

00BE 7F58              MOV     R7,#058H
00C0 7E1B              MOV     R6,#01BH
00C2 FD                MOV     R5,A
00C3 FC                MOV     R4,A
00C4 900000      E     MOV     DPTR,#dev_tension
00C7 E0                MOVX    A,@DPTR
00C8 F8                MOV     R0,A
00C9 A3                INC     DPTR
00CA E0                MOVX    A,@DPTR
00CB F9                MOV     R1,A
00CC A3                INC     DPTR
00CD E0                MOVX    A,@DPTR
00CE FA                MOV     R2,A
00CF A3                INC     DPTR
00D0 E0                MOVX    A,@DPTR
00D1 FB                MOV     R3,A
00D2 D3                SETB    C
00D3 120000      E     LCALL   ?C?SLCMP
00D6 5003              JNC     $ + 5H
00D8 020000      R     LJMP    ?C0139
                                           ; SOURCE LINE # 836
00DB E4                CLR     A
00DC 7FE8              MOV     R7,#0E8H
00DE 7E03              MOV     R6,#03H
00E0 FD                MOV     R5,A
00E1 FC                MOV     R4,A
00E2 900000      R     MOV     DPTR,#count2
00E5 E0                MOVX    A,@DPTR
00E6 F8                MOV     R0,A
00E7 A3                INC     DPTR
00E8 E0                MOVX    A,@DPTR
00E9 F9                MOV     R1,A
00EA A3                INC     DPTR
00EB E0                MOVX    A,@DPTR
00EC FA                MOV     R2,A
00ED A3                INC     DPTR
00EE E0                MOVX    A,@DPTR
00EF FB                MOV     R3,A
00F0 120000      E     LCALL   ?C?ULCMP
00F3 7004              JNZ     ?C0140
                                           ; SOURCE LINE # 837
00F5 D200        E     SETB    tension_valid
                                           ; SOURCE LINE # 838
00F7 8036              SJMP    ?C0141
00F9         ?C0140:
                                           ; SOURCE LINE # 839
                                           ; SOURCE LINE # 840
00F9 900000      R     MOV     DPTR,#count2
00FC E0                MOVX    A,@DPTR
00FD FC                MOV     R4,A
00FE A3                INC     DPTR
00FF E0                MOVX    A,@DPTR
0100 FD                MOV     R5,A
0101 A3                INC     DPTR
0102 E0                MOVX    A,@DPTR
0103 FE                MOV     R6,A
0104 A3                INC     DPTR
0105 E0                MOVX    A,@DPTR
0106 2401              ADD     A,#01H
0108 FF                MOV     R7,A
0109 E4                CLR     A
010A 3E                ADDC    A,R6
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 84  

010B FE                MOV     R6,A
010C E4                CLR     A
010D 3D                ADDC    A,R5
010E FD                MOV     R5,A
010F E4                CLR     A
0110 3C                ADDC    A,R4
0111 FC                MOV     R4,A
0112 900000      R     MOV     DPTR,#count2
0115 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 841
0118 900000      E     MOV     DPTR,#dev_tension
011B E0                MOVX    A,@DPTR
011C FC                MOV     R4,A
011D A3                INC     DPTR
011E E0                MOVX    A,@DPTR
011F FD                MOV     R5,A
0120 A3                INC     DPTR
0121 E0                MOVX    A,@DPTR
0122 FE                MOV     R6,A
0123 A3                INC     DPTR
0124 E0                MOVX    A,@DPTR
0125 FF                MOV     R7,A
0126 120000      E     LCALL   _filter_voltage
0129 900000      E     MOV     DPTR,#dev_tension_f
012C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 842
012F         ?C0141:
                                           ; SOURCE LINE # 846
012F 300005            JNB     interrupt_flag,?C0142
                                           ; SOURCE LINE # 847
0132 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 848
0134 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 849
0137         ?C0142:
                                           ; SOURCE LINE # 852
0137 900000      E     MOV     DPTR,#g_mem+03BH
013A E0                MOVX    A,@DPTR
013B 7004              JNZ     ?C0143
                                           ; SOURCE LINE # 853
013D F500        R     MOV     emg_1_status,A
                                           ; SOURCE LINE # 854
013F F500        R     MOV     emg_2_status,A
                                           ; SOURCE LINE # 855
0141         ?C0143:
                                           ; SOURCE LINE # 858
0141 900000      E     MOV     DPTR,#c_mem+02H
0144 E0                MOVX    A,@DPTR
0145 6406              XRL     A,#06H
0147 6003              JZ      $ + 5H
0149 020000      R     LJMP    ?C0144
                                           ; SOURCE LINE # 862
014C E500        R     MOV     A,UD_status
014E 14                DEC     A
014F 7003              JNZ     $ + 5H
0151 020000      R     LJMP    ?C0151
0154 14                DEC     A
0155 7003              JNZ     $ + 5H
0157 020000      R     LJMP    ?C0152
015A 14                DEC     A
015B 7003              JNZ     $ + 5H
015D 020000      R     LJMP    ?C0155
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 85  

0160 14                DEC     A
0161 7003              JNZ     $ + 5H
0163 020000      R     LJMP    ?C0159
0166 2404              ADD     A,#04H
0168 6003              JZ      $ + 5H
016A 020000      R     LJMP    ?C0145
                                           ; SOURCE LINE # 863
016D         ?C0146:
                                           ; SOURCE LINE # 864
016D 900000      E     MOV     DPTR,#ADC_buf+04H
0170 E0                MOVX    A,@DPTR
0171 FE                MOV     R6,A
0172 A3                INC     DPTR
0173 E0                MOVX    A,@DPTR
0174 FF                MOV     R7,A
0175 EE                MOV     A,R6
0176 33                RLC     A
0177 95E0              SUBB    A,ACC
0179 8F00        R     MOV     i_aux+03H,R7
017B 8E00        R     MOV     i_aux+02H,R6
017D F500        R     MOV     i_aux+01H,A
017F F500        R     MOV     i_aux,A
                                           ; SOURCE LINE # 866
0181 C3                CLR     C
0182 E500        R     MOV     A,i_aux+03H
0184 9500        R     SUBB    A,UD_mean_value+03H
0186 FF                MOV     R7,A
0187 E500        R     MOV     A,i_aux+02H
0189 9500        R     SUBB    A,UD_mean_value+02H
018B FE                MOV     R6,A
018C E500        R     MOV     A,i_aux+01H
018E 9500        R     SUBB    A,UD_mean_value+01H
0190 FD                MOV     R5,A
0191 E500        R     MOV     A,i_aux
0193 9500        R     SUBB    A,UD_mean_value
0195 FC                MOV     R4,A
0196 120000      E     LCALL   ?C?FCASTL
0199 C004              PUSH    AR4
019B C005              PUSH    AR5
019D C006              PUSH    AR6
019F C007              PUSH    AR7
01A1 AF00        R     MOV     R7,UD_mean_value+03H
01A3 AE00        R     MOV     R6,UD_mean_value+02H
01A5 AD00        R     MOV     R5,UD_mean_value+01H
01A7 AC00        R     MOV     R4,UD_mean_value
01A9 EC                MOV     A,R4
01AA 120000      E     LCALL   ?C?FCASTL
01AD A804              MOV     R0,AR4
01AF A905              MOV     R1,AR5
01B1 AA06              MOV     R2,AR6
01B3 AB07              MOV     R3,AR7
01B5 D007              POP     AR7
01B7 D006              POP     AR6
01B9 D005              POP     AR5
01BB D004              POP     AR4
01BD 120000      E     LCALL   ?C?FPDIV
01C0 C004              PUSH    AR4
01C2 C005              PUSH    AR5
01C4 C006              PUSH    AR6
01C6 C007              PUSH    AR7
01C8 900000      E     MOV     DPTR,#g_mem+06DH
01CB E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 86  

01CC FC                MOV     R4,A
01CD A3                INC     DPTR
01CE E0                MOVX    A,@DPTR
01CF FD                MOV     R5,A
01D0 E4                CLR     A
01D1 120000      E     LCALL   ?C?FCASTI
01D4 D003              POP     AR3
01D6 D002              POP     AR2
01D8 D001              POP     AR1
01DA D000              POP     AR0
01DC 120000      E     LCALL   ?C?FPMUL
01DF 120000      E     LCALL   ?C?CASTF
01E2 8F00        R     MOV     i_aux+03H,R7
01E4 8E00        R     MOV     i_aux+02H,R6
01E6 8D00        R     MOV     i_aux+01H,R5
01E8 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 868
01EA 300005            JNB     interrupt_flag,?C0147
                                           ; SOURCE LINE # 869
01ED C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 870
01EF 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 871
01F2         ?C0147:
                                           ; SOURCE LINE # 874
01F2 7F00              MOV     R7,#00H
01F4 7EFC              MOV     R6,#0FCH
01F6 7DFF              MOV     R5,#0FFH
01F8 7CFF              MOV     R4,#0FFH
01FA AB00        R     MOV     R3,i_aux+03H
01FC AA00        R     MOV     R2,i_aux+02H
01FE A900        R     MOV     R1,i_aux+01H
0200 A800        R     MOV     R0,i_aux
0202 C3                CLR     C
0203 120000      E     LCALL   ?C?SLCMP
0206 500C              JNC     ?C0148
                                           ; SOURCE LINE # 875
0208 750000      R     MOV     i_aux+03H,#00H
020B 7500FC      R     MOV     i_aux+02H,#0FCH
020E 7500FF      R     MOV     i_aux+01H,#0FFH
0211 7500FF      R     MOV     i_aux,#0FFH
0214         ?C0148:
                                           ; SOURCE LINE # 876
0214 E4                CLR     A
0215 FF                MOV     R7,A
0216 7E04              MOV     R6,#04H
0218 FD                MOV     R5,A
0219 FC                MOV     R4,A
021A AB00        R     MOV     R3,i_aux+03H
021C AA00        R     MOV     R2,i_aux+02H
021E A900        R     MOV     R1,i_aux+01H
0220 A800        R     MOV     R0,i_aux
0222 D3                SETB    C
0223 120000      E     LCALL   ?C?SLCMP
0226 400A              JC      ?C0149
                                           ; SOURCE LINE # 877
0228 E4                CLR     A
0229 F500        R     MOV     i_aux+03H,A
022B 750004      R     MOV     i_aux+02H,#04H
022E F500        R     MOV     i_aux+01H,A
0230 F500        R     MOV     i_aux,A
0232         ?C0149:
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 87  

                                           ; SOURCE LINE # 879
0232 900000      E     MOV     DPTR,#g_meas+031H
0235 E500        R     MOV     A,i_aux+02H
0237 F0                MOVX    @DPTR,A
0238 A3                INC     DPTR
0239 E500        R     MOV     A,i_aux+03H
023B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 881
023C 200003      E     JB      interrupt_flag,$ + 6H
023F 020000      R     LJMP    ?C0145
                                           ; SOURCE LINE # 882
0242 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 883
0244 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 884
                                           ; SOURCE LINE # 886
0247 020000      R     LJMP    ?C0145
                                           ; SOURCE LINE # 888
024A         ?C0151:
                                           ; SOURCE LINE # 889
024A E4                CLR     A
024B F500        R     MOV     UD_counter,A
024D F500        R     MOV     UD_counter+01H,A
                                           ; SOURCE LINE # 890
024F F500        R     MOV     UD_mean_value+03H,A
0251 F500        R     MOV     UD_mean_value+02H,A
0253 F500        R     MOV     UD_mean_value+01H,A
0255 F500        R     MOV     UD_mean_value,A
                                           ; SOURCE LINE # 891
0257 750004      R     MOV     UD_status,#04H
                                           ; SOURCE LINE # 893
025A 020000      R     LJMP    ?C0145
                                           ; SOURCE LINE # 895
025D         ?C0152:
                                           ; SOURCE LINE # 896
025D 0500        R     INC     UD_counter+01H
025F E500        R     MOV     A,UD_counter+01H
0261 7002              JNZ     ?C0241
0263 0500        R     INC     UD_counter
0265         ?C0241:
                                           ; SOURCE LINE # 897
0265 6464              XRL     A,#064H
0267 4500        R     ORL     A,UD_counter
0269 707F              JNZ     ?C0145
                                           ; SOURCE LINE # 898
026B F500        R     MOV     UD_counter,A
026D F500        R     MOV     UD_counter+01H,A
                                           ; SOURCE LINE # 900
026F 300005            JNB     interrupt_flag,?C0154
                                           ; SOURCE LINE # 901
0272 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 902
0274 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 903
0277         ?C0154:
                                           ; SOURCE LINE # 905
0277 750003      R     MOV     UD_status,#03H
                                           ; SOURCE LINE # 906
                                           ; SOURCE LINE # 908
027A 806E              SJMP    ?C0145
                                           ; SOURCE LINE # 910
027C         ?C0155:
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 88  

                                           ; SOURCE LINE # 912
027C 0500        R     INC     UD_counter+01H
027E E500        R     MOV     A,UD_counter+01H
0280 7002              JNZ     ?C0242
0282 0500        R     INC     UD_counter
0284         ?C0242:
                                           ; SOURCE LINE # 913
0284 900000      E     MOV     DPTR,#ADC_buf+04H
0287 E0                MOVX    A,@DPTR
0288 FE                MOV     R6,A
0289 A3                INC     DPTR
028A E0                MOVX    A,@DPTR
028B FF                MOV     R7,A
028C EE                MOV     A,R6
028D 33                RLC     A
028E 95E0              SUBB    A,ACC
0290 FD                MOV     R5,A
0291 FC                MOV     R4,A
0292 E500        R     MOV     A,UD_mean_value+03H
0294 2F                ADD     A,R7
0295 F500        R     MOV     UD_mean_value+03H,A
0297 E500        R     MOV     A,UD_mean_value+02H
0299 3E                ADDC    A,R6
029A F500        R     MOV     UD_mean_value+02H,A
029C E500        R     MOV     A,UD_mean_value+01H
029E 3D                ADDC    A,R5
029F F500        R     MOV     UD_mean_value+01H,A
02A1 E500        R     MOV     A,UD_mean_value
02A3 3C                ADDC    A,R4
02A4 F500        R     MOV     UD_mean_value,A
                                           ; SOURCE LINE # 915
02A6 300005            JNB     interrupt_flag,?C0156
                                           ; SOURCE LINE # 916
02A9 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 917
02AB 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 918
02AE         ?C0156:
                                           ; SOURCE LINE # 920
02AE E500        R     MOV     A,UD_counter+01H
02B0 64C8              XRL     A,#0C8H
02B2 4500        R     ORL     A,UD_counter
02B4 7034              JNZ     ?C0145
                                           ; SOURCE LINE # 921
02B6 AF00        R     MOV     R7,UD_mean_value+03H
02B8 AE00        R     MOV     R6,UD_mean_value+02H
02BA AD00        R     MOV     R5,UD_mean_value+01H
02BC AC00        R     MOV     R4,UD_mean_value
02BE 7BC8              MOV     R3,#0C8H
02C0 FA                MOV     R2,A
02C1 F9                MOV     R1,A
02C2 F8                MOV     R0,A
02C3 120000      E     LCALL   ?C?SLDIV
02C6 8F00        R     MOV     UD_mean_value+03H,R7
02C8 8E00        R     MOV     UD_mean_value+02H,R6
02CA 8D00        R     MOV     UD_mean_value+01H,R5
02CC 8C00        R     MOV     UD_mean_value,R4
                                           ; SOURCE LINE # 923
02CE 300005            JNB     interrupt_flag,?C0158
                                           ; SOURCE LINE # 924
02D1 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 925
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 89  

02D3 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 926
02D6         ?C0158:
                                           ; SOURCE LINE # 928
02D6 E4                CLR     A
02D7 F500        R     MOV     UD_counter,A
02D9 F500        R     MOV     UD_counter+01H,A
                                           ; SOURCE LINE # 929
02DB F500        R     MOV     UD_status,A
                                           ; SOURCE LINE # 930
                                           ; SOURCE LINE # 931
02DD 800B              SJMP    ?C0145
                                           ; SOURCE LINE # 933
02DF         ?C0159:
                                           ; SOURCE LINE # 934
02DF E500        R     MOV     A,emg_1_status
02E1 7007              JNZ     ?C0145
02E3 E500        R     MOV     A,emg_2_status
02E5 7003              JNZ     ?C0145
                                           ; SOURCE LINE # 935
02E7 750002      R     MOV     UD_status,#02H
                                           ; SOURCE LINE # 936
                                           ; SOURCE LINE # 937
02EA         ?C0145:
                                           ; SOURCE LINE # 939
02EA 300005            JNB     interrupt_flag,?C0161
                                           ; SOURCE LINE # 940
02ED C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 941
02EF 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 942
02F2         ?C0161:
                                           ; SOURCE LINE # 944
02F2 E500        R     MOV     A,LR_status
02F4 14                DEC     A
02F5 7003              JNZ     $ + 5H
02F7 020000      R     LJMP    ?C0168
02FA 14                DEC     A
02FB 7003              JNZ     $ + 5H
02FD 020000      R     LJMP    ?C0169
0300 14                DEC     A
0301 7003              JNZ     $ + 5H
0303 020000      R     LJMP    ?C0172
0306 14                DEC     A
0307 7003              JNZ     $ + 5H
0309 020000      R     LJMP    ?C0175
030C 2404              ADD     A,#04H
030E 6003              JZ      $ + 5H
0310 020000      R     LJMP    ?C0162
                                           ; SOURCE LINE # 945
0313         ?C0163:
                                           ; SOURCE LINE # 946
0313 900000      E     MOV     DPTR,#ADC_buf+06H
0316 E0                MOVX    A,@DPTR
0317 FE                MOV     R6,A
0318 A3                INC     DPTR
0319 E0                MOVX    A,@DPTR
031A FF                MOV     R7,A
031B EE                MOV     A,R6
031C 33                RLC     A
031D 95E0              SUBB    A,ACC
031F 8F00        R     MOV     i_aux+03H,R7
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 90  

0321 8E00        R     MOV     i_aux+02H,R6
0323 F500        R     MOV     i_aux+01H,A
0325 F500        R     MOV     i_aux,A
                                           ; SOURCE LINE # 948
0327 C3                CLR     C
0328 E500        R     MOV     A,i_aux+03H
032A 9500        R     SUBB    A,LR_mean_value+03H
032C FF                MOV     R7,A
032D E500        R     MOV     A,i_aux+02H
032F 9500        R     SUBB    A,LR_mean_value+02H
0331 FE                MOV     R6,A
0332 E500        R     MOV     A,i_aux+01H
0334 9500        R     SUBB    A,LR_mean_value+01H
0336 FD                MOV     R5,A
0337 E500        R     MOV     A,i_aux
0339 9500        R     SUBB    A,LR_mean_value
033B FC                MOV     R4,A
033C 120000      E     LCALL   ?C?FCASTL
033F C004              PUSH    AR4
0341 C005              PUSH    AR5
0343 C006              PUSH    AR6
0345 C007              PUSH    AR7
0347 AF00        R     MOV     R7,LR_mean_value+03H
0349 AE00        R     MOV     R6,LR_mean_value+02H
034B AD00        R     MOV     R5,LR_mean_value+01H
034D AC00        R     MOV     R4,LR_mean_value
034F EC                MOV     A,R4
0350 120000      E     LCALL   ?C?FCASTL
0353 A804              MOV     R0,AR4
0355 A905              MOV     R1,AR5
0357 AA06              MOV     R2,AR6
0359 AB07              MOV     R3,AR7
035B D007              POP     AR7
035D D006              POP     AR6
035F D005              POP     AR5
0361 D004              POP     AR4
0363 120000      E     LCALL   ?C?FPDIV
0366 C004              PUSH    AR4
0368 C005              PUSH    AR5
036A C006              PUSH    AR6
036C C007              PUSH    AR7
036E 900000      E     MOV     DPTR,#g_mem+06DH
0371 E0                MOVX    A,@DPTR
0372 FC                MOV     R4,A
0373 A3                INC     DPTR
0374 E0                MOVX    A,@DPTR
0375 FD                MOV     R5,A
0376 E4                CLR     A
0377 120000      E     LCALL   ?C?FCASTI
037A D003              POP     AR3
037C D002              POP     AR2
037E D001              POP     AR1
0380 D000              POP     AR0
0382 120000      E     LCALL   ?C?FPMUL
0385 120000      E     LCALL   ?C?CASTF
0388 8F00        R     MOV     i_aux+03H,R7
038A 8E00        R     MOV     i_aux+02H,R6
038C 8D00        R     MOV     i_aux+01H,R5
038E 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 950
0390 300005            JNB     interrupt_flag,?C0164
                                           ; SOURCE LINE # 951
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 91  

0393 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 952
0395 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 953
0398         ?C0164:
                                           ; SOURCE LINE # 956
0398 7F00              MOV     R7,#00H
039A 7EFC              MOV     R6,#0FCH
039C 7DFF              MOV     R5,#0FFH
039E 7CFF              MOV     R4,#0FFH
03A0 AB00        R     MOV     R3,i_aux+03H
03A2 AA00        R     MOV     R2,i_aux+02H
03A4 A900        R     MOV     R1,i_aux+01H
03A6 A800        R     MOV     R0,i_aux
03A8 C3                CLR     C
03A9 120000      E     LCALL   ?C?SLCMP
03AC 500C              JNC     ?C0165
                                           ; SOURCE LINE # 957
03AE 750000      R     MOV     i_aux+03H,#00H
03B1 7500FC      R     MOV     i_aux+02H,#0FCH
03B4 7500FF      R     MOV     i_aux+01H,#0FFH
03B7 7500FF      R     MOV     i_aux,#0FFH
03BA         ?C0165:
                                           ; SOURCE LINE # 958
03BA E4                CLR     A
03BB FF                MOV     R7,A
03BC 7E04              MOV     R6,#04H
03BE FD                MOV     R5,A
03BF FC                MOV     R4,A
03C0 AB00        R     MOV     R3,i_aux+03H
03C2 AA00        R     MOV     R2,i_aux+02H
03C4 A900        R     MOV     R1,i_aux+01H
03C6 A800        R     MOV     R0,i_aux
03C8 D3                SETB    C
03C9 120000      E     LCALL   ?C?SLCMP
03CC 400A              JC      ?C0166
                                           ; SOURCE LINE # 959
03CE E4                CLR     A
03CF F500        R     MOV     i_aux+03H,A
03D1 750004      R     MOV     i_aux+02H,#04H
03D4 F500        R     MOV     i_aux+01H,A
03D6 F500        R     MOV     i_aux,A
03D8         ?C0166:
                                           ; SOURCE LINE # 961
03D8 300005            JNB     interrupt_flag,?C0167
                                           ; SOURCE LINE # 962
03DB C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 963
03DD 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 964
03E0         ?C0167:
                                           ; SOURCE LINE # 966
03E0 900000      E     MOV     DPTR,#g_meas+02FH
03E3 E500        R     MOV     A,i_aux+02H
03E5 F0                MOVX    @DPTR,A
03E6 A3                INC     DPTR
03E7 E500        R     MOV     A,i_aux+03H
03E9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 968
03EA 020000      R     LJMP    ?C0162
                                           ; SOURCE LINE # 970
03ED         ?C0168:
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 92  

                                           ; SOURCE LINE # 971
03ED E4                CLR     A
03EE F500        R     MOV     LR_counter,A
03F0 F500        R     MOV     LR_counter+01H,A
                                           ; SOURCE LINE # 972
03F2 F500        R     MOV     LR_mean_value+03H,A
03F4 F500        R     MOV     LR_mean_value+02H,A
03F6 F500        R     MOV     LR_mean_value+01H,A
03F8 F500        R     MOV     LR_mean_value,A
                                           ; SOURCE LINE # 973
03FA 750004      R     MOV     LR_status,#04H
                                           ; SOURCE LINE # 974
03FD 020000      R     LJMP    ?C0162
                                           ; SOURCE LINE # 976
0400         ?C0169:
                                           ; SOURCE LINE # 977
0400 0500        R     INC     LR_counter+01H
0402 E500        R     MOV     A,LR_counter+01H
0404 7002              JNZ     ?C0243
0406 0500        R     INC     LR_counter
0408         ?C0243:
                                           ; SOURCE LINE # 978
0408 6464              XRL     A,#064H
040A 4500        R     ORL     A,LR_counter
040C 707B              JNZ     ?C0162
                                           ; SOURCE LINE # 979
040E F500        R     MOV     LR_counter,A
0410 F500        R     MOV     LR_counter+01H,A
                                           ; SOURCE LINE # 981
0412 300005            JNB     interrupt_flag,?C0171
                                           ; SOURCE LINE # 982
0415 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 983
0417 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 984
041A         ?C0171:
                                           ; SOURCE LINE # 986
041A 750003      R     MOV     LR_status,#03H
                                           ; SOURCE LINE # 987
                                           ; SOURCE LINE # 988
041D 806A              SJMP    ?C0162
                                           ; SOURCE LINE # 990
041F         ?C0172:
                                           ; SOURCE LINE # 992
041F 0500        R     INC     LR_counter+01H
0421 E500        R     MOV     A,LR_counter+01H
0423 7002              JNZ     ?C0244
0425 0500        R     INC     LR_counter
0427         ?C0244:
                                           ; SOURCE LINE # 993
0427 900000      E     MOV     DPTR,#ADC_buf+06H
042A E0                MOVX    A,@DPTR
042B FE                MOV     R6,A
042C A3                INC     DPTR
042D E0                MOVX    A,@DPTR
042E FF                MOV     R7,A
042F EE                MOV     A,R6
0430 33                RLC     A
0431 95E0              SUBB    A,ACC
0433 FD                MOV     R5,A
0434 FC                MOV     R4,A
0435 E500        R     MOV     A,LR_mean_value+03H
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 93  

0437 2F                ADD     A,R7
0438 F500        R     MOV     LR_mean_value+03H,A
043A E500        R     MOV     A,LR_mean_value+02H
043C 3E                ADDC    A,R6
043D F500        R     MOV     LR_mean_value+02H,A
043F E500        R     MOV     A,LR_mean_value+01H
0441 3D                ADDC    A,R5
0442 F500        R     MOV     LR_mean_value+01H,A
0444 E500        R     MOV     A,LR_mean_value
0446 3C                ADDC    A,R4
0447 F500        R     MOV     LR_mean_value,A
                                           ; SOURCE LINE # 994
0449 E500        R     MOV     A,LR_counter+01H
044B 64C8              XRL     A,#0C8H
044D 4500        R     ORL     A,LR_counter
044F 7038              JNZ     ?C0162
                                           ; SOURCE LINE # 995
0451 AF00        R     MOV     R7,LR_mean_value+03H
0453 AE00        R     MOV     R6,LR_mean_value+02H
0455 AD00        R     MOV     R5,LR_mean_value+01H
0457 AC00        R     MOV     R4,LR_mean_value
0459 7BC8              MOV     R3,#0C8H
045B FA                MOV     R2,A
045C F9                MOV     R1,A
045D F8                MOV     R0,A
045E 120000      E     LCALL   ?C?SLDIV
0461 8F00        R     MOV     LR_mean_value+03H,R7
0463 8E00        R     MOV     LR_mean_value+02H,R6
0465 8D00        R     MOV     LR_mean_value+01H,R5
0467 8C00        R     MOV     LR_mean_value,R4
                                           ; SOURCE LINE # 997
0469 300005            JNB     interrupt_flag,?C0174
                                           ; SOURCE LINE # 998
046C C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 999
046E 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1000
0471         ?C0174:
                                           ; SOURCE LINE # 1002
0471 E4                CLR     A
0472 F500        R     MOV     LR_counter,A
0474 F500        R     MOV     LR_counter+01H,A
                                           ; SOURCE LINE # 1003
0476 F500        R     MOV     LR_status,A
                                           ; SOURCE LINE # 1004
                                           ; SOURCE LINE # 1005
0478 800F              SJMP    ?C0162
                                           ; SOURCE LINE # 1007
047A         ?C0175:
                                           ; SOURCE LINE # 1008
047A E500        R     MOV     A,emg_1_status
047C 700B              JNZ     ?C0162
047E E500        R     MOV     A,emg_2_status
0480 7007              JNZ     ?C0162
0482 E500        R     MOV     A,UD_status
0484 7003              JNZ     ?C0162
                                           ; SOURCE LINE # 1009
0486 750002      R     MOV     LR_status,#02H
                                           ; SOURCE LINE # 1010
                                           ; SOURCE LINE # 1011
0489         ?C0162:
                                           ; SOURCE LINE # 1013
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 94  

0489 200003      E     JB      interrupt_flag,$ + 6H
048C 020000      R     LJMP    ?C0224
                                           ; SOURCE LINE # 1014
048F C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1015
0491 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1016
                                           ; SOURCE LINE # 1018
0494 020000      R     LJMP    ?C0224
0497         ?C0144:
                                           ; SOURCE LINE # 1019
                                           ; SOURCE LINE # 1025
0497 E500        R     MOV     A,emg_1_status
0499 14                DEC     A
049A 7003              JNZ     $ + 5H
049C 020000      R     LJMP    ?C0187
049F 14                DEC     A
04A0 7003              JNZ     $ + 5H
04A2 020000      R     LJMP    ?C0188
04A5 14                DEC     A
04A6 7003              JNZ     $ + 5H
04A8 020000      R     LJMP    ?C0191
04AB 2403              ADD     A,#03H
04AD 6003              JZ      $ + 5H
04AF 020000      R     LJMP    ?C0179
                                           ; SOURCE LINE # 1026
04B2         ?C0180:
                                           ; SOURCE LINE # 1027
04B2 900000      E     MOV     DPTR,#ADC_buf+04H
04B5 E0                MOVX    A,@DPTR
04B6 FE                MOV     R6,A
04B7 A3                INC     DPTR
04B8 E0                MOVX    A,@DPTR
04B9 FF                MOV     R7,A
04BA EE                MOV     A,R6
04BB 33                RLC     A
04BC 95E0              SUBB    A,ACC
04BE 8F00        R     MOV     i_aux+03H,R7
04C0 8E00        R     MOV     i_aux+02H,R6
04C2 F500        R     MOV     i_aux+01H,A
04C4 F500        R     MOV     i_aux,A
                                           ; SOURCE LINE # 1028
04C6 E4                CLR     A
04C7 FF                MOV     R7,A
04C8 FE                MOV     R6,A
04C9 FD                MOV     R5,A
04CA FC                MOV     R4,A
04CB AB00        R     MOV     R3,i_aux+03H
04CD AA00        R     MOV     R2,i_aux+02H
04CF A900        R     MOV     R1,i_aux+01H
04D1 A800        R     MOV     R0,i_aux
04D3 C3                CLR     C
04D4 120000      E     LCALL   ?C?SLCMP
04D7 5009              JNC     ?C0181
                                           ; SOURCE LINE # 1029
04D9 E4                CLR     A
04DA F500        R     MOV     i_aux+03H,A
04DC F500        R     MOV     i_aux+02H,A
04DE F500        R     MOV     i_aux+01H,A
04E0 F500        R     MOV     i_aux,A
04E2         ?C0181:
                                           ; SOURCE LINE # 1030
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 95  

04E2 AF00        R     MOV     R7,i_aux+03H
04E4 AE00        R     MOV     R6,i_aux+02H
04E6 AD00        R     MOV     R5,i_aux+01H
04E8 AC00        R     MOV     R4,i_aux
04EA 120000      E     LCALL   _filter_ch1
04ED 8F00        R     MOV     i_aux+03H,R7
04EF 8E00        R     MOV     i_aux+02H,R6
04F1 8D00        R     MOV     i_aux+01H,R5
04F3 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 1031
04F5 780A              MOV     R0,#0AH
04F7 120000      E     LCALL   ?C?LSHL
04FA 900000      E     MOV     DPTR,#g_mem+03CH
04FD E0                MOVX    A,@DPTR
04FE F8                MOV     R0,A
04FF A3                INC     DPTR
0500 E0                MOVX    A,@DPTR
0501 F9                MOV     R1,A
0502 A3                INC     DPTR
0503 E0                MOVX    A,@DPTR
0504 FA                MOV     R2,A
0505 A3                INC     DPTR
0506 E0                MOVX    A,@DPTR
0507 FB                MOV     R3,A
0508 120000      E     LCALL   ?C?ULDIV
050B 8F00        R     MOV     i_aux+03H,R7
050D 8E00        R     MOV     i_aux+02H,R6
050F 8D00        R     MOV     i_aux+01H,R5
0511 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 1033
0513 300005            JNB     interrupt_flag,?C0182
                                           ; SOURCE LINE # 1034
0516 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1035
0518 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1036
051B         ?C0182:
                                           ; SOURCE LINE # 1038
051B E4                CLR     A
051C FF                MOV     R7,A
051D FE                MOV     R6,A
051E FD                MOV     R5,A
051F FC                MOV     R4,A
0520 AB00        R     MOV     R3,i_aux+03H
0522 AA00        R     MOV     R2,i_aux+02H
0524 A900        R     MOV     R1,i_aux+01H
0526 A800        R     MOV     R0,i_aux
0528 C3                CLR     C
0529 120000      E     LCALL   ?C?SLCMP
052C 500B              JNC     ?C0183
                                           ; SOURCE LINE # 1039
052E E4                CLR     A
052F F500        R     MOV     i_aux+03H,A
0531 F500        R     MOV     i_aux+02H,A
0533 F500        R     MOV     i_aux+01H,A
0535 F500        R     MOV     i_aux,A
0537 801E              SJMP    ?C0184
0539         ?C0183:
                                           ; SOURCE LINE # 1041
0539 E4                CLR     A
053A FF                MOV     R7,A
053B 7E04              MOV     R6,#04H
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 96  

053D FD                MOV     R5,A
053E FC                MOV     R4,A
053F AB00        R     MOV     R3,i_aux+03H
0541 AA00        R     MOV     R2,i_aux+02H
0543 A900        R     MOV     R1,i_aux+01H
0545 A800        R     MOV     R0,i_aux
0547 D3                SETB    C
0548 120000      E     LCALL   ?C?SLCMP
054B 400A              JC      ?C0184
                                           ; SOURCE LINE # 1042
054D E4                CLR     A
054E F500        R     MOV     i_aux+03H,A
0550 750004      R     MOV     i_aux+02H,#04H
0553 F500        R     MOV     i_aux+01H,A
0555 F500        R     MOV     i_aux,A
0557         ?C0184:
                                           ; SOURCE LINE # 1044
0557 AF00        R     MOV     R7,i_aux+03H
0559 AE00        R     MOV     R6,i_aux+02H
055B AD00        R     MOV     R5,i_aux+01H
055D AC00        R     MOV     R4,i_aux
055F 900000      E     MOV     DPTR,#g_meas+0FH
0562 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1046
0565 200003      E     JB      interrupt_flag,$ + 6H
0568 020000      R     LJMP    ?C0179
                                           ; SOURCE LINE # 1047
056B C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1048
056D 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1049
                                           ; SOURCE LINE # 1051
0570 020000      R     LJMP    ?C0179
                                           ; SOURCE LINE # 1053
0573         ?C0187:
                                           ; SOURCE LINE # 1054
0573 E4                CLR     A
0574 900000      R     MOV     DPTR,#emg_counter_1
0577 F0                MOVX    @DPTR,A
0578 A3                INC     DPTR
0579 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1055
057A FF                MOV     R7,A
057B FE                MOV     R6,A
057C FD                MOV     R5,A
057D FC                MOV     R4,A
057E 900000      E     MOV     DPTR,#g_mem+03CH
0581 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1056
0584 750002      R     MOV     emg_1_status,#02H
                                           ; SOURCE LINE # 1058
0587 020000      R     LJMP    ?C0179
                                           ; SOURCE LINE # 1060
058A         ?C0188:
                                           ; SOURCE LINE # 1061
058A 900000      R     MOV     DPTR,#emg_counter_1+01H
058D E0                MOVX    A,@DPTR
058E 04                INC     A
058F F0                MOVX    @DPTR,A
0590 7006              JNZ     ?C0245
0592 900000      R     MOV     DPTR,#emg_counter_1
0595 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 97  

0596 04                INC     A
0597 F0                MOVX    @DPTR,A
0598         ?C0245:
                                           ; SOURCE LINE # 1062
0598 900000      R     MOV     DPTR,#emg_counter_1
059B E0                MOVX    A,@DPTR
059C 6401              XRL     A,#01H
059E 7004              JNZ     ?C0246
05A0 A3                INC     DPTR
05A1 E0                MOVX    A,@DPTR
05A2 64F4              XRL     A,#0F4H
05A4         ?C0246:
05A4 6003              JZ      $ + 5H
05A6 020000      R     LJMP    ?C0179
                                           ; SOURCE LINE # 1063
05A9 900000      R     MOV     DPTR,#emg_counter_1
05AC F0                MOVX    @DPTR,A
05AD A3                INC     DPTR
05AE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1065
05AF 7F01              MOV     R7,#01H
05B1 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1066
05B4 E4                CLR     A
05B5 FF                MOV     R7,A
05B6 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1068
05B9 300005            JNB     interrupt_flag,?C0190
                                           ; SOURCE LINE # 1069
05BC C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1070
05BE 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1071
05C1         ?C0190:
                                           ; SOURCE LINE # 1073
05C1 750003      R     MOV     emg_1_status,#03H
                                           ; SOURCE LINE # 1074
                                           ; SOURCE LINE # 1075
05C4 020000      R     LJMP    ?C0179
                                           ; SOURCE LINE # 1077
05C7         ?C0191:
                                           ; SOURCE LINE # 1079
05C7 900000      R     MOV     DPTR,#emg_counter_1+01H
05CA E0                MOVX    A,@DPTR
05CB 04                INC     A
05CC F0                MOVX    @DPTR,A
05CD 7006              JNZ     ?C0247
05CF 900000      R     MOV     DPTR,#emg_counter_1
05D2 E0                MOVX    A,@DPTR
05D3 04                INC     A
05D4 F0                MOVX    @DPTR,A
05D5         ?C0247:
                                           ; SOURCE LINE # 1080
05D5 C3                CLR     C
05D6 900000      E     MOV     DPTR,#ADC_buf+04H
05D9 E0                MOVX    A,@DPTR
05DA 6480              XRL     A,#080H
05DC 9480              SUBB    A,#080H
05DE 5004              JNC     ?C0192
                                           ; SOURCE LINE # 1081
05E0 E4                CLR     A
05E1 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 98  

05E2 A3                INC     DPTR
05E3 F0                MOVX    @DPTR,A
05E4         ?C0192:
                                           ; SOURCE LINE # 1082
05E4 900000      E     MOV     DPTR,#g_mem+03CH
05E7 E0                MOVX    A,@DPTR
05E8 F8                MOV     R0,A
05E9 A3                INC     DPTR
05EA E0                MOVX    A,@DPTR
05EB F9                MOV     R1,A
05EC A3                INC     DPTR
05ED E0                MOVX    A,@DPTR
05EE FA                MOV     R2,A
05EF A3                INC     DPTR
05F0 E0                MOVX    A,@DPTR
05F1 FB                MOV     R3,A
05F2 C000              PUSH    AR0
05F4 C001              PUSH    AR1
05F6 C002              PUSH    AR2
05F8 C003              PUSH    AR3
05FA 900000      E     MOV     DPTR,#ADC_buf+04H
05FD E0                MOVX    A,@DPTR
05FE FE                MOV     R6,A
05FF A3                INC     DPTR
0600 E0                MOVX    A,@DPTR
0601 FF                MOV     R7,A
0602 EE                MOV     A,R6
0603 33                RLC     A
0604 95E0              SUBB    A,ACC
0606 FD                MOV     R5,A
0607 FC                MOV     R4,A
0608 120000      E     LCALL   _filter_ch1
060B D003              POP     AR3
060D D002              POP     AR2
060F D001              POP     AR1
0611 D000              POP     AR0
0613 EB                MOV     A,R3
0614 2F                ADD     A,R7
0615 FF                MOV     R7,A
0616 EA                MOV     A,R2
0617 3E                ADDC    A,R6
0618 FE                MOV     R6,A
0619 E9                MOV     A,R1
061A 3D                ADDC    A,R5
061B FD                MOV     R5,A
061C E8                MOV     A,R0
061D 3C                ADDC    A,R4
061E FC                MOV     R4,A
061F 900000      E     MOV     DPTR,#g_mem+03CH
0622 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1084
0625 300005            JNB     interrupt_flag,?C0193
                                           ; SOURCE LINE # 1085
0628 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1086
062A 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1087
062D         ?C0193:
                                           ; SOURCE LINE # 1089
062D 900000      R     MOV     DPTR,#emg_counter_1
0630 E0                MOVX    A,@DPTR
0631 6403              XRL     A,#03H
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 99  

0633 7004              JNZ     ?C0248
0635 A3                INC     DPTR
0636 E0                MOVX    A,@DPTR
0637 64E8              XRL     A,#0E8H
0639         ?C0248:
0639 7039              JNZ     ?C0179
                                           ; SOURCE LINE # 1090
063B 900000      E     MOV     DPTR,#g_mem+03CH
063E E0                MOVX    A,@DPTR
063F FC                MOV     R4,A
0640 A3                INC     DPTR
0641 E0                MOVX    A,@DPTR
0642 FD                MOV     R5,A
0643 A3                INC     DPTR
0644 E0                MOVX    A,@DPTR
0645 FE                MOV     R6,A
0646 A3                INC     DPTR
0647 E0                MOVX    A,@DPTR
0648 FF                MOV     R7,A
0649 E4                CLR     A
064A 7BE8              MOV     R3,#0E8H
064C 7A03              MOV     R2,#03H
064E F9                MOV     R1,A
064F F8                MOV     R0,A
0650 120000      E     LCALL   ?C?ULDIV
0653 900000      E     MOV     DPTR,#g_mem+03CH
0656 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1092
0659 300005            JNB     interrupt_flag,?C0195
                                           ; SOURCE LINE # 1093
065C C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1094
065E 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1095
0661         ?C0195:
                                           ; SOURCE LINE # 1097
0661 E4                CLR     A
0662 FF                MOV     R7,A
0663 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1098
0666 E4                CLR     A
0667 FF                MOV     R7,A
0668 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1100
066B E4                CLR     A
066C 900000      R     MOV     DPTR,#emg_counter_1
066F F0                MOVX    @DPTR,A
0670 A3                INC     DPTR
0671 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1102
0672 F500        R     MOV     emg_1_status,A
                                           ; SOURCE LINE # 1103
                                           ; SOURCE LINE # 1104
                                           ; SOURCE LINE # 1106
                                           ; SOURCE LINE # 1107
                                           ; SOURCE LINE # 1108
0674         ?C0179:
                                           ; SOURCE LINE # 1110
0674 300005            JNB     interrupt_flag,?C0197
                                           ; SOURCE LINE # 1111
0677 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1112
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 100 

0679 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1113
067C         ?C0197:
                                           ; SOURCE LINE # 1115
067C E500        R     MOV     A,emg_2_status
067E 14                DEC     A
067F 7003              JNZ     $ + 5H
0681 020000      R     LJMP    ?C0205
0684 14                DEC     A
0685 7003              JNZ     $ + 5H
0687 020000      R     LJMP    ?C0207
068A 14                DEC     A
068B 7003              JNZ     $ + 5H
068D 020000      R     LJMP    ?C0210
0690 14                DEC     A
0691 7003              JNZ     $ + 5H
0693 020000      R     LJMP    ?C0215
0696 14                DEC     A
0697 7003              JNZ     $ + 5H
0699 020000      R     LJMP    ?C0217
069C 2405              ADD     A,#05H
069E 6003              JZ      $ + 5H
06A0 020000      R     LJMP    ?C0198
                                           ; SOURCE LINE # 1116
06A3         ?C0199:
                                           ; SOURCE LINE # 1117
06A3 900000      E     MOV     DPTR,#ADC_buf+06H
06A6 E0                MOVX    A,@DPTR
06A7 FE                MOV     R6,A
06A8 A3                INC     DPTR
06A9 E0                MOVX    A,@DPTR
06AA FF                MOV     R7,A
06AB EE                MOV     A,R6
06AC 33                RLC     A
06AD 95E0              SUBB    A,ACC
06AF 8F00        R     MOV     i_aux+03H,R7
06B1 8E00        R     MOV     i_aux+02H,R6
06B3 F500        R     MOV     i_aux+01H,A
06B5 F500        R     MOV     i_aux,A
                                           ; SOURCE LINE # 1118
06B7 E4                CLR     A
06B8 FF                MOV     R7,A
06B9 FE                MOV     R6,A
06BA FD                MOV     R5,A
06BB FC                MOV     R4,A
06BC AB00        R     MOV     R3,i_aux+03H
06BE AA00        R     MOV     R2,i_aux+02H
06C0 A900        R     MOV     R1,i_aux+01H
06C2 A800        R     MOV     R0,i_aux
06C4 C3                CLR     C
06C5 120000      E     LCALL   ?C?SLCMP
06C8 5009              JNC     ?C0200
                                           ; SOURCE LINE # 1119
06CA E4                CLR     A
06CB F500        R     MOV     i_aux+03H,A
06CD F500        R     MOV     i_aux+02H,A
06CF F500        R     MOV     i_aux+01H,A
06D1 F500        R     MOV     i_aux,A
06D3         ?C0200:
                                           ; SOURCE LINE # 1120
06D3 AF00        R     MOV     R7,i_aux+03H
06D5 AE00        R     MOV     R6,i_aux+02H
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 101 

06D7 AD00        R     MOV     R5,i_aux+01H
06D9 AC00        R     MOV     R4,i_aux
06DB 120000      E     LCALL   _filter_ch2
06DE 8F00        R     MOV     i_aux+03H,R7
06E0 8E00        R     MOV     i_aux+02H,R6
06E2 8D00        R     MOV     i_aux+01H,R5
06E4 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 1121
06E6 780A              MOV     R0,#0AH
06E8 120000      E     LCALL   ?C?LSHL
06EB 900000      E     MOV     DPTR,#g_mem+040H
06EE E0                MOVX    A,@DPTR
06EF F8                MOV     R0,A
06F0 A3                INC     DPTR
06F1 E0                MOVX    A,@DPTR
06F2 F9                MOV     R1,A
06F3 A3                INC     DPTR
06F4 E0                MOVX    A,@DPTR
06F5 FA                MOV     R2,A
06F6 A3                INC     DPTR
06F7 E0                MOVX    A,@DPTR
06F8 FB                MOV     R3,A
06F9 120000      E     LCALL   ?C?ULDIV
06FC 8F00        R     MOV     i_aux+03H,R7
06FE 8E00        R     MOV     i_aux+02H,R6
0700 8D00        R     MOV     i_aux+01H,R5
0702 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 1123
0704 300005            JNB     interrupt_flag,?C0201
                                           ; SOURCE LINE # 1124
0707 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1125
0709 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1126
070C         ?C0201:
                                           ; SOURCE LINE # 1128
070C E4                CLR     A
070D FF                MOV     R7,A
070E FE                MOV     R6,A
070F FD                MOV     R5,A
0710 FC                MOV     R4,A
0711 AB00        R     MOV     R3,i_aux+03H
0713 AA00        R     MOV     R2,i_aux+02H
0715 A900        R     MOV     R1,i_aux+01H
0717 A800        R     MOV     R0,i_aux
0719 C3                CLR     C
071A 120000      E     LCALL   ?C?SLCMP
071D 500B              JNC     ?C0202
                                           ; SOURCE LINE # 1129
071F E4                CLR     A
0720 F500        R     MOV     i_aux+03H,A
0722 F500        R     MOV     i_aux+02H,A
0724 F500        R     MOV     i_aux+01H,A
0726 F500        R     MOV     i_aux,A
0728 801E              SJMP    ?C0203
072A         ?C0202:
                                           ; SOURCE LINE # 1131
072A E4                CLR     A
072B FF                MOV     R7,A
072C 7E04              MOV     R6,#04H
072E FD                MOV     R5,A
072F FC                MOV     R4,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 102 

0730 AB00        R     MOV     R3,i_aux+03H
0732 AA00        R     MOV     R2,i_aux+02H
0734 A900        R     MOV     R1,i_aux+01H
0736 A800        R     MOV     R0,i_aux
0738 D3                SETB    C
0739 120000      E     LCALL   ?C?SLCMP
073C 400A              JC      ?C0203
                                           ; SOURCE LINE # 1132
073E E4                CLR     A
073F F500        R     MOV     i_aux+03H,A
0741 750004      R     MOV     i_aux+02H,#04H
0744 F500        R     MOV     i_aux+01H,A
0746 F500        R     MOV     i_aux,A
0748         ?C0203:
                                           ; SOURCE LINE # 1134
0748 AF00        R     MOV     R7,i_aux+03H
074A AE00        R     MOV     R6,i_aux+02H
074C AD00        R     MOV     R5,i_aux+01H
074E AC00        R     MOV     R4,i_aux
0750 900000      E     MOV     DPTR,#g_meas+013H
0753 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1136
0756 020000      R     LJMP    ?C0198
                                           ; SOURCE LINE # 1138
0759         ?C0205:
                                           ; SOURCE LINE # 1139
0759 E4                CLR     A
075A 900000      R     MOV     DPTR,#emg_counter_2
075D F0                MOVX    @DPTR,A
075E A3                INC     DPTR
075F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1140
0760 FF                MOV     R7,A
0761 FE                MOV     R6,A
0762 FD                MOV     R5,A
0763 FC                MOV     R4,A
0764 900000      E     MOV     DPTR,#g_mem+040H
0767 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1142
076A 300005            JNB     interrupt_flag,?C0206
                                           ; SOURCE LINE # 1143
076D C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1144
076F 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1145
0772         ?C0206:
                                           ; SOURCE LINE # 1147
0772 750004      R     MOV     emg_2_status,#04H
                                           ; SOURCE LINE # 1148
0775 020000      R     LJMP    ?C0198
                                           ; SOURCE LINE # 1150
0778         ?C0207:
                                           ; SOURCE LINE # 1151
0778 900000      R     MOV     DPTR,#emg_counter_2+01H
077B E0                MOVX    A,@DPTR
077C 04                INC     A
077D F0                MOVX    @DPTR,A
077E 7006              JNZ     ?C0249
0780 900000      R     MOV     DPTR,#emg_counter_2
0783 E0                MOVX    A,@DPTR
0784 04                INC     A
0785 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 103 

0786         ?C0249:
                                           ; SOURCE LINE # 1152
0786 900000      R     MOV     DPTR,#emg_counter_2
0789 E0                MOVX    A,@DPTR
078A 6401              XRL     A,#01H
078C 7004              JNZ     ?C0250
078E A3                INC     DPTR
078F E0                MOVX    A,@DPTR
0790 64F4              XRL     A,#0F4H
0792         ?C0250:
0792 6003              JZ      $ + 5H
0794 020000      R     LJMP    ?C0198
                                           ; SOURCE LINE # 1153
0797 900000      R     MOV     DPTR,#emg_counter_2
079A F0                MOVX    @DPTR,A
079B A3                INC     DPTR
079C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1155
079D 7F01              MOV     R7,#01H
079F 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1156
07A2 E4                CLR     A
07A3 FF                MOV     R7,A
07A4 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1158
07A7 300005            JNB     interrupt_flag,?C0209
                                           ; SOURCE LINE # 1159
07AA C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1160
07AC 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1161
07AF         ?C0209:
                                           ; SOURCE LINE # 1163
07AF 750003      R     MOV     emg_2_status,#03H
                                           ; SOURCE LINE # 1164
                                           ; SOURCE LINE # 1165
07B2 020000      R     LJMP    ?C0198
                                           ; SOURCE LINE # 1167
07B5         ?C0210:
                                           ; SOURCE LINE # 1169
07B5 900000      R     MOV     DPTR,#emg_counter_2+01H
07B8 E0                MOVX    A,@DPTR
07B9 04                INC     A
07BA F0                MOVX    @DPTR,A
07BB 7006              JNZ     ?C0251
07BD 900000      R     MOV     DPTR,#emg_counter_2
07C0 E0                MOVX    A,@DPTR
07C1 04                INC     A
07C2 F0                MOVX    @DPTR,A
07C3         ?C0251:
                                           ; SOURCE LINE # 1170
07C3 C3                CLR     C
07C4 900000      E     MOV     DPTR,#ADC_buf+06H
07C7 E0                MOVX    A,@DPTR
07C8 6480              XRL     A,#080H
07CA 9480              SUBB    A,#080H
07CC 5004              JNC     ?C0211
                                           ; SOURCE LINE # 1171
07CE E4                CLR     A
07CF F0                MOVX    @DPTR,A
07D0 A3                INC     DPTR
07D1 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 104 

07D2         ?C0211:
                                           ; SOURCE LINE # 1172
07D2 900000      E     MOV     DPTR,#g_mem+040H
07D5 E0                MOVX    A,@DPTR
07D6 F8                MOV     R0,A
07D7 A3                INC     DPTR
07D8 E0                MOVX    A,@DPTR
07D9 F9                MOV     R1,A
07DA A3                INC     DPTR
07DB E0                MOVX    A,@DPTR
07DC FA                MOV     R2,A
07DD A3                INC     DPTR
07DE E0                MOVX    A,@DPTR
07DF FB                MOV     R3,A
07E0 C000              PUSH    AR0
07E2 C001              PUSH    AR1
07E4 C002              PUSH    AR2
07E6 C003              PUSH    AR3
07E8 900000      E     MOV     DPTR,#ADC_buf+06H
07EB E0                MOVX    A,@DPTR
07EC FE                MOV     R6,A
07ED A3                INC     DPTR
07EE E0                MOVX    A,@DPTR
07EF FF                MOV     R7,A
07F0 EE                MOV     A,R6
07F1 33                RLC     A
07F2 95E0              SUBB    A,ACC
07F4 FD                MOV     R5,A
07F5 FC                MOV     R4,A
07F6 120000      E     LCALL   _filter_ch2
07F9 D003              POP     AR3
07FB D002              POP     AR2
07FD D001              POP     AR1
07FF D000              POP     AR0
0801 EB                MOV     A,R3
0802 2F                ADD     A,R7
0803 FF                MOV     R7,A
0804 EA                MOV     A,R2
0805 3E                ADDC    A,R6
0806 FE                MOV     R6,A
0807 E9                MOV     A,R1
0808 3D                ADDC    A,R5
0809 FD                MOV     R5,A
080A E8                MOV     A,R0
080B 3C                ADDC    A,R4
080C FC                MOV     R4,A
080D 900000      E     MOV     DPTR,#g_mem+040H
0810 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1174
0813 300005            JNB     interrupt_flag,?C0212
                                           ; SOURCE LINE # 1175
0816 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1176
0818 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1177
081B         ?C0212:
                                           ; SOURCE LINE # 1179
081B 900000      R     MOV     DPTR,#emg_counter_2
081E E0                MOVX    A,@DPTR
081F 6403              XRL     A,#03H
0821 7004              JNZ     ?C0252
0823 A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 105 

0824 E0                MOVX    A,@DPTR
0825 64E8              XRL     A,#0E8H
0827         ?C0252:
0827 6003              JZ      $ + 5H
0829 020000      R     LJMP    ?C0198
                                           ; SOURCE LINE # 1180
082C 900000      E     MOV     DPTR,#g_mem+040H
082F E0                MOVX    A,@DPTR
0830 FC                MOV     R4,A
0831 A3                INC     DPTR
0832 E0                MOVX    A,@DPTR
0833 FD                MOV     R5,A
0834 A3                INC     DPTR
0835 E0                MOVX    A,@DPTR
0836 FE                MOV     R6,A
0837 A3                INC     DPTR
0838 E0                MOVX    A,@DPTR
0839 FF                MOV     R7,A
083A E4                CLR     A
083B 7BE8              MOV     R3,#0E8H
083D 7A03              MOV     R2,#03H
083F F9                MOV     R1,A
0840 F8                MOV     R0,A
0841 120000      E     LCALL   ?C?ULDIV
0844 900000      E     MOV     DPTR,#g_mem+040H
0847 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1182
084A E4                CLR     A
084B FF                MOV     R7,A
084C 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1183
084F E4                CLR     A
0850 FF                MOV     R7,A
0851 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1185
0854 E4                CLR     A
0855 900000      R     MOV     DPTR,#emg_counter_2
0858 F0                MOVX    @DPTR,A
0859 A3                INC     DPTR
085A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1187
085B 300005            JNB     interrupt_flag,?C0214
                                           ; SOURCE LINE # 1188
085E C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1189
0860 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1190
0863         ?C0214:
                                           ; SOURCE LINE # 1192
0863 750005      R     MOV     emg_2_status,#05H
                                           ; SOURCE LINE # 1193
                                           ; SOURCE LINE # 1194
0866 8075              SJMP    ?C0198
                                           ; SOURCE LINE # 1196
0868         ?C0215:
                                           ; SOURCE LINE # 1197
0868 E500        R     MOV     A,emg_1_status
086A 7071              JNZ     ?C0198
                                           ; SOURCE LINE # 1198
086C 750002      R     MOV     emg_2_status,#02H
                                           ; SOURCE LINE # 1199
086F 806C              SJMP    ?C0198
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 106 

                                           ; SOURCE LINE # 1201
0871         ?C0217:
                                           ; SOURCE LINE # 1202
0871 900000      R     MOV     DPTR,#emg_counter_2+01H
0874 E0                MOVX    A,@DPTR
0875 04                INC     A
0876 F0                MOVX    @DPTR,A
0877 7006              JNZ     ?C0253
0879 900000      R     MOV     DPTR,#emg_counter_2
087C E0                MOVX    A,@DPTR
087D 04                INC     A
087E F0                MOVX    @DPTR,A
087F         ?C0253:
                                           ; SOURCE LINE # 1203
087F 900000      R     MOV     DPTR,#emg_counter_2
0882 E0                MOVX    A,@DPTR
0883 6401              XRL     A,#01H
0885 7004              JNZ     ?C0254
0887 A3                INC     DPTR
0888 E0                MOVX    A,@DPTR
0889 64F4              XRL     A,#0F4H
088B         ?C0254:
088B 7050              JNZ     ?C0198
                                           ; SOURCE LINE # 1204
088D 900000      R     MOV     DPTR,#emg_counter_2
0890 F0                MOVX    @DPTR,A
0891 A3                INC     DPTR
0892 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1206
0893 300005            JNB     interrupt_flag,?C0219
                                           ; SOURCE LINE # 1207
0896 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1208
0898 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1209
089B         ?C0219:
                                           ; SOURCE LINE # 1212
089B 900000      E     MOV     DPTR,#c_mem+02H
089E E0                MOVX    A,@DPTR
089F FF                MOV     R7,A
08A0 6402              XRL     A,#02H
08A2 600E              JZ      ?C0221
08A4 EF                MOV     A,R7
08A5 6403              XRL     A,#03H
08A7 6009              JZ      ?C0221
08A9 EF                MOV     A,R7
08AA 6404              XRL     A,#04H
08AC 6004              JZ      ?C0221
08AE EF                MOV     A,R7
08AF B40528            CJNE    A,#05H,?C0220
08B2         ?C0221:
                                           ; SOURCE LINE # 1215
                                           ; SOURCE LINE # 1216
08B2 900000      E     MOV     DPTR,#g_meas
08B5 E0                MOVX    A,@DPTR
08B6 FC                MOV     R4,A
08B7 A3                INC     DPTR
08B8 E0                MOVX    A,@DPTR
08B9 FD                MOV     R5,A
08BA A3                INC     DPTR
08BB E0                MOVX    A,@DPTR
08BC FE                MOV     R6,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 107 

08BD A3                INC     DPTR
08BE E0                MOVX    A,@DPTR
08BF FF                MOV     R7,A
08C0 900000      E     MOV     DPTR,#g_ref
08C3 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1217
08C6 900000      E     MOV     DPTR,#g_meas+04H
08C9 E0                MOVX    A,@DPTR
08CA FC                MOV     R4,A
08CB A3                INC     DPTR
08CC E0                MOVX    A,@DPTR
08CD FD                MOV     R5,A
08CE A3                INC     DPTR
08CF E0                MOVX    A,@DPTR
08D0 FE                MOV     R6,A
08D1 A3                INC     DPTR
08D2 E0                MOVX    A,@DPTR
08D3 FF                MOV     R7,A
08D4 900000      E     MOV     DPTR,#g_ref+04H
08D7 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1218
08DA         ?C0220:
                                           ; SOURCE LINE # 1220
08DA E4                CLR     A
08DB F500        R     MOV     emg_2_status,A
                                           ; SOURCE LINE # 1221
                                           ; SOURCE LINE # 1222
                                           ; SOURCE LINE # 1224
                                           ; SOURCE LINE # 1225
                                           ; SOURCE LINE # 1226
08DD         ?C0198:
                                           ; SOURCE LINE # 1228
08DD 300048            JNB     interrupt_flag,?C0224
                                           ; SOURCE LINE # 1229
08E0 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1230
08E2 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1231
                                           ; SOURCE LINE # 1232
                                           ; SOURCE LINE # 1233
08E5 8041              SJMP    ?C0224
08E7         ?C0139:
                                           ; SOURCE LINE # 1234
                                           ; SOURCE LINE # 1236
08E7 750001      R     MOV     emg_1_status,#01H
                                           ; SOURCE LINE # 1237
08EA 750001      R     MOV     emg_2_status,#01H
                                           ; SOURCE LINE # 1239
08ED 750001      R     MOV     UD_status,#01H
                                           ; SOURCE LINE # 1240
08F0 750001      R     MOV     LR_status,#01H
                                           ; SOURCE LINE # 1242
08F3 C200        E     CLR     tension_valid
                                           ; SOURCE LINE # 1245
08F5 7F01              MOV     R7,#01H
08F7 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1247
08FA E4                CLR     A
08FB FF                MOV     R7,A
08FC 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1249
08FF 300005            JNB     interrupt_flag,?C0225
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 108 

                                           ; SOURCE LINE # 1250
0902 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1251
0904 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1252
0907         ?C0225:
                                           ; SOURCE LINE # 1254
                                           ; SOURCE LINE # 1255
                                           ; SOURCE LINE # 1258
                                           ; SOURCE LINE # 1259
                                           ; SOURCE LINE # 1260
0907         ?C0226:
                                           ; SOURCE LINE # 1263
0907 E4                CLR     A
0908 FF                MOV     R7,A
0909 FE                MOV     R6,A
090A FD                MOV     R5,A
090B FC                MOV     R4,A
090C 900000      E     MOV     DPTR,#g_meas+0FH
090F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1264
0912 E4                CLR     A
0913 FF                MOV     R7,A
0914 FE                MOV     R6,A
0915 FD                MOV     R5,A
0916 FC                MOV     R4,A
0917 900000      E     MOV     DPTR,#g_meas+013H
091A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1267
091D E4                CLR     A
091E 900000      E     MOV     DPTR,#g_meas+02FH
0921 F0                MOVX    @DPTR,A
0922 A3                INC     DPTR
0923 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1268
0924 A3                INC     DPTR
0925 F0                MOVX    @DPTR,A
0926 A3                INC     DPTR
0927 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1270
0928         ?C0224:
                                           ; SOURCE LINE # 1273
0928 900000      E     MOV     DPTR,#first_tension_valid
092B E0                MOVX    A,@DPTR
092C 6003              JZ      $ + 5H
092E 020000      R     LJMP    ?C0229
0931 200003      E     JB      tension_valid,$ + 6H
0934 020000      R     LJMP    ?C0229
0937 E500        R     MOV     A,emg_1_status
0939 6003              JZ      $ + 5H
093B 020000      R     LJMP    ?C0229
093E E500        R     MOV     A,emg_2_status
0940 6003              JZ      $ + 5H
0942 020000      R     LJMP    ?C0229
                                           ; SOURCE LINE # 1274
0945 900000      E     MOV     DPTR,#dev_tension
0948 E0                MOVX    A,@DPTR
0949 FC                MOV     R4,A
094A A3                INC     DPTR
094B E0                MOVX    A,@DPTR
094C FD                MOV     R5,A
094D A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 109 

094E E0                MOVX    A,@DPTR
094F FE                MOV     R6,A
0950 A3                INC     DPTR
0951 E0                MOVX    A,@DPTR
0952 FF                MOV     R7,A
0953 120000      E     LCALL   _filter_voltage
0956 900000      E     MOV     DPTR,#dev_tension_f
0959 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1275
095C 900000      E     MOV     DPTR,#pow_tension
095F E0                MOVX    A,@DPTR
0960 FC                MOV     R4,A
0961 A3                INC     DPTR
0962 E0                MOVX    A,@DPTR
0963 FD                MOV     R5,A
0964 A3                INC     DPTR
0965 E0                MOVX    A,@DPTR
0966 FE                MOV     R6,A
0967 A3                INC     DPTR
0968 E0                MOVX    A,@DPTR
0969 FF                MOV     R7,A
096A EC                MOV     A,R4
096B 120000      E     LCALL   ?C?FCASTL
096E 7B1F              MOV     R3,#01FH
0970 7A85              MOV     R2,#085H
0972 796B              MOV     R1,#06BH
0974 783F              MOV     R0,#03FH
0976 120000      E     LCALL   ?C?FPMUL
0979 C004              PUSH    AR4
097B C005              PUSH    AR5
097D C006              PUSH    AR6
097F C007              PUSH    AR7
0981 900000      E     MOV     DPTR,#dev_tension_f
0984 E0                MOVX    A,@DPTR
0985 FC                MOV     R4,A
0986 A3                INC     DPTR
0987 E0                MOVX    A,@DPTR
0988 FD                MOV     R5,A
0989 A3                INC     DPTR
098A E0                MOVX    A,@DPTR
098B FE                MOV     R6,A
098C A3                INC     DPTR
098D E0                MOVX    A,@DPTR
098E FF                MOV     R7,A
098F EC                MOV     A,R4
0990 120000      E     LCALL   ?C?FCASTL
0993 A804              MOV     R0,AR4
0995 A905              MOV     R1,AR5
0997 AA06              MOV     R2,AR6
0999 AB07              MOV     R3,AR7
099B D007              POP     AR7
099D D006              POP     AR6
099F D005              POP     AR5
09A1 D004              POP     AR4
09A3 120000      E     LCALL   ?C?FPCMP3
09A6 600E              JZ      ?C0230
09A8 400C              JC      ?C0230
                                           ; SOURCE LINE # 1277
09AA 7F01              MOV     R7,#01H
09AC 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1280
09AF E4                CLR     A
C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 110 

09B0 FF                MOV     R7,A
09B1 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1281
09B4 8020              SJMP    ?C0229
09B6         ?C0230:
                                           ; SOURCE LINE # 1282
                                           ; SOURCE LINE # 1284
09B6 E4                CLR     A
09B7 FF                MOV     R7,A
09B8 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1287
09BB 7F01              MOV     R7,#01H
09BD 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1290
09C0 900000      E     MOV     DPTR,#master_mode
09C3 E0                MOVX    A,@DPTR
09C4 6010              JZ      ?C0229
                                           ; SOURCE LINE # 1291
09C6 120000      E     LCALL   deactivate_slaves
                                           ; SOURCE LINE # 1294
09C9 300005            JNB     interrupt_flag,?C0233
                                           ; SOURCE LINE # 1295
09CC C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1296
09CE 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1297
09D1         ?C0233:
                                           ; SOURCE LINE # 1299
09D1 E4                CLR     A
09D2 900000      E     MOV     DPTR,#master_mode
09D5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1300
                                           ; SOURCE LINE # 1301
                                           ; SOURCE LINE # 1302
09D6         ?C0229:
                                           ; SOURCE LINE # 1304
09D6 300005            JNB     interrupt_flag,?C0235
                                           ; SOURCE LINE # 1305
09D9 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1306
09DB 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1307
                                           ; SOURCE LINE # 1308
09DE         ?C0235:
09DE 22                RET     
             ; FUNCTION analog_read_end (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   7238    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    227      20
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.51   INTERRUPTIONS                                                         06/22/2018 11:06:00 PAGE 111 


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
