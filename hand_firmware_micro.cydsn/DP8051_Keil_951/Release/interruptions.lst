C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE INTERRUPTIONS
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Release\interruptions.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -interruptions.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(NDEBUG) WL(2) PR(.\DP8051
                    -_Keil_951\Release/interruptions.lst) CD OT(8,SPEED) OJ(.\DP8051_Keil_951\Release\interruptions.obj)

line level    source

*** MESSAGE C286 IN LINE 0 OF (null): license limits optimization to level 5
   1          // ----------------------------------------------------------------------------
   2          // BSD 3-Clause License
   3          
   4          // Copyright (c) 2016, qbrobotics
   5          // Copyright (c) 2017, Centro "E.Piaggio"
   6          // All rights reserved.
   7          
   8          // Redistribution and use in source and binary forms, with or without
   9          // modification, are permitted provided that the following conditions are met:
  10          
  11          // * Redistributions of source code must retain the above copyright notice, this
  12          //   list of conditions and the following disclaimer.
  13          
  14          // * Redistributions in binary form must reproduce the above copyright notice,
  15          //   this list of conditions and the following disclaimer in the documentation
  16          //   and/or other materials provided with the distribution.
  17          
  18          // * Neither the name of the copyright holder nor the names of its
  19          //   contributors may be used to endorse or promote products derived from
  20          //   this software without specific prior written permission.
  21          
  22          // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23          // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24          // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25          // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26          // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27          // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28          // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29          // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30          // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31          // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32          // POSSIBILITY OF SUCH DAMAGE.
  33          // ----------------------------------------------------------------------------
  34          
  35          /**
  36          * \file         interruptions.c
  37          *
  38          * \brief        Interruption handling and firmware core functions
  39          * \date         October 01, 2017
  40          * \author       _Centro "E.Piaggio"_
  41          * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42          * \copyright    (C) 2017 Centro "E.Piaggio". All rights reserved.
  43          */
  44          
  45          
  46          //=================================================================     includes
  47          #include <interruptions.h>
  48          #include <command_processing.h>
  49          #include <globals.h>
  50          #include <utils.h>
  51          
  52          
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 2   

  53          //==============================================================================
  54          //                                                            RS485 RX INTERRUPT
  55          //==============================================================================
  56          // Processing RS-485 data frame:
  57          //
  58          // - 0:     Waits for beggining characters
  59          // - 1:     Waits for ID;
  60          // - 2:     Data length;
  61          // - 3:     Receive all bytes;
  62          // - 4:     Wait for another device end of transmission;
  63          //
  64          //==============================================================================
  65          
  66          // PWM values needed to obtain 11.5 V given a certain input tension
  67          // Numbers are sperimentally calculated //[index] (millivolts)
  68          static const uint8 pwm_preload_values[29] = {100,    //0 (11500)
  69                                                        83,
  70                                                        78,
  71                                                        76,
  72                                                        74,
  73                                                        72,    //5 (14000)
  74                                                        70,
  75                                                        68,
  76                                                        67,
  77                                                        65,
  78                                                        64,    //10 (16500)
  79                                                        63,
  80                                                        62,
  81                                                        61,
  82                                                        60,
  83                                                        59,    //15 (19000)
  84                                                        58,
  85                                                        57,
  86                                                        56,
  87                                                        56,
  88                                                        55,    //20 (21500)
  89                                                        54,
  90                                                        54,
  91                                                        53,
  92                                                        52,
  93                                                        52,    //25 (24000)
  94                                                        52,
  95                                                        51,
  96                                                        51};   //28 (25500)
  97          
  98          //==============================================================================
  99          //                                                            RS485 RX INTERRUPT
 100          //==============================================================================
 101          
 102          CY_ISR(ISR_RS485_RX_ExInterrupt) {
 103   1      
 104   1          // Set RS485 flag
 105   1          
 106   1          interrupt_flag = TRUE;
 107   1           
 108   1      }
 109          
 110          //==============================================================================
 111          //                                                             INTERRUPT MANAGER
 112          //==============================================================================
 113          // Manage interrupt from RS485 
 114          //==============================================================================
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 3   

 115          // Processing RS-485 data frame:
 116          //
 117          // - WAIT_START:    Waits for beginning characters;
 118          // - WAIT_ID:       Waits for ID;
 119          // - WAIT_LENGTH:   Data length;
 120          // - RECEIVE:       Receive all bytes;
 121          // - UNLOAD:        Wait for another device end of transmission;
 122          //
 123          //==============================================================================
 124          
 125          void interrupt_manager(){
 126   1      
 127   1          
 128   1          //===========================================     local variables definition
 129   1      
 130   1          static uint8 CYDATA state = WAIT_START;                      // state
 131   1          
 132   1          //------------------------------------------------- local data packet
 133   1          static uint8 CYDATA data_packet_index;
 134   1          static uint8 CYDATA data_packet_length;
 135   1          static uint8 data_packet_buffer[128];                     
 136   1          static uint8 CYDATA rx_queue[3];                    // last 2 bytes received
 137   1          //-------------------------------------------------
 138   1      
 139   1          uint8 CYDATA    rx_data;                            // RS485 UART rx data
 140   1          CYBIT           rx_data_type;                       // my id?
 141   1          uint8 CYDATA    package_count = 0;                     
 142   1      
 143   1          //======================================================     receive routine
 144   1          
 145   1          // Get data until buffer is not empty 
 146   1          
 147   1          while(UART_RS485_GetRxBufferSize() && (package_count < 6)){  
 148   2              // 6 - estimated maximum number of packets we can read without blocking firmware execution
 149   2              
 150   2              // Get next char
 151   2              rx_data = UART_RS485_GetChar();
 152   2              
 153   2              switch (state) {
 154   3                  //-----     wait for frame start     -------------------------------
 155   3                  case WAIT_START:
 156   3                  
 157   3                      rx_queue[0] = rx_queue[1];
 158   3                      rx_queue[1] = rx_queue[2];
 159   3                      rx_queue[2] = rx_data;
 160   3                      
 161   3                      // Check for header configuration package
 162   3                      if ((rx_queue[1] == 58) && (rx_queue[2] == 58)) {
 163   4                          rx_queue[0] = 0;
 164   4                          rx_queue[1] = 0;
 165   4                          rx_queue[2] = 0;
 166   4                          state       = WAIT_ID;                    
 167   4                      }else
 168   3                          if ((rx_queue[0] == 63) &&      //ASCII - ?
 169   3                              (rx_queue[1] == 13) &&      //ASCII - CR
 170   3                              (rx_queue[2] == 10))        //ASCII - LF)
 171   3                              infoGet(INFO_ALL);
 172   3                      break;
 173   3      
 174   3                  //-----     wait for id     ----------------------------------------
 175   3                  case  WAIT_ID:
 176   3      
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 4   

 177   3                      // packet is for my ID or is broadcast
 178   3                      if (rx_data == c_mem.id || rx_data == 0 || rx_data == c_mem.SH_ID)
 179   3                          rx_data_type = FALSE;
 180   3                      else                //packet is for others
 181   3                          rx_data_type = TRUE;
 182   3                      
 183   3                      data_packet_length = 0;
 184   3                      state = WAIT_LENGTH;
 185   3                      break;
 186   3      
 187   3                  //-----     wait for length     ------------------------------------
 188   3                  case  WAIT_LENGTH:
 189   3      
 190   3       
 191   3                      data_packet_length = rx_data;
 192   3                      // check validity of pack length
 193   3                      if (data_packet_length <= 1) {
 194   4                          data_packet_length = 0;
 195   4                          state = WAIT_START;
 196   4                      } else if (data_packet_length > 128) {
 197   4                          data_packet_length = 0;
 198   4                          state = WAIT_START;
 199   4                      } else {
 200   4                          data_packet_index = 0;
 201   4                          
 202   4                          if(rx_data_type == FALSE)
 203   4                              state = RECEIVE;          // packet for me or broadcast
 204   4                          else
 205   4                              state = UNLOAD;           // packet for others
 206   4                      }
 207   3                      break;
 208   3      
 209   3                  //-----     receiving     -------------------------------------------
 210   3                  case RECEIVE:
 211   3      
 212   3                      data_packet_buffer[data_packet_index] = rx_data;
 213   3                      data_packet_index++;
 214   3                      
 215   3                      // check end of transmission
 216   3                      if (data_packet_index >= data_packet_length) {
 217   4                          // verify if frame ID corresponded to the device ID
 218   4                          if (rx_data_type == FALSE) {
 219   5                              // copying data from buffer to global packet
 220   5                              memcpy(g_rx.buffer, data_packet_buffer, data_packet_length);
 221   5                              g_rx.length = data_packet_length;
 222   5                              g_rx.ready  = 1;
 223   5                      
 224   5                              commProcess();
 225   5                          }
 226   4                          
 227   4                          data_packet_index  = 0;
 228   4                          data_packet_length = 0;
 229   4                          state = WAIT_START;
 230   4                          package_count++;
 231   4                      
 232   4                      }
 233   3                      break;
 234   3      
 235   3                  //-----     other device is receving     ---------------------------
 236   3                  case UNLOAD:
 237   3                      if (!(--data_packet_length)) {
 238   4                          data_packet_index  = 0;
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 5   

 239   4                          data_packet_length = 0;
 240   4                          RS485_CTS_Write(1);
 241   4                          RS485_CTS_Write(0);
 242   4                          state              = WAIT_START;
 243   4                          package_count++;
 244   4                      }
 245   3                      break;
 246   3              }
 247   2          }
 248   1      }
 249          //==============================================================================
 250          //                                                            FUNCTION SCHEDULER
 251          //==============================================================================
 252          // Call all the function with the right frequency
 253          //==============================================================================
 254          // Base frequency 1000 Hz
 255          //==============================================================================
 256          
 257          void function_scheduler(void) {
 258   1       
 259   1          static uint16 counter_calibration = DIV_INIT_VALUE;
 260   1      
 261   1          timer_value0 = (uint32)MY_TIMER_ReadCounter();
 262   1      
 263   1          // Start ADC Conversion, SOC = 1
 264   1      
 265   1          ADC_SOC_Write(0x01); 
 266   1          
 267   1          // Check Interrupt 
 268   1      
 269   1          if (interrupt_flag){
 270   2              interrupt_flag = FALSE;
 271   2              interrupt_manager();
 272   2          }
 273   1        
 274   1          //---------------------------------- Get Encoders
 275   1      
 276   1          encoder_reading(0); 
 277   1          
 278   1          // Check Interrupt     
 279   1          
 280   1          if (interrupt_flag){
 281   2              interrupt_flag = FALSE;
 282   2              interrupt_manager();
 283   2          }   
 284   1          
 285   1          encoder_reading(1);
 286   1          
 287   1          // Check Interrupt 
 288   1          
 289   1          if (interrupt_flag){
 290   2              interrupt_flag = FALSE;
 291   2              interrupt_manager();
 292   2          }
 293   1          
 294   1          encoder_reading(2);
 295   1          
 296   1          // Check Interrupt 
 297   1          
 298   1          if (interrupt_flag){
 299   2              interrupt_flag = FALSE;
 300   2              interrupt_manager();
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 6   

 301   2          }
 302   1      
 303   1          //---------------------------------- Control Motor
 304   1         
 305   1          motor_control();
 306   1      
 307   1          // Check Interrupt 
 308   1      
 309   1          if (interrupt_flag){
 310   2              interrupt_flag = FALSE;
 311   2              interrupt_manager();
 312   2          }
 313   1      
 314   1          //---------------------------------- Read conversion buffer - LOCK function
 315   1      
 316   1          analog_read_end();
 317   1      
 318   1          if (interrupt_flag){
 319   2              interrupt_flag = FALSE;
 320   2              interrupt_manager();
 321   2          }
 322   1          
 323   1          //---------------------------------- Master Mode
 324   1            
 325   1          if(master_mode){
 326   2              
 327   2              if (c_mem.is_myo2_master){
 328   3                  
 329   3                  // Rest position check (only if Master mode is enabled)
 330   3                  if (c_mem.rest_position_flag == TRUE){
 331   4                      if (counter_calibration == CALIBRATION_DIV) {
 332   5                          
 333   5                              // Read Measure (valid since this routine is enabled only in Master mode)
 334   5                              if (c_mem.is_force_fb_present || c_mem.is_proprio_fb_present){
 335   6                                  curr_pos_res = SH_current_position;
 336   6                              } 
 337   5                              else {
 338   6                                  curr_pos_res = (int32)commReadMeasFromSH();
 339   6                              }
 340   5                                  
 341   5      
 342   5                              check_rest_position();
 343   5                              counter_calibration = 0;
 344   5                      }
 345   4                      counter_calibration++;
 346   4      
 347   4                      // Check Interrupt     
 348   4                      if (interrupt_flag){
 349   5                          interrupt_flag = FALSE;
 350   5                          interrupt_manager();
 351   5                      }
 352   4                  }
 353   3                  
 354   3                  drive_SH();  
 355   3                  
 356   3                  // Check Interrupt     
 357   3                  if (interrupt_flag){
 358   4                      interrupt_flag = FALSE;
 359   4                      interrupt_manager();
 360   4                  }
 361   3              }
 362   2                      
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 7   

 363   2              if (c_mem.is_force_fb_present){
 364   3                  
 365   3                  if (c_mem.is_proprio_fb_present && c_mem.ForceF_ID == c_mem.ProprioF_ID){
 366   4                      drive_force_proprio_fb();
 367   4                  }
 368   3                  else {
 369   4                      drive_force_fb(); 
 370   4                  }
 371   3                  
 372   3                  // Check Interrupt     
 373   3                  if (interrupt_flag){
 374   4                      interrupt_flag = FALSE;
 375   4                      interrupt_manager();
 376   4                  }
 377   3                  
 378   3              }
 379   2              
 380   2              if (c_mem.is_proprio_fb_present){
 381   3                  
 382   3                  if (!(c_mem.is_force_fb_present && c_mem.ForceF_ID == c_mem.ProprioF_ID)) {
 383   4                      drive_proprio_fb();
 384   4                  }
 385   3                  
 386   3                  // Check Interrupt     
 387   3                  if (interrupt_flag){
 388   4                      interrupt_flag = FALSE;
 389   4                      interrupt_manager();
 390   4                  }
 391   3              }
 392   2              
 393   2          }
 394   1                  
 395   1          // Check Interrupt 
 396   1          
 397   1          if (interrupt_flag){
 398   2              interrupt_flag = FALSE;
 399   2              interrupt_manager();
 400   2          }
 401   1      
 402   1          //---------------------------------- Calibration 
 403   1      
 404   1          // Divider 10, freq = 500 Hz
 405   1          if (calib.enabled == TRUE) {
 406   2              if (counter_calibration == CALIBRATION_DIV) {
 407   3                  calibration();
 408   3                  counter_calibration = 0;
 409   3              }
 410   2              counter_calibration++;
 411   2          }
 412   1      
 413   1          // Check Interrupt 
 414   1          
 415   1          if (interrupt_flag){
 416   2              interrupt_flag = FALSE;
 417   2              interrupt_manager();
 418   2          }
 419   1          
 420   1          
 421   1          //---------------------------------- Update States
 422   1          
 423   1          // Load k-1 state
 424   1          memcpy( &g_measOld, &g_meas, sizeof(g_meas) );
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 8   

 425   1          memcpy( &g_refOld, &g_ref, sizeof(g_ref) );
 426   1      
 427   1          // Load k+1 state
 428   1          memcpy( &g_ref, &g_refNew, sizeof(g_ref) );
 429   1      
 430   1          if (interrupt_flag){
 431   2              interrupt_flag = FALSE;
 432   2              interrupt_manager();
 433   2          }
 434   1      
 435   1          timer_value = (uint32)MY_TIMER_ReadCounter();
 436   1          MY_TIMER_WriteCounter(5000000);
 437   1      
 438   1      }
 439          
 440          //==============================================================================
 441          //                                                                MOTORS CONTROL
 442          //==============================================================================
 443          
 444          void motor_control() {
 445   1      
 446   1          int32 CYDATA pwm_input = 0;
 447   1      
 448   1          int32 CYDATA pos_error;         // position error
 449   1          int32 CYDATA handle_value;
 450   1      
 451   1          int32 CYDATA err_emg_1, err_emg_2;
 452   1          float CYDATA joy_perc;
 453   1              
 454   1          int32 CYDATA k_p = c_mem.k_p;  
 455   1          int32 CYDATA k_i = c_mem.k_i; 
 456   1          int32 CYDATA k_d = c_mem.k_d; 
 457   1      
 458   1          // Static Variables
 459   1      
 460   1          static int32 pos_error_sum;     // position error sum for integral
 461   1       
 462   1          static int32 prev_pos_err;      // previous position error for deriv. control
 463   1      
 464   1          static CYBIT motor_dir = FALSE;
 465   1      
 466   1          static uint8 current_emg = 0;   // 0 NONE
 467   1                                          // 1 EMG 1
 468   1                                          // 2 EMG 2
 469   1                                          // wait for both to get down
 470   1      
 471   1          err_emg_1 = g_meas.emg[0] - c_mem.emg_threshold[0];
 472   1          err_emg_2 = g_meas.emg[1] - c_mem.emg_threshold[1];
 473   1          
 474   1          // =========================== POSITION INPUT ==============================
 475   1          switch(c_mem.input_mode) {
 476   2      
 477   2              case INPUT_MODE_ENCODER3:
 478   2      
 479   2                  if (master_mode) {
 480   3                      // The only attached encoder is the handle lever
 481   3                      handle_value = g_meas.pos[0] * c_mem.motor_handle_ratio;
 482   3                  }
 483   2                  else {
 484   3                      // Like other firmwares working
 485   3                      // Calculate handle value based on position of handle in the
 486   3                      // sensor chain and multiplication factor between handle and motor position
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 9   

 487   3                      handle_value = 0;
 488   3                  }
 489   2      
 490   2                  // Read handle and use it as reference for the motor
 491   2                  if (((handle_value - g_ref.pos[0]) > c_mem.max_step_pos) && (c_mem.max_step_pos != 0))
 492   2                      g_ref.pos[0] += c_mem.max_step_pos;
 493   2                  else {
 494   3                      if (((handle_value - g_ref.pos[0]) < c_mem.max_step_neg) && (c_mem.max_step_neg != 0))
 495   3                          g_ref.pos[0] += c_mem.max_step_neg;
 496   3                      else
 497   3                          g_ref.pos[0] = handle_value;
 498   3                  }
 499   2                  break;
 500   2      
 501   2              case INPUT_MODE_EMG_PROPORTIONAL:
 502   2                  if (err_emg_1 > 0)
 503   2                      g_ref.pos[0] = (err_emg_1 * g_mem.pos_lim_sup[0]) / (1024 - c_mem.emg_threshold[0]);
 504   2                  else
 505   2                      g_ref.pos[0] = 0;
 506   2                  break;
 507   2      
 508   2              case INPUT_MODE_EMG_INTEGRAL:
 509   2                  g_ref.pos[0] = g_refOld.pos[0];
 510   2                  if (err_emg_1 > 0) {
 511   3                      g_ref.pos[0] = g_refOld.pos[0] + (err_emg_1 * (int)g_mem.emg_speed * 2) / (1024 - c_mem.em
             -g_threshold[0]);
 512   3                  }
 513   2                  if (err_emg_2 > 0) {
 514   3                      g_ref.pos[0] = g_refOld.pos[0] - (err_emg_2 * (int)g_mem.emg_speed * 2) / (1024 - c_mem.em
             -g_threshold[1]);
 515   3                  }
 516   2                  break;
 517   2      
 518   2              case INPUT_MODE_EMG_FCFS:
 519   2                  g_ref.pos[0] = g_refOld.pos[0];
 520   2                  switch (current_emg) {
 521   3                      case 0:
 522   3                          // Look for the first EMG passing the threshold
 523   3                          if (err_emg_1 > 0) {
 524   4                              current_emg = 1;
 525   4                              break;
 526   4                          }
 527   3                          if (err_emg_2 > 0) {
 528   4                              current_emg = 2;
 529   4                              break;
 530   4                          }
 531   3                          break;
 532   3      
 533   3                      case 1:
 534   3                          // EMG 1 is first
 535   3                          if (err_emg_1 < 0) {
 536   4                              current_emg = 0;
 537   4                              break;
 538   4                          }
 539   3                          g_ref.pos[0] = g_refOld.pos[0] + (err_emg_1 * g_mem.emg_speed * 2) / (1024 - c_mem.emg
             -_threshold[0]);
 540   3                          break;
 541   3      
 542   3                      case 2:
 543   3                          // EMG 2 is first
 544   3                          if (err_emg_2 < 0) {
 545   4                              current_emg = 0;
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 10  

 546   4                              break;
 547   4                          }
 548   3                          g_ref.pos[0] = g_refOld.pos[0] - (err_emg_2 * g_mem.emg_speed * 2) / (1024 - c_mem.emg
             -_threshold[1]);
 549   3                          break;
 550   3      
 551   3                      default:
 552   3                          break;
 553   3                  }
 554   2      
 555   2                  break;
 556   2      
 557   2              case INPUT_MODE_EMG_FCFS_ADV:
 558   2                  g_ref.pos[0] = g_refOld.pos[0];
 559   2                  switch (current_emg) {
 560   3                      // Look for the first EMG passing the threshold
 561   3                      case 0:
 562   3                          if (err_emg_1 > 0) {
 563   4                              current_emg = 1;
 564   4                              break;
 565   4                          }
 566   3                          if (err_emg_2 > 0) {
 567   4                              current_emg = 2;
 568   4                              break;
 569   4                          }
 570   3                          break;
 571   3      
 572   3                      // EMG 1 is first
 573   3                      case 1:
 574   3                          // If both signals are under threshold go back to status 0
 575   3                          if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 576   4                              current_emg = 0;
 577   4                              break;
 578   4                          }
 579   3                          // but if the current signal come back over threshold, continue using it
 580   3                          if (err_emg_1 > 0) 
 581   3                              g_ref.pos[0] = g_refOld.pos[0] + (err_emg_1 * g_mem.emg_speed << 2) / (1024 - c_me
             -m.emg_threshold[0]);
 582   3                          
 583   3                          break;
 584   3      
 585   3                      // EMG 2 is first
 586   3                      case 2:
 587   3                          // If both signals are under threshold go back to status 0
 588   3                          if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 589   4                              current_emg = 0;
 590   4                              break;
 591   4                          }
 592   3                          // but if the current signal come back over threshold, continue using it
 593   3                          if (err_emg_2 > 0) {
 594   4                              g_ref.pos[0] = g_refOld.pos[0] - (err_emg_2 * c_mem.emg_speed << 2) / (1024 - c_me
             -m.emg_threshold[1]);
 595   4                          }
 596   3                          break;
 597   3      
 598   3                      default:
 599   3                          break;
 600   3                  }
 601   2        
 602   2                  break;
 603   2                  
 604   2              case INPUT_MODE_JOYSTICK:
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 11  

 605   2                  
 606   2                  joy_perc = (float)(g_meas.joystick[0])/((float)c_mem.joystick_gain/2);            
 607   2                  g_ref.pos[0] = g_refOld.pos[0] + c_mem.joystick_closure_speed * joy_perc;         
 608   2              
 609   2                  break;
 610   2              default:
 611   2                  break;
 612   2          }
 613   1      
 614   1          // Position limit saturation
 615   1          if (c_mem.pos_lim_flag) {
 616   2              if (g_ref.pos[0] < c_mem.pos_lim_inf[0]) 
 617   2                  g_ref.pos[0] = c_mem.pos_lim_inf[0];
 618   2              if (g_ref.pos[0] > c_mem.pos_lim_sup[0]) 
 619   2                  g_ref.pos[0] = c_mem.pos_lim_sup[0];
 620   2          }
 621   1      
 622   1          if (c_mem.rest_position_flag == TRUE) {
 623   2              if (rest_enabled == 1){
 624   3                  // Change position reference to drive motor to rest position smoothly
 625   3                  g_ref.pos[0] = rest_pos_curr_ref;
 626   3              }
 627   2              
 628   2              if (forced_open == 1) {
 629   3                  // Open the SoftHand as EMG PROPORTIONAL input mode 
 630   3                  if (err_emg_2 > 0)
 631   3                      g_ref.pos[0] = g_mem.rest_pos - (err_emg_2 * g_mem.rest_pos) / (1024 - c_mem.emg_threshold
             -[1]);
 632   3                  else {
 633   4                      g_ref.pos[0] = g_mem.rest_pos;
 634   4                      forced_open = 0;
 635   4                  }
 636   3              }
 637   2          }
 638   1          
 639   1          // ============================== POSITION CONTROL =====================
 640   1          pos_error = g_ref.pos[0] - g_meas.pos[0];
 641   1      
 642   1          pos_error_sum += pos_error;
 643   1      
 644   1          // anti-windup (for integral control)
 645   1          if (pos_error_sum > ANTI_WINDUP) {
 646   2              pos_error_sum = ANTI_WINDUP;
 647   2          } else if (pos_error_sum < -ANTI_WINDUP) {
 648   2              pos_error_sum = -ANTI_WINDUP;
 649   2          }
 650   1      
 651   1          // Proportional
 652   1          if (k_p != 0) 
 653   1              pwm_input = (int32)(k_p * pos_error) >> 16;
 654   1          
 655   1      
 656   1          // Integral
 657   1          if (k_i != 0) 
 658   1              pwm_input += (int32)(k_i * pos_error_sum) >> 16;
 659   1          
 660   1      
 661   1          // Derivative
 662   1          if (k_d != 0) 
 663   1              pwm_input += (int32)(k_d * (pos_error - prev_pos_err)) >> 16;
 664   1          
 665   1      
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 12  

 666   1          // Update measure
 667   1          prev_pos_err = pos_error;
 668   1      
 669   1          if (pwm_input > 0)
 670   1              motor_dir = TRUE;
 671   1          else
 672   1              motor_dir = FALSE;
 673   1      
 674   1      
 675   1          ////////////////////////////////////////////////////////////////////////////
 676   1      
 677   1          if(pwm_input >  PWM_MAX_VALUE) 
 678   1              pwm_input =  PWM_MAX_VALUE;
 679   1          if(pwm_input < -PWM_MAX_VALUE) 
 680   1              pwm_input = -PWM_MAX_VALUE;
 681   1      
 682   1      
 683   1          pwm_input = (((pwm_input << 10) / PWM_MAX_VALUE) * dev_pwm_limit) >> 10;
 684   1          
 685   1      
 686   1          pwm_sign = SIGN(pwm_input);
 687   1      
 688   1          if (motor_dir)
 689   1              MOTOR_DIR_Write(0x01);
 690   1          else
 691   1              MOTOR_DIR_Write(0x00);
 692   1      
 693   1          PWM_MOTORS_WriteCompare1(abs(pwm_input));
 694   1      }
 695          
 696          //==============================================================================
 697          //                                                                   ENCODER READING
 698          //==============================================================================
 699          
 700          void encoder_reading(const uint8 idx) {
 701   1      
 702   1          uint8 CYDATA index = idx;
 703   1          
 704   1          uint8 jj;
 705   1          
 706   1          uint32 data_encoder;
 707   1          int32 value_encoder;
 708   1          int32 speed_encoder;
 709   1          int32 accel_encoder;
 710   1          int32 aux;
 711   1      
 712   1          static int32 last_value_encoder[NUM_OF_SENSORS];
 713   1      
 714   1          static uint8 error[NUM_OF_SENSORS];
 715   1          
 716   1          static CYBIT only_first_time = TRUE;
 717   1      
 718   1          static uint8 one_time_execute = 0;
 719   1          static CYBIT pos_reconstruct = FALSE;
 720   1      
 721   1          static int32 v_value[NUM_OF_SENSORS];   //last value for velocity
 722   1          static int32 vv_value[NUM_OF_SENSORS];  //last last value for velocity
 723   1          static int32 vvv_value[NUM_OF_SENSORS];  //last last last value for velocity
 724   1          
 725   1          static int32 a_value[NUM_OF_SENSORS];   //last value for acceleration
 726   1          static int32 aa_value[NUM_OF_SENSORS];  //last last value for acceleration
 727   1          static int32 aaa_value[NUM_OF_SENSORS];  //last last last value for acceleration
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 13  

 728   1      
 729   1          if (index >= NUM_OF_SENSORS)
 730   1              return;
 731   1          
 732   1          if (reset_last_value_flag) {
 733   2              for (jj = NUM_OF_SENSORS; jj--;) 
 734   2                  last_value_encoder[jj] = 0;
 735   2              
 736   2              reset_last_value_flag = 0;
 737   2          }
 738   1      
 739   1          //======================================================     reading sensors
 740   1              // Shift 1 right to erase Dummy bit of chain
 741   1          if (index == 0)
 742   1                  data_encoder = (SHIFTREG_ENC_1_ReadData() >> 1) & 0x3FFFF;  //0x0003FFFF reset first 14 bits
 743   1          else {
 744   2              if (index == 1)
 745   2                  data_encoder = (SHIFTREG_ENC_2_ReadData() >> 1) & 0x3FFFF;  //0x0003FFFF reset first 14 bits
 746   2              else // index == 2
 747   2                  data_encoder = (SHIFTREG_ENC_3_ReadData() >> 1) & 0x3FFFF;  //0x0003FFFF reset first 14 bits
 748   2          }
 749   1             
 750   1      
 751   1          if (check_enc_data(&data_encoder)) {
 752   2      
 753   2              value_encoder = (int16) (((data_encoder & 0x3FFC0) - 0x20000) >> 2 ) + g_mem.m_off[index];
 754   2                                                          // reset last 6 bit 
 755   2                                                          // -> |:|:|id|dim|CMD|CHK|(data---
 756   2                                                          // subtract half of max value
 757   2                                                          // and shift to have 16 bit val
 758   2      
 759   2              // Initialize last_value_encoder
 760   2              if (only_first_time) {
 761   3                  last_value_encoder[index] = value_encoder;
 762   3                  if (index == 2)
 763   3                      only_first_time = 0;
 764   3              }
 765   2      
 766   2              // Take care of rotations
 767   2              aux = value_encoder - last_value_encoder[index];
 768   2      
 769   2              // ====================== 1 TURN ======================
 770   2              // -32768                    0                    32767 -32768                   0                
             -     32767
 771   2              // |-------------------------|-------------------------|-------------------------|----------------
             ----------|
 772   2              //              |                         |      |           |      |                         |
 773   2              //           -16384                     16383    |           |   -16384                     16383
 774   2              //                                               |           |
 775   2              //                                           24575           -24576
 776   2              //                                               |___________|
 777   2              //                                                   49152
 778   2      
 779   2              // if we are in the right interval, take care of rotation
 780   2              // and update the variable only if the difference between
 781   2              // one measure and another is less than 1/4 of turn
 782   2      
 783   2              // Considering we are sampling at 1kHz, this means that our shaft needs
 784   2              // to go slower than 1/4 turn every ms -> 1 turn every 4ms
 785   2              // equal to 250 turn/s -> 15000 RPM
 786   2      
 787   2              if (aux > 49152)
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 14  

 788   2                  g_meas.rot[index]--;
 789   2              else{ 
 790   3                  if (aux < -49152)
 791   3                      g_meas.rot[index]++;
 792   3                  else{
 793   4                      if (abs(aux) > 16384) { // if two measure are too far
 794   5                          error[index]++;
 795   5                          if (error[index] < 10)
 796   5                              // Discard
 797   5                              return;
 798   5                      }
 799   4                  }
 800   3              }
 801   2      
 802   2              error[index] = 0;
 803   2      
 804   2              last_value_encoder[index] = value_encoder;
 805   2      
 806   2              value_encoder += (int32)g_meas.rot[index] << 16;
 807   2      
 808   2              if (c_mem.m_mult[index] != 1.0) {
 809   3                  value_encoder *= c_mem.m_mult[index];
 810   3              }
 811   2      
 812   2              g_meas.pos[index] = value_encoder;
 813   2          }
 814   1          
 815   1          switch(index) {
 816   2              case 0: {
 817   3                  speed_encoder = (int16)filter_vel_1((3*value_encoder + v_value[0] - vv_value[0] - 3*vvv_value[
             -0])*10);
 818   3                  break;
 819   3              }
 820   2              case 1: {
 821   3                  speed_encoder = (int16)filter_vel_2((3*value_encoder + v_value[1] - vv_value[1] - 3*vvv_value[
             -1])*10);
 822   3                  break;
 823   3              }
 824   2              case 2: {
 825   3                  speed_encoder = (int16)filter_vel_3((3*value_encoder + v_value[2] - vv_value[2] - 3*vvv_value[
             -2])*10);
 826   3                  break;
 827   3              }
 828   2          }
 829   1          //Update current speed
 830   1          g_meas.vel[index] = speed_encoder;
 831   1          
 832   1          //Encoder rotational acceleration calculation
 833   1          switch(index) {
 834   2              case 0:
 835   2                  accel_encoder = (int16)filter_acc_1((3*speed_encoder + a_value[0] - aa_value[0] - 3*aaa_value[
             -0])*10);
 836   2                  break;
 837   2              
 838   2              case 1:
 839   2                  accel_encoder = (int16)filter_acc_2((3*speed_encoder + a_value[1] - aa_value[1] - 3*aaa_value[
             -1])*10);
 840   2                  break;
 841   2              
 842   2              case 2:
 843   2                  accel_encoder = (int16)filter_acc_3((3*speed_encoder + a_value[2] - aa_value[2] - 3*aaa_value[
             -2])*10);
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 15  

 844   2                  break;
 845   2          }
 846   1          //Update current acceleration
 847   1          g_meas.acc[index] = accel_encoder;
 848   1      
 849   1          // update old velocity and acceleration values
 850   1          vvv_value[index] = vv_value[index];
 851   1          vv_value[index] = v_value[index];
 852   1          v_value[index] = value_encoder;
 853   1      
 854   1          aaa_value[index] = aa_value[index];
 855   1          aa_value[index] = a_value[index];
 856   1          a_value[index] = speed_encoder;
 857   1      
 858   1      
 859   1          // wait at least 3 * max_num_of_error (10) + 5 = 35 cycles to reconstruct the right turn
 860   1          if (pos_reconstruct == FALSE){
 861   2              if (one_time_execute < 34) 
 862   2                  one_time_execute++;
 863   2              else {
 864   3                  //Double encoder translation
 865   3                  g_meas.pos[0] += (int32) g_meas.rot[0] << 16;
 866   3      
 867   3                  // If necessary activate motors
 868   3                  g_refNew.pos[0] = g_meas.pos[0];
 869   3      
 870   3                  MOTOR_ON_OFF_Write(g_ref.onoff);
 871   3                  
 872   3                  pos_reconstruct = TRUE;
 873   3              }
 874   2          }
 875   1      }
 876          
 877          //==============================================================================
 878          //                                                           ANALOG MEASUREMENTS
 879          //==============================================================================
 880          
 881          void analog_read_end() {
 882   1      
 883   1          /* =========================================================================
 884   1          /   Ideal formulation to calculate tension and current
 885   1          /
 886   1          /   tension = ((read_value_mV - offset) * 101) / gain -> [mV]
 887   1          /   current = ((read_value_mV - offset) * 375) / (gain * resistor) -> [mA]
 888   1          /
 889   1          /   Definition:
 890   1          /   read_value_mV = counts_read / 0.819 -> conversion from counts to mV
 891   1          /   offset = 2000 -> hardware amplifier bias in mV
 892   1          /   gain = 8.086 -> amplifier gain
 893   1          /   resistor = 18 -> resistor of voltage divider in KOhm 
 894   1          /
 895   1          /   Real formulation: tradeoff in good performance and accurancy, ADC_buf[] 
 896   1          /   and offset unit of measurment is counts, instead dev_tension and
 897   1          /   g_meas.curr[] are converted in properly unit.
 898   1          /  =========================================================================
 899   1          */
 900   1      
 901   1          int32 CYDATA i_aux;
 902   1      
 903   1          static emg_status CYDATA emg_1_status = RESET; 
 904   1          static emg_status CYDATA emg_2_status = RESET;                                             
 905   1          
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 16  

 906   1          static joystick_status CYDATA UD_status = RESET;
 907   1          static joystick_status CYDATA LR_status = RESET;                                          
 908   1      
 909   1          static uint16 CYDATA UD_counter = 0;
 910   1          static uint16 CYDATA LR_counter = 0;
 911   1          
 912   1          static int32 CYDATA UD_mean_value;
 913   1          static int32 CYDATA LR_mean_value;
 914   1              
 915   1          static uint16 emg_counter_1 = 0;
 916   1          static uint16 emg_counter_2 = 0;
 917   1          static uint8 count = 0;
 918   1          static uint32 count2 = 0;
 919   1          
 920   1        //  static uint8 first_tension_valid = TRUE;
 921   1      
 922   1          // Wait for conversion end
 923   1          
 924   1          while(!ADC_STATUS_Read()){
 925   2              if (interrupt_flag){
 926   3                  interrupt_flag = FALSE;
 927   3                  interrupt_manager();
 928   3              }
 929   2          }
 930   1          
 931   1          // Convert tension read
 932   1          dev_tension = ((int32)(ADC_buf[0] - 1638) * 1952) >> 7;
 933   1          
 934   1          if (interrupt_flag){
 935   2              interrupt_flag = FALSE;
 936   2              interrupt_manager();
 937   2          }
 938   1              
 939   1          if (first_tension_valid && tension_valid) {
 940   2              count = count + 1;
 941   2              
 942   2              if (count == 1000){
 943   3                  if (dev_tension < 9000) {   // 8 V case
 944   4                      pow_tension = 8000;
 945   4                  }
 946   3                  else {      // 12 V - 24 V cases
 947   4                      if (dev_tension < 13000) {
 948   5                          pow_tension = 12000;
 949   5                      }
 950   4                      else
 951   4                          pow_tension = 24000;
 952   4                  }
 953   3      
 954   3                  first_tension_valid = FALSE;
 955   3              }
 956   2          }
 957   1      
 958   1          // Until there is no valid input tension repeat this measurement
 959   1          
 960   1          if (dev_tension > 7000) {       //at least > 7.36 V (92% of 8 V) that is minimum charge of smallest ba
             -ttery
 961   2              // Set tension valid bit to TRUE
 962   2      
 963   2              if (count2 == 1000){
 964   3                  tension_valid = TRUE;   
 965   3              }
 966   2              else {                      // wait for battery voltage stabilization
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 17  

 967   3                  count2 = count2 + 1;
 968   3                  dev_tension_f = filter_voltage(dev_tension);
 969   3              }
 970   2      
 971   2              if(g_mem.activate_pwm_rescaling)        //pwm rescaling is activated
 972   2                  pwm_limit_search();                 //only for 12V motors
 973   2      
 974   2              // Check Interrupt 
 975   2          
 976   2              if (interrupt_flag){
 977   3                  interrupt_flag = FALSE;
 978   3                  interrupt_manager();
 979   3              }
 980   2      
 981   2              // if calibration is not needed go to "normal execution"
 982   2              if (!g_mem.emg_calibration_flag){
 983   3                  emg_1_status = NORMAL; // normal execution
 984   3                  emg_2_status = NORMAL; // normal execution
 985   3              }
 986   2      
 987   2              // State machines for EMG or Joystick reading
 988   2              if (c_mem.input_mode == INPUT_MODE_JOYSTICK) {
 989   3                  // Read ADC_buf[2] and ADC_buf[3] as JOYSTICK analog inputs
 990   3                  
 991   3                  // Joystick UD    
 992   3                  switch (UD_status) {
 993   4                      case NORMAL:
 994   4                          i_aux = ADC_buf[2];
 995   4                          // Remap the analog reading from -1024 to 1024.  
 996   4                          i_aux = (int32) (((float) (i_aux - UD_mean_value) / UD_mean_value) * g_mem.joystick_ga
             -in); 
 997   4                          
 998   4                          if (interrupt_flag){
 999   5                              interrupt_flag = FALSE;
1000   5                              interrupt_manager();
1001   5                          }
1002   4      
1003   4                          //Saturation
1004   4                          if (i_aux < -1024) 
1005   4                              i_aux = -1024;
1006   4                          if (i_aux > 1024)
1007   4                              i_aux = 1024;
1008   4      
1009   4                          g_meas.joystick[1] = (int16) i_aux;
1010   4      
1011   4                          if (interrupt_flag){
1012   5                              interrupt_flag = FALSE;
1013   5                              interrupt_manager();
1014   5                          }
1015   4      
1016   4                      break;
1017   4      
1018   4                      case RESET: // reset variables
1019   4                          UD_counter = 0;
1020   4                          UD_mean_value = 0;
1021   4                          UD_status = WAIT; // go to waiting status
1022   4      
1023   4                      break;
1024   4      
1025   4                      case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
1026   4                          UD_counter++;
1027   4                          if (UD_counter == JOYSTICK_SAMPLE_TO_DISCARD) {
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 18  

1028   5                              UD_counter = 0;                     // reset counter
1029   5      
1030   5                              if (interrupt_flag){
1031   6                                  interrupt_flag = FALSE;
1032   6                                  interrupt_manager();
1033   6                              }
1034   5      
1035   5                              UD_status = SUM_AND_MEAN;           // sum and mean status
1036   5                          }
1037   4      
1038   4                      break;
1039   4      
1040   4                      case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1041   4                          // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
1042   4                          UD_counter++;
1043   4                          UD_mean_value += ADC_buf[2];
1044   4      
1045   4                          if (interrupt_flag){
1046   5                              interrupt_flag = FALSE;
1047   5                              interrupt_manager();
1048   5                          }
1049   4      
1050   4                          if (UD_counter == SAMPLES_FOR_JOYSTICK_MEAN) {
1051   5                              UD_mean_value = UD_mean_value / SAMPLES_FOR_JOYSTICK_MEAN; // calc mean
1052   5      
1053   5                              if (interrupt_flag){
1054   6                                  interrupt_flag = FALSE;
1055   6                                  interrupt_manager();
1056   6                              }
1057   5      
1058   5                              UD_counter = 0;          // reset counter
1059   5                              UD_status = NORMAL;           // goto normal execution
1060   5                          }
1061   4                      break;
1062   4      
1063   4                      case WAIT: // wait for both EMG calibrations to be done
1064   4                          if (emg_1_status == NORMAL && emg_2_status == NORMAL)
1065   4                              UD_status = DISCARD;           // goto discard sample
1066   4                      break;
1067   4                  }
1068   3                  
1069   3                  if (interrupt_flag){
1070   4                      interrupt_flag = FALSE;
1071   4                      interrupt_manager();
1072   4                  }
1073   3                  // Joystick LR
1074   3                  switch (LR_status) {
1075   4                      case NORMAL:
1076   4                          i_aux = ADC_buf[3];
1077   4      
1078   4                          i_aux = (int32) (((float) (i_aux - LR_mean_value) / LR_mean_value) * g_mem.joystick_ga
             -in); 
1079   4                          
1080   4                          if (interrupt_flag){
1081   5                              interrupt_flag = FALSE;
1082   5                              interrupt_manager();
1083   5                          }
1084   4      
1085   4                          //Saturation
1086   4                          if (i_aux < -1024)
1087   4                              i_aux = -1024;
1088   4                          if (i_aux > 1024)
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 19  

1089   4                              i_aux = 1024;
1090   4      
1091   4                          if (interrupt_flag){
1092   5                              interrupt_flag = FALSE;
1093   5                              interrupt_manager();
1094   5                          }
1095   4      
1096   4                          g_meas.joystick[0] = (int16) i_aux;
1097   4      
1098   4                      break;
1099   4      
1100   4                      case RESET: // reset variables
1101   4                          LR_counter = 0;
1102   4                          LR_mean_value = 0;
1103   4                          LR_status = WAIT; // goes waiting for all conversions to be done
1104   4                      break;
1105   4      
1106   4                      case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples8
1107   4                          LR_counter++;
1108   4                          if (LR_counter == JOYSTICK_SAMPLE_TO_DISCARD) {
1109   5                              LR_counter = 0;                     // reset counter
1110   5      
1111   5                              if (interrupt_flag){
1112   6                                  interrupt_flag = FALSE;
1113   6                                  interrupt_manager();
1114   6                              }
1115   5      
1116   5                              LR_status = SUM_AND_MEAN;           // sum and mean status
1117   5                          }
1118   4                      break;
1119   4      
1120   4                      case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1121   4                          // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
1122   4                          LR_counter++;
1123   4                          LR_mean_value += ADC_buf[3];
1124   4                          if (LR_counter == SAMPLES_FOR_JOYSTICK_MEAN) {
1125   5                              LR_mean_value = LR_mean_value / SAMPLES_FOR_JOYSTICK_MEAN; // calc mean
1126   5                              
1127   5                              if (interrupt_flag){
1128   6                                  interrupt_flag = FALSE;
1129   6                                  interrupt_manager();
1130   6                              }
1131   5      
1132   5                              LR_counter = 0;               // reset counter
1133   5                              LR_status = NORMAL;           // goto normal execution
1134   5                          }
1135   4                      break;
1136   4      
1137   4                      case WAIT:
1138   4                          if(emg_1_status == NORMAL && emg_2_status == NORMAL && UD_status == NORMAL)
1139   4                              LR_status = DISCARD;
1140   4                      break;
1141   4                  }
1142   3      
1143   3                  if (interrupt_flag){
1144   4                      interrupt_flag = FALSE;
1145   4                      interrupt_manager();
1146   4                  }
1147   3                  
1148   3              } 
1149   2              else {
1150   3                  // Read ADC_buf[2] and ADC_buf[3] as EMGs
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 20  

1151   3                  
1152   3                  // EMG 1 calibration state machine
1153   3              
1154   3                  // Calibration state machine
1155   3                  switch(emg_1_status) {
1156   4                      case NORMAL: // normal execution
1157   4                          i_aux = (int32)ADC_buf[2];
1158   4                          if (i_aux < 0) 
1159   4                              i_aux = 0;
1160   4                          i_aux = filter_ch1(i_aux);
1161   4                          i_aux = (i_aux << 10) / g_mem.emg_max_value[0];
1162   4              
1163   4                          if (interrupt_flag){
1164   5                              interrupt_flag = FALSE;
1165   5                              interrupt_manager();
1166   5                          }
1167   4                          //Saturation
1168   4                          if (i_aux < 0)
1169   4                              i_aux = 0;
1170   4                          else
1171   4                              if (i_aux > 1024) 
1172   4                                  i_aux = 1024;
1173   4                          
1174   4                          g_meas.emg[0] = i_aux;
1175   4              
1176   4                          if (interrupt_flag){
1177   5                              interrupt_flag = FALSE;
1178   5                              interrupt_manager();
1179   5                          }
1180   4                          
1181   4                          break;
1182   4      
1183   4                      case RESET: // reset variables
1184   4                          emg_counter_1 = 0;
1185   4                          g_mem.emg_max_value[0] = 0;
1186   4                          emg_1_status = DISCARD; // goto next status
1187   4                          
1188   4                          break;
1189   4      
1190   4                      case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
1191   4                          emg_counter_1++;
1192   4                          if (emg_counter_1 == EMG_SAMPLE_TO_DISCARD) {
1193   5                              emg_counter_1 = 0;          // reset counter
1194   5                              
1195   5                              LED_CTRL_Write(1);
1196   5                              LED_BLINK_EN_Write(0);
1197   5                                  
1198   5                              if (interrupt_flag){
1199   6                                  interrupt_flag = FALSE;
1200   6                                  interrupt_manager();
1201   6                              }
1202   5                              
1203   5                              emg_1_status = SUM_AND_MEAN;           // sum and mean status
1204   5                          }
1205   4                          break;
1206   4      
1207   4                      case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1208   4                          // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
1209   4                          emg_counter_1++;
1210   4                          if (ADC_buf[2] < 0) 
1211   4                              ADC_buf[2] = 0;
1212   4                          g_mem.emg_max_value[0] += filter_ch1((int32)ADC_buf[2]);
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 21  

1213   4                          
1214   4                          if (interrupt_flag){
1215   5                              interrupt_flag = FALSE;
1216   5                              interrupt_manager();
1217   5                          }
1218   4                          
1219   4                          if (emg_counter_1 == SAMPLES_FOR_EMG_MEAN) {
1220   5                              g_mem.emg_max_value[0] = g_mem.emg_max_value[0] / SAMPLES_FOR_EMG_MEAN; // calc me
             -an
1221   5              
1222   5                              if (interrupt_flag){
1223   6                                  interrupt_flag = FALSE;
1224   6                                  interrupt_manager();
1225   6                              }                    
1226   5                              
1227   5                              LED_CTRL_Write(0);
1228   5                              LED_BLINK_EN_Write(0);
1229   5                              
1230   5                              emg_counter_1 = 0;          // reset counter
1231   5      
1232   5                              emg_1_status = NORMAL;           // goto normal execution
1233   5                          }
1234   4                          break;
1235   4      
1236   4                      default:
1237   4                          break;
1238   4                  }
1239   3              
1240   3                  if (interrupt_flag){
1241   4                      interrupt_flag = FALSE;
1242   4                      interrupt_manager();
1243   4                  }
1244   3                  // EMG 2 calibration state machine
1245   3                  switch(emg_2_status) {
1246   4                      case NORMAL: // normal execution
1247   4                          i_aux = (int32)ADC_buf[3];
1248   4                          if (i_aux < 0)
1249   4                              i_aux = 0;
1250   4                          i_aux = filter_ch2(i_aux);
1251   4                          i_aux = (i_aux << 10) / g_mem.emg_max_value[1];
1252   4              
1253   4                          if (interrupt_flag){
1254   5                              interrupt_flag = FALSE;
1255   5                              interrupt_manager();
1256   5                          }
1257   4                          
1258   4                          if (i_aux < 0) 
1259   4                              i_aux = 0;
1260   4                          else
1261   4                              if (i_aux > 1024)
1262   4                                  i_aux = 1024;
1263   4                          
1264   4                          g_meas.emg[1] = i_aux;
1265   4      
1266   4                          break;
1267   4      
1268   4                      case RESET: // reset variables
1269   4                          emg_counter_2 = 0;
1270   4                          g_mem.emg_max_value[1] = 0;
1271   4              
1272   4                          if (interrupt_flag){
1273   5                              interrupt_flag = FALSE;
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 22  

1274   5                              interrupt_manager();
1275   5                          }
1276   4                          
1277   4                          emg_2_status = WAIT; // wait for EMG 1 calibration
1278   4                          break;
1279   4      
1280   4                      case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
1281   4                          emg_counter_2++;
1282   4                          if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
1283   5                              emg_counter_2 = 0;          // reset counter
1284   5                              
1285   5                              LED_CTRL_Write(1);
1286   5                              LED_BLINK_EN_Write(0);
1287   5              
1288   5                              if (interrupt_flag){
1289   6                                  interrupt_flag = FALSE;
1290   6                                  interrupt_manager();
1291   6                              }
1292   5                              
1293   5                              emg_2_status = SUM_AND_MEAN;           // sum and mean status
1294   5                          }
1295   4                          break;
1296   4      
1297   4                      case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1298   4                          // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
1299   4                          emg_counter_2++;
1300   4                          if (ADC_buf[3] < 0)
1301   4                              ADC_buf[3] = 0;
1302   4                          g_mem.emg_max_value[1] += filter_ch2((int32)ADC_buf[3]);
1303   4              
1304   4                          if (interrupt_flag){
1305   5                              interrupt_flag = FALSE;
1306   5                              interrupt_manager();
1307   5                          }
1308   4                          
1309   4                          if (emg_counter_2 == SAMPLES_FOR_EMG_MEAN) {
1310   5                              g_mem.emg_max_value[1] = g_mem.emg_max_value[1] / SAMPLES_FOR_EMG_MEAN; // calc me
             -an
1311   5                              
1312   5                              LED_CTRL_Write(0);
1313   5                              LED_BLINK_EN_Write(0);
1314   5                              
1315   5                              emg_counter_2 = 0;          // reset counter
1316   5                          
1317   5                              if (interrupt_flag){
1318   6                                  interrupt_flag = FALSE;
1319   6                                  interrupt_manager();
1320   6                              }
1321   5                              
1322   5                              emg_2_status = WAIT_EoC;           // goto end of calibration wait
1323   5                          }
1324   4                          break;
1325   4      
1326   4                      case WAIT: // wait for EMG calibration to be done
1327   4                          if (emg_1_status == NORMAL)
1328   4                              emg_2_status = DISCARD;           // goto discard sample
1329   4                          break;
1330   4      
1331   4                      case WAIT_EoC:  // wait for end of calibration procedure (only for LED visibility reasons)
1332   4                          emg_counter_2++;
1333   4                          if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
1334   5                              emg_counter_2 = 0;          // reset counter
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 23  

1335   5      
1336   5                              if (interrupt_flag){
1337   6                                  interrupt_flag = FALSE;
1338   6                                  interrupt_manager();
1339   6                              }
1340   5                              
1341   5                              // if EMG control mode active, activate motors accordingly with startup value
1342   5                              if ((c_mem.input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
1343   5                                  (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
1344   5                                  (c_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
1345   5                                  (c_mem.input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
1346   6                                  g_ref.pos[0] = g_meas.pos[0];
1347   6                                  g_ref.pos[1] = g_meas.pos[1];
1348   6                                  g_ref.onoff = c_mem.activ;
1349   6                                  MOTOR_ON_OFF_Write(g_ref.onoff);
1350   6                              }
1351   5                                  
1352   5                              emg_2_status = NORMAL;           // goto normal execution
1353   5                          }
1354   4                          break;
1355   4                          
1356   4                      default:
1357   4                          break;
1358   4                  }
1359   3                      
1360   3                  if (interrupt_flag){
1361   4                      interrupt_flag = FALSE;
1362   4                      interrupt_manager();
1363   4                  }
1364   3              }
1365   2          }
1366   1          else {
1367   2      
1368   2              emg_1_status = RESET; 
1369   2              emg_2_status = RESET;
1370   2      
1371   2              UD_status = RESET;
1372   2              LR_status = RESET;
1373   2                      
1374   2              tension_valid = FALSE;
1375   2              
1376   2              //fixed
1377   2              LED_CTRL_Write(1);
1378   2              //PWM Blink Enable
1379   2              LED_BLINK_EN_Write(0);
1380   2                  
1381   2              if (interrupt_flag){
1382   3                  interrupt_flag = FALSE;
1383   3                  interrupt_manager();
1384   3              }
1385   2              
1386   2              if (c_mem.emg_calibration_flag) {
1387   3                  if ((c_mem.input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
1388   3                      (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
1389   3                      (c_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
1390   3                      (c_mem.input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
1391   4                      g_ref.onoff = 0x00;
1392   4                      MOTOR_ON_OFF_Write(g_ref.onoff);
1393   4                  }
1394   3              }
1395   2      
1396   2              // Reset emg
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 24  

1397   2              g_meas.emg[0] = 0;
1398   2              g_meas.emg[1] = 0;
1399   2              
1400   2              // Reset Joystick
1401   2              g_meas.joystick[0] = 0;
1402   2              g_meas.joystick[1] = 0;
1403   2      
1404   2          }
1405   1          
1406   1          // The board LED blinks if attached battery is not fully charged
1407   1          if (!first_tension_valid && tension_valid == TRUE && emg_1_status == NORMAL && emg_2_status == NORMAL)
             -{
1408   2              dev_tension_f = filter_voltage(dev_tension);
1409   2              if (dev_tension_f > 0.92 * pow_tension){
1410   3                  //fixed
1411   3                  LED_CTRL_Write(1);
1412   3                  
1413   3                  //PWM Blink Enable
1414   3                  LED_BLINK_EN_Write(0);
1415   3              }
1416   2              else {
1417   3                  // blink
1418   3                  LED_CTRL_Write(0);
1419   3                  
1420   3                  //PWM Blink Enable
1421   3                  LED_BLINK_EN_Write(1);
1422   3                  
1423   3                  // Disable slave or motors because of not fully charged battery
1424   3                  if (master_mode) {
1425   4                      deactivate_slaves();
1426   4                      
1427   4                      // Check Interrupt 
1428   4                      if (interrupt_flag){
1429   5                          interrupt_flag = FALSE;
1430   5                          interrupt_manager();
1431   5                      }
1432   4                      
1433   4                      master_mode = 0;        // exit from master mode
1434   4                  }
1435   3                  else {
1436   4                      g_refNew.onoff = 0x00;
1437   4                      MOTOR_ON_OFF_Write(g_refNew.onoff); // Deactivate motors
1438   4                  }
1439   3              }
1440   2          }
1441   1              
1442   1          if (interrupt_flag){
1443   2              interrupt_flag = FALSE;
1444   2              interrupt_manager();
1445   2          }
1446   1      }
1447          
1448          //==============================================================================
1449          //                                                              PWM_LIMIT_SEARCH
1450          //==============================================================================
1451          
1452          void pwm_limit_search() {
1453   1      
1454   1          uint8 CYDATA index;
1455   1      
1456   1          if (dev_tension > 25500) {
1457   2              dev_pwm_limit = 0;
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 25  

1458   2          } else if (dev_tension < 11500) {
1459   2              dev_pwm_limit = 100;
1460   2          } else {
1461   2              index = (uint8)((dev_tension - 11500) >> 9);
1462   2              dev_pwm_limit = pwm_preload_values[index];
1463   2          }
1464   1      }
1465          
1466          /* [] END OF FILE */
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 26  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION ISR_RS485_RX_ExInterrupt (BEGIN)
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 106
0000 D200        E     SETB    interrupt_flag
                                           ; SOURCE LINE # 108
0002 32                RETI    
             ; FUNCTION ISR_RS485_RX_ExInterrupt (END)

             ; FUNCTION interrupt_manager (BEGIN)
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 141
0000 E4                CLR     A
0001 F500        R     MOV     package_count,A
0003         ?C0002:
                                           ; SOURCE LINE # 147
0003 120000      E     LCALL   UART_RS485_GetRxBufferSize
0006 EF                MOV     A,R7
0007 7003              JNZ     $ + 5H
0009 020000      R     LJMP    ?C0025
000C E500        R     MOV     A,package_count
000E C3                CLR     C
000F 9406              SUBB    A,#06H
0011 4003              JC      $ + 5H
0013 020000      R     LJMP    ?C0025
                                           ; SOURCE LINE # 151
0016 120000      E     LCALL   UART_RS485_GetChar
0019 8F00        R     MOV     rx_data,R7
                                           ; SOURCE LINE # 153
001B E500        R     MOV     A,state
001D 14                DEC     A
001E 6049              JZ      ?C0009
0020 14                DEC     A
0021 6068              JZ      ?C0013
0023 14                DEC     A
0024 7003              JNZ     $ + 5H
0026 020000      R     LJMP    ?C0020
0029 14                DEC     A
002A 7003              JNZ     $ + 5H
002C 020000      R     LJMP    ?C0023
002F 2404              ADD     A,#04H
0031 70D0              JNZ     ?C0002
                                           ; SOURCE LINE # 155
0033         ?C0005:
                                           ; SOURCE LINE # 157
0033 850000      R     MOV     rx_queue,rx_queue+01H
                                           ; SOURCE LINE # 158
0036 850000      R     MOV     rx_queue+01H,rx_queue+02H
                                           ; SOURCE LINE # 159
0039 850000      R     MOV     rx_queue+02H,rx_data
                                           ; SOURCE LINE # 162
003C E500        R     MOV     A,rx_queue+01H
003E B43A11            CJNE    A,#03AH,?C0006
0041 E500        R     MOV     A,rx_queue+02H
0043 B43A0C            CJNE    A,#03AH,?C0006
                                           ; SOURCE LINE # 163
0046 E4                CLR     A
0047 F500        R     MOV     rx_queue,A
                                           ; SOURCE LINE # 164
0049 F500        R     MOV     rx_queue+01H,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 27  

                                           ; SOURCE LINE # 165
004B F500        R     MOV     rx_queue+02H,A
                                           ; SOURCE LINE # 166
004D 750001      R     MOV     state,#01H
                                           ; SOURCE LINE # 167
0050 80B1              SJMP    ?C0002
0052         ?C0006:
                                           ; SOURCE LINE # 168
0052 E500        R     MOV     A,rx_queue
0054 B43FAC            CJNE    A,#03FH,?C0002
0057 E500        R     MOV     A,rx_queue+01H
0059 B40DA7            CJNE    A,#0DH,?C0002
005C E500        R     MOV     A,rx_queue+02H
005E 640A              XRL     A,#0AH
0060 70A1              JNZ     ?C0002
                                           ; SOURCE LINE # 171
0062 FF                MOV     R7,A
0063 FE                MOV     R6,A
0064 120000      E     LCALL   _infoGet
                                           ; SOURCE LINE # 172
0067 809A              SJMP    ?C0002
                                           ; SOURCE LINE # 175
0069         ?C0009:
                                           ; SOURCE LINE # 178
0069 900000      E     MOV     DPTR,#c_mem+01H
006C E0                MOVX    A,@DPTR
006D 6500        R     XRL     A,rx_data
006F 600B              JZ      ?C0011
0071 E500        R     MOV     A,rx_data
0073 6007              JZ      ?C0011
0075 900000      E     MOV     DPTR,#c_mem+076H
0078 E0                MOVX    A,@DPTR
0079 B50004            CJNE    A,rx_data,?C0010
007C         ?C0011:
                                           ; SOURCE LINE # 179
007C C200        R     CLR     rx_data_type
007E 8002              SJMP    ?C0012
0080         ?C0010:
                                           ; SOURCE LINE # 181
0080 D200        R     SETB    rx_data_type
0082         ?C0012:
                                           ; SOURCE LINE # 183
0082 E4                CLR     A
0083 F500        R     MOV     data_packet_length,A
                                           ; SOURCE LINE # 184
0085 750002      R     MOV     state,#02H
                                           ; SOURCE LINE # 185
0088 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 188
008B         ?C0013:
                                           ; SOURCE LINE # 191
008B 850000      R     MOV     data_packet_length,rx_data
                                           ; SOURCE LINE # 193
008E E500        R     MOV     A,data_packet_length
0090 D3                SETB    C
0091 9401              SUBB    A,#01H
0093 5008              JNC     ?C0014
                                           ; SOURCE LINE # 194
0095 E4                CLR     A
0096 F500        R     MOV     data_packet_length,A
                                           ; SOURCE LINE # 195
0098 F500        R     MOV     state,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 28  

                                           ; SOURCE LINE # 196
009A 020000      R     LJMP    ?C0002
009D         ?C0014:
009D E500        R     MOV     A,data_packet_length
009F D3                SETB    C
00A0 9480              SUBB    A,#080H
00A2 4008              JC      ?C0016
                                           ; SOURCE LINE # 197
00A4 E4                CLR     A
00A5 F500        R     MOV     data_packet_length,A
                                           ; SOURCE LINE # 198
00A7 F500        R     MOV     state,A
                                           ; SOURCE LINE # 199
00A9 020000      R     LJMP    ?C0002
00AC         ?C0016:
                                           ; SOURCE LINE # 200
00AC E4                CLR     A
00AD F500        R     MOV     data_packet_index,A
                                           ; SOURCE LINE # 202
00AF 200006            JB      rx_data_type,?C0018
                                           ; SOURCE LINE # 203
00B2 750003      R     MOV     state,#03H
00B5 020000      R     LJMP    ?C0002
00B8         ?C0018:
                                           ; SOURCE LINE # 205
00B8 750004      R     MOV     state,#04H
                                           ; SOURCE LINE # 206
                                           ; SOURCE LINE # 207
00BB 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 210
00BE         ?C0020:
                                           ; SOURCE LINE # 212
00BE 7400        R     MOV     A,#LOW data_packet_buffer
00C0 2500        R     ADD     A,data_packet_index
00C2 F582              MOV     DPL,A
00C4 E4                CLR     A
00C5 3400        R     ADDC    A,#HIGH data_packet_buffer
00C7 F583              MOV     DPH,A
00C9 E500        R     MOV     A,rx_data
00CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 213
00CC 0500        R     INC     data_packet_index
                                           ; SOURCE LINE # 216
00CE E500        R     MOV     A,data_packet_index
00D0 C3                CLR     C
00D1 9500        R     SUBB    A,data_packet_length
00D3 5003              JNC     $ + 5H
00D5 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 218
00D8 200025            JB      rx_data_type,?C0022
                                           ; SOURCE LINE # 220
00DB AF00        R     MOV     R7,data_packet_length
00DD 7E00              MOV     R6,#00H
00DF 7800        E     MOV     R0,#LOW g_rx
00E1 7C00        E     MOV     R4,#HIGH g_rx
00E3 7D01              MOV     R5,#01H
00E5 7B01              MOV     R3,#01H
00E7 7A00        R     MOV     R2,#HIGH data_packet_buffer
00E9 7900        R     MOV     R1,#LOW data_packet_buffer
00EB 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 221
00EE 900000      E     MOV     DPTR,#g_rx+080H
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 29  

00F1 E4                CLR     A
00F2 F0                MOVX    @DPTR,A
00F3 A3                INC     DPTR
00F4 E500        R     MOV     A,data_packet_length
00F6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 222
00F7 900000      E     MOV     DPTR,#g_rx+084H
00FA 7401              MOV     A,#01H
00FC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 224
00FD 120000      E     LCALL   commProcess
                                           ; SOURCE LINE # 225
0100         ?C0022:
                                           ; SOURCE LINE # 227
0100 E4                CLR     A
0101 F500        R     MOV     data_packet_index,A
                                           ; SOURCE LINE # 228
0103 F500        R     MOV     data_packet_length,A
                                           ; SOURCE LINE # 229
0105 F500        R     MOV     state,A
                                           ; SOURCE LINE # 230
0107 0500        R     INC     package_count
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 233
0109 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 236
010C         ?C0023:
                                           ; SOURCE LINE # 237
010C 1500        R     DEC     data_packet_length
010E E500        R     MOV     A,data_packet_length
0110 6003              JZ      $ + 5H
0112 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 238
0115 F500        R     MOV     data_packet_index,A
                                           ; SOURCE LINE # 239
0117 F500        R     MOV     data_packet_length,A
                                           ; SOURCE LINE # 240
0119 7F01              MOV     R7,#01H
011B 120000      E     LCALL   _RS485_CTS_Write
                                           ; SOURCE LINE # 241
011E E4                CLR     A
011F FF                MOV     R7,A
0120 120000      E     LCALL   _RS485_CTS_Write
                                           ; SOURCE LINE # 242
0123 E4                CLR     A
0124 F500        R     MOV     state,A
                                           ; SOURCE LINE # 243
0126 0500        R     INC     package_count
                                           ; SOURCE LINE # 244
                                           ; SOURCE LINE # 245
0128 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 246
                                           ; SOURCE LINE # 247
012B 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 248
012E         ?C0025:
012E 22                RET     
             ; FUNCTION interrupt_manager (END)

             ; FUNCTION function_scheduler (BEGIN)
                                           ; SOURCE LINE # 257
                                           ; SOURCE LINE # 261
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 30  

0000 120000      E     LCALL   MY_TIMER_ReadCounter
0003 900000      E     MOV     DPTR,#timer_value0
0006 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 265
0009 7F01              MOV     R7,#01H
000B 120000      E     LCALL   _ADC_SOC_Write
                                           ; SOURCE LINE # 269
000E 300005            JNB     interrupt_flag,?C0026
                                           ; SOURCE LINE # 270
0011 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 271
0013 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 272
0016         ?C0026:
                                           ; SOURCE LINE # 276
0016 E4                CLR     A
0017 FF                MOV     R7,A
0018 120000      R     LCALL   _encoder_reading
                                           ; SOURCE LINE # 280
001B 300005            JNB     interrupt_flag,?C0027
                                           ; SOURCE LINE # 281
001E C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 282
0020 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 283
0023         ?C0027:
                                           ; SOURCE LINE # 285
0023 7F01              MOV     R7,#01H
0025 120000      R     LCALL   _encoder_reading
                                           ; SOURCE LINE # 289
0028 300005            JNB     interrupt_flag,?C0028
                                           ; SOURCE LINE # 290
002B C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 291
002D 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 292
0030         ?C0028:
                                           ; SOURCE LINE # 294
0030 7F02              MOV     R7,#02H
0032 120000      R     LCALL   _encoder_reading
                                           ; SOURCE LINE # 298
0035 300005            JNB     interrupt_flag,?C0029
                                           ; SOURCE LINE # 299
0038 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 300
003A 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 301
003D         ?C0029:
                                           ; SOURCE LINE # 305
003D 120000      R     LCALL   motor_control
                                           ; SOURCE LINE # 309
0040 300005            JNB     interrupt_flag,?C0030
                                           ; SOURCE LINE # 310
0043 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 311
0045 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 312
0048         ?C0030:
                                           ; SOURCE LINE # 316
0048 120000      R     LCALL   analog_read_end
                                           ; SOURCE LINE # 318
004B 300005            JNB     interrupt_flag,?C0031
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 31  

                                           ; SOURCE LINE # 319
004E C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 320
0050 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 321
0053         ?C0031:
                                           ; SOURCE LINE # 325
0053 900000      E     MOV     DPTR,#master_mode
0056 E0                MOVX    A,@DPTR
0057 7003              JNZ     $ + 5H
0059 020000      R     LJMP    ?C0032
                                           ; SOURCE LINE # 327
005C 900000      E     MOV     DPTR,#c_mem+065H
005F E0                MOVX    A,@DPTR
0060 6068              JZ      ?C0033
                                           ; SOURCE LINE # 330
0062 900000      E     MOV     DPTR,#c_mem+056H
0065 E0                MOVX    A,@DPTR
0066 6401              XRL     A,#01H
0068 7055              JNZ     ?C0034
                                           ; SOURCE LINE # 331
006A 900000      R     MOV     DPTR,#counter_calibration
006D E0                MOVX    A,@DPTR
006E 7004              JNZ     ?C0260
0070 A3                INC     DPTR
0071 E0                MOVX    A,@DPTR
0072 640A              XRL     A,#0AH
0074         ?C0260:
0074 7033              JNZ     ?C0035
                                           ; SOURCE LINE # 334
0076 900000      E     MOV     DPTR,#c_mem+063H
0079 E0                MOVX    A,@DPTR
007A 7004              JNZ     ?C0037
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E 6016              JZ      ?C0036
0080         ?C0037:
                                           ; SOURCE LINE # 335
0080 900000      E     MOV     DPTR,#SH_current_position
0083 E0                MOVX    A,@DPTR
0084 FC                MOV     R4,A
0085 A3                INC     DPTR
0086 E0                MOVX    A,@DPTR
0087 FD                MOV     R5,A
0088 A3                INC     DPTR
0089 E0                MOVX    A,@DPTR
008A FE                MOV     R6,A
008B A3                INC     DPTR
008C E0                MOVX    A,@DPTR
008D FF                MOV     R7,A
008E 900000      E     MOV     DPTR,#curr_pos_res
0091 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 336
0094 8009              SJMP    ?C0038
0096         ?C0036:
                                           ; SOURCE LINE # 337
                                           ; SOURCE LINE # 338
0096 120000      E     LCALL   commReadMeasFromSH
0099 900000      E     MOV     DPTR,#curr_pos_res
009C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 339
009F         ?C0038:
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 32  

                                           ; SOURCE LINE # 342
009F 120000      E     LCALL   check_rest_position
                                           ; SOURCE LINE # 343
00A2 E4                CLR     A
00A3 900000      R     MOV     DPTR,#counter_calibration
00A6 F0                MOVX    @DPTR,A
00A7 A3                INC     DPTR
00A8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 344
00A9         ?C0035:
                                           ; SOURCE LINE # 345
00A9 900000      R     MOV     DPTR,#counter_calibration+01H
00AC E0                MOVX    A,@DPTR
00AD 04                INC     A
00AE F0                MOVX    @DPTR,A
00AF 7006              JNZ     ?C0261
00B1 900000      R     MOV     DPTR,#counter_calibration
00B4 E0                MOVX    A,@DPTR
00B5 04                INC     A
00B6 F0                MOVX    @DPTR,A
00B7         ?C0261:
                                           ; SOURCE LINE # 348
00B7 300005            JNB     interrupt_flag,?C0034
                                           ; SOURCE LINE # 349
00BA C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 350
00BC 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 351
                                           ; SOURCE LINE # 352
00BF         ?C0034:
                                           ; SOURCE LINE # 354
00BF 120000      E     LCALL   drive_SH
                                           ; SOURCE LINE # 357
00C2 300005            JNB     interrupt_flag,?C0033
                                           ; SOURCE LINE # 358
00C5 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 359
00C7 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 360
                                           ; SOURCE LINE # 361
00CA         ?C0033:
                                           ; SOURCE LINE # 363
00CA 900000      E     MOV     DPTR,#c_mem+063H
00CD E0                MOVX    A,@DPTR
00CE 6020              JZ      ?C0041
                                           ; SOURCE LINE # 365
00D0 A3                INC     DPTR
00D1 E0                MOVX    A,@DPTR
00D2 6011              JZ      ?C0042
00D4 900000      E     MOV     DPTR,#c_mem+078H
00D7 E0                MOVX    A,@DPTR
00D8 FF                MOV     R7,A
00D9 900000      E     MOV     DPTR,#c_mem+077H
00DC E0                MOVX    A,@DPTR
00DD B50705            CJNE    A,AR7,?C0042
                                           ; SOURCE LINE # 366
00E0 120000      E     LCALL   drive_force_proprio_fb
                                           ; SOURCE LINE # 367
00E3 8003              SJMP    ?C0043
00E5         ?C0042:
                                           ; SOURCE LINE # 368
                                           ; SOURCE LINE # 369
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 33  

00E5 120000      E     LCALL   drive_force_fb
                                           ; SOURCE LINE # 370
00E8         ?C0043:
                                           ; SOURCE LINE # 373
00E8 300005            JNB     interrupt_flag,?C0041
                                           ; SOURCE LINE # 374
00EB C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 375
00ED 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 376
                                           ; SOURCE LINE # 378
00F0         ?C0041:
                                           ; SOURCE LINE # 380
00F0 900000      E     MOV     DPTR,#c_mem+064H
00F3 E0                MOVX    A,@DPTR
00F4 601D              JZ      ?C0032
                                           ; SOURCE LINE # 382
00F6 900000      E     MOV     DPTR,#c_mem+063H
00F9 E0                MOVX    A,@DPTR
00FA 600C              JZ      ?C0047
00FC 900000      E     MOV     DPTR,#c_mem+078H
00FF E0                MOVX    A,@DPTR
0100 FF                MOV     R7,A
0101 900000      E     MOV     DPTR,#c_mem+077H
0104 E0                MOVX    A,@DPTR
0105 6F                XRL     A,R7
0106 6003              JZ      ?C0046
0108         ?C0047:
                                           ; SOURCE LINE # 383
0108 120000      E     LCALL   drive_proprio_fb
                                           ; SOURCE LINE # 384
010B         ?C0046:
                                           ; SOURCE LINE # 387
010B 300005            JNB     interrupt_flag,?C0032
                                           ; SOURCE LINE # 388
010E C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 389
0110 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 390
                                           ; SOURCE LINE # 391
                                           ; SOURCE LINE # 393
0113         ?C0032:
                                           ; SOURCE LINE # 397
0113 300005            JNB     interrupt_flag,?C0049
                                           ; SOURCE LINE # 398
0116 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 399
0118 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 400
011B         ?C0049:
                                           ; SOURCE LINE # 405
011B 900000      E     MOV     DPTR,#calib
011E E0                MOVX    A,@DPTR
011F B40124            CJNE    A,#01H,?C0050
                                           ; SOURCE LINE # 406
0122 900000      R     MOV     DPTR,#counter_calibration
0125 E0                MOVX    A,@DPTR
0126 7004              JNZ     ?C0262
0128 A3                INC     DPTR
0129 E0                MOVX    A,@DPTR
012A 640A              XRL     A,#0AH
012C         ?C0262:
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 34  

012C 700A              JNZ     ?C0051
                                           ; SOURCE LINE # 407
012E 120000      E     LCALL   calibration
                                           ; SOURCE LINE # 408
0131 E4                CLR     A
0132 900000      R     MOV     DPTR,#counter_calibration
0135 F0                MOVX    @DPTR,A
0136 A3                INC     DPTR
0137 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 409
0138         ?C0051:
                                           ; SOURCE LINE # 410
0138 900000      R     MOV     DPTR,#counter_calibration+01H
013B E0                MOVX    A,@DPTR
013C 04                INC     A
013D F0                MOVX    @DPTR,A
013E 7006              JNZ     ?C0263
0140 900000      R     MOV     DPTR,#counter_calibration
0143 E0                MOVX    A,@DPTR
0144 04                INC     A
0145 F0                MOVX    @DPTR,A
0146         ?C0263:
                                           ; SOURCE LINE # 411
0146         ?C0050:
                                           ; SOURCE LINE # 415
0146 300005            JNB     interrupt_flag,?C0052
                                           ; SOURCE LINE # 416
0149 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 417
014B 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 418
014E         ?C0052:
                                           ; SOURCE LINE # 424
014E 7800        E     MOV     R0,#LOW g_measOld
0150 7C00        E     MOV     R4,#HIGH g_measOld
0152 7D01              MOV     R5,#01H
0154 7B01              MOV     R3,#01H
0156 7A00        E     MOV     R2,#HIGH g_meas
0158 7900        E     MOV     R1,#LOW g_meas
015A 7E00              MOV     R6,#00H
015C 7F33              MOV     R7,#033H
015E 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 425
0161 7800        E     MOV     R0,#LOW g_refOld
0163 7C00        E     MOV     R4,#HIGH g_refOld
0165 7D01              MOV     R5,#01H
0167 7B01              MOV     R3,#01H
0169 7A00        E     MOV     R2,#HIGH g_ref
016B 7900        E     MOV     R1,#LOW g_ref
016D 7E00              MOV     R6,#00H
016F 7F19              MOV     R7,#019H
0171 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 428
0174 7800        E     MOV     R0,#LOW g_ref
0176 7C00        E     MOV     R4,#HIGH g_ref
0178 7D01              MOV     R5,#01H
017A 7B01              MOV     R3,#01H
017C 7A00        E     MOV     R2,#HIGH g_refNew
017E 7900        E     MOV     R1,#LOW g_refNew
0180 7E00              MOV     R6,#00H
0182 7F19              MOV     R7,#019H
0184 120000      E     LCALL   ?C?COPYAMD
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 35  

                                           ; SOURCE LINE # 430
0187 300005            JNB     interrupt_flag,?C0053
                                           ; SOURCE LINE # 431
018A C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 432
018C 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 433
018F         ?C0053:
                                           ; SOURCE LINE # 435
018F 120000      E     LCALL   MY_TIMER_ReadCounter
0192 900000      E     MOV     DPTR,#timer_value
0195 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 436
0198 7F40              MOV     R7,#040H
019A 7E4B              MOV     R6,#04BH
019C 7D4C              MOV     R5,#04CH
019E 7C00              MOV     R4,#00H
01A0 120000      E     LCALL   _MY_TIMER_WriteCounter
                                           ; SOURCE LINE # 438
01A3 22                RET     
             ; FUNCTION function_scheduler (END)

             ; FUNCTION motor_control (BEGIN)
                                           ; SOURCE LINE # 444
                                           ; SOURCE LINE # 446
0000 E4                CLR     A
0001 F500        R     MOV     pwm_input+03H,A
0003 F500        R     MOV     pwm_input+02H,A
0005 F500        R     MOV     pwm_input+01H,A
0007 F500        R     MOV     pwm_input,A
                                           ; SOURCE LINE # 454
0009 900000      E     MOV     DPTR,#c_mem+02H
000C E0                MOVX    A,@DPTR
000D FC                MOV     R4,A
000E A3                INC     DPTR
000F E0                MOVX    A,@DPTR
0010 FD                MOV     R5,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 FE                MOV     R6,A
0014 A3                INC     DPTR
0015 E0                MOVX    A,@DPTR
0016 F500        R     MOV     k_p+03H,A
0018 8E00        R     MOV     k_p+02H,R6
001A 8D00        R     MOV     k_p+01H,R5
001C 8C00        R     MOV     k_p,R4
                                           ; SOURCE LINE # 455
001E A3                INC     DPTR
001F E0                MOVX    A,@DPTR
0020 FC                MOV     R4,A
0021 A3                INC     DPTR
0022 E0                MOVX    A,@DPTR
0023 FD                MOV     R5,A
0024 A3                INC     DPTR
0025 E0                MOVX    A,@DPTR
0026 FE                MOV     R6,A
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 F500        R     MOV     k_i+03H,A
002B 8E00        R     MOV     k_i+02H,R6
002D 8D00        R     MOV     k_i+01H,R5
002F 8C00        R     MOV     k_i,R4
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 36  

                                           ; SOURCE LINE # 456
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 FC                MOV     R4,A
0034 A3                INC     DPTR
0035 E0                MOVX    A,@DPTR
0036 FD                MOV     R5,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FE                MOV     R6,A
003A A3                INC     DPTR
003B E0                MOVX    A,@DPTR
003C F500        R     MOV     k_d+03H,A
003E 8E00        R     MOV     k_d+02H,R6
0040 8D00        R     MOV     k_d+01H,R5
0042 8C00        R     MOV     k_d,R4
                                           ; SOURCE LINE # 471
0044 900000      E     MOV     DPTR,#c_mem+044H
0047 E0                MOVX    A,@DPTR
0048 FE                MOV     R6,A
0049 A3                INC     DPTR
004A E0                MOVX    A,@DPTR
004B FF                MOV     R7,A
004C FB                MOV     R3,A
004D AA06              MOV     R2,AR6
004F E4                CLR     A
0050 900000      E     MOV     DPTR,#g_meas+0FH
0053 E0                MOVX    A,@DPTR
0054 FC                MOV     R4,A
0055 A3                INC     DPTR
0056 E0                MOVX    A,@DPTR
0057 FD                MOV     R5,A
0058 A3                INC     DPTR
0059 E0                MOVX    A,@DPTR
005A FE                MOV     R6,A
005B A3                INC     DPTR
005C E0                MOVX    A,@DPTR
005D C3                CLR     C
005E 9B                SUBB    A,R3
005F F500        R     MOV     err_emg_1+03H,A
0061 EE                MOV     A,R6
0062 9A                SUBB    A,R2
0063 F500        R     MOV     err_emg_1+02H,A
0065 ED                MOV     A,R5
0066 9400              SUBB    A,#00H
0068 F500        R     MOV     err_emg_1+01H,A
006A EC                MOV     A,R4
006B 9400              SUBB    A,#00H
006D F500        R     MOV     err_emg_1,A
                                           ; SOURCE LINE # 472
006F 900000      E     MOV     DPTR,#c_mem+046H
0072 E0                MOVX    A,@DPTR
0073 FE                MOV     R6,A
0074 A3                INC     DPTR
0075 E0                MOVX    A,@DPTR
0076 FF                MOV     R7,A
0077 FB                MOV     R3,A
0078 AA06              MOV     R2,AR6
007A E4                CLR     A
007B 900000      E     MOV     DPTR,#g_meas+013H
007E E0                MOVX    A,@DPTR
007F FC                MOV     R4,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 37  

0080 A3                INC     DPTR
0081 E0                MOVX    A,@DPTR
0082 FD                MOV     R5,A
0083 A3                INC     DPTR
0084 E0                MOVX    A,@DPTR
0085 FE                MOV     R6,A
0086 A3                INC     DPTR
0087 E0                MOVX    A,@DPTR
0088 C3                CLR     C
0089 9B                SUBB    A,R3
008A F500        R     MOV     err_emg_2+03H,A
008C EE                MOV     A,R6
008D 9A                SUBB    A,R2
008E F500        R     MOV     err_emg_2+02H,A
0090 ED                MOV     A,R5
0091 9400              SUBB    A,#00H
0093 F500        R     MOV     err_emg_2+01H,A
0095 EC                MOV     A,R4
0096 9400              SUBB    A,#00H
0098 F500        R     MOV     err_emg_2,A
                                           ; SOURCE LINE # 475
009A 900000      E     MOV     DPTR,#c_mem+0FH
009D E0                MOVX    A,@DPTR
009E 24FE              ADD     A,#0FEH
00A0 7003              JNZ     $ + 5H
00A2 020000      R     LJMP    ?C0063
00A5 14                DEC     A
00A6 7003              JNZ     $ + 5H
00A8 020000      R     LJMP    ?C0066
00AB 14                DEC     A
00AC 7003              JNZ     $ + 5H
00AE 020000      R     LJMP    ?C0069
00B1 14                DEC     A
00B2 7003              JNZ     $ + 5H
00B4 020000      R     LJMP    ?C0079
00B7 14                DEC     A
00B8 7003              JNZ     $ + 5H
00BA 020000      R     LJMP    ?C0091
00BD 2405              ADD     A,#05H
00BF 6003              JZ      $ + 5H
00C1 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 477
00C4         ?C0056:
                                           ; SOURCE LINE # 479
00C4 900000      E     MOV     DPTR,#master_mode
00C7 E0                MOVX    A,@DPTR
00C8 6026              JZ      ?C0057
                                           ; SOURCE LINE # 481
00CA 900000      E     MOV     DPTR,#c_mem+052H
00CD E0                MOVX    A,@DPTR
00CE FF                MOV     R7,A
00CF 33                RLC     A
00D0 95E0              SUBB    A,ACC
00D2 FE                MOV     R6,A
00D3 FD                MOV     R5,A
00D4 FC                MOV     R4,A
00D5 900000      E     MOV     DPTR,#g_meas
00D8 E0                MOVX    A,@DPTR
00D9 F8                MOV     R0,A
00DA A3                INC     DPTR
00DB E0                MOVX    A,@DPTR
00DC F9                MOV     R1,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 38  

00DD A3                INC     DPTR
00DE E0                MOVX    A,@DPTR
00DF FA                MOV     R2,A
00E0 A3                INC     DPTR
00E1 E0                MOVX    A,@DPTR
00E2 FB                MOV     R3,A
00E3 120000      E     LCALL   ?C?LMUL
00E6 8F00        R     MOV     handle_value+03H,R7
00E8 8E00        R     MOV     handle_value+02H,R6
00EA 8D00        R     MOV     handle_value+01H,R5
00EC 8C00        R     MOV     handle_value,R4
                                           ; SOURCE LINE # 482
00EE 8009              SJMP    ?C0058
00F0         ?C0057:
                                           ; SOURCE LINE # 483
                                           ; SOURCE LINE # 487
00F0 E4                CLR     A
00F1 F500        R     MOV     handle_value+03H,A
00F3 F500        R     MOV     handle_value+02H,A
00F5 F500        R     MOV     handle_value+01H,A
00F7 F500        R     MOV     handle_value,A
                                           ; SOURCE LINE # 488
00F9         ?C0058:
                                           ; SOURCE LINE # 491
00F9 900000      E     MOV     DPTR,#g_ref
00FC E0                MOVX    A,@DPTR
00FD F8                MOV     R0,A
00FE A3                INC     DPTR
00FF E0                MOVX    A,@DPTR
0100 F9                MOV     R1,A
0101 A3                INC     DPTR
0102 E0                MOVX    A,@DPTR
0103 FA                MOV     R2,A
0104 A3                INC     DPTR
0105 E0                MOVX    A,@DPTR
0106 FB                MOV     R3,A
0107 C3                CLR     C
0108 E500        R     MOV     A,handle_value+03H
010A 9B                SUBB    A,R3
010B FF                MOV     R7,A
010C E500        R     MOV     A,handle_value+02H
010E 9A                SUBB    A,R2
010F FE                MOV     R6,A
0110 E500        R     MOV     A,handle_value+01H
0112 99                SUBB    A,R1
0113 FD                MOV     R5,A
0114 E500        R     MOV     A,handle_value
0116 98                SUBB    A,R0
0117 FC                MOV     R4,A
0118 900000      E     MOV     DPTR,#c_mem+03CH
011B E0                MOVX    A,@DPTR
011C F8                MOV     R0,A
011D A3                INC     DPTR
011E E0                MOVX    A,@DPTR
011F F9                MOV     R1,A
0120 A3                INC     DPTR
0121 E0                MOVX    A,@DPTR
0122 FA                MOV     R2,A
0123 A3                INC     DPTR
0124 E0                MOVX    A,@DPTR
0125 FB                MOV     R3,A
0126 C3                CLR     C
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 39  

0127 120000      E     LCALL   ?C?SLCMP
012A 5044              JNC     ?C0059
012C E4                CLR     A
012D FF                MOV     R7,A
012E FE                MOV     R6,A
012F FD                MOV     R5,A
0130 FC                MOV     R4,A
0131 900000      E     MOV     DPTR,#c_mem+03CH
0134 E0                MOVX    A,@DPTR
0135 F8                MOV     R0,A
0136 A3                INC     DPTR
0137 E0                MOVX    A,@DPTR
0138 A3                INC     DPTR
0139 E0                MOVX    A,@DPTR
013A A3                INC     DPTR
013B E0                MOVX    A,@DPTR
013C C3                CLR     C
013D 120000      E     LCALL   ?C?SLCMP
0140 602E              JZ      ?C0059
                                           ; SOURCE LINE # 492
0142 900000      E     MOV     DPTR,#g_ref
0145 E0                MOVX    A,@DPTR
0146 FC                MOV     R4,A
0147 A3                INC     DPTR
0148 E0                MOVX    A,@DPTR
0149 FD                MOV     R5,A
014A A3                INC     DPTR
014B E0                MOVX    A,@DPTR
014C FE                MOV     R6,A
014D A3                INC     DPTR
014E E0                MOVX    A,@DPTR
014F FF                MOV     R7,A
0150 900000      E     MOV     DPTR,#c_mem+03CH
0153 E0                MOVX    A,@DPTR
0154 F8                MOV     R0,A
0155 A3                INC     DPTR
0156 E0                MOVX    A,@DPTR
0157 A3                INC     DPTR
0158 E0                MOVX    A,@DPTR
0159 A3                INC     DPTR
015A E0                MOVX    A,@DPTR
015B EF                MOV     A,R7
015C 2B                ADD     A,R3
015D FF                MOV     R7,A
015E EE                MOV     A,R6
015F 3A                ADDC    A,R2
0160 FE                MOV     R6,A
0161 ED                MOV     A,R5
0162 39                ADDC    A,R1
0163 FD                MOV     R5,A
0164 EC                MOV     A,R4
0165 38                ADDC    A,R0
0166 FC                MOV     R4,A
0167 900000      E     MOV     DPTR,#g_ref
016A 120000      E     LCALL   ?C?LSTXDATA
016D 020000      R     LJMP    ?C0055
0170         ?C0059:
                                           ; SOURCE LINE # 493
                                           ; SOURCE LINE # 494
0170 900000      E     MOV     DPTR,#g_ref
0173 E0                MOVX    A,@DPTR
0174 F8                MOV     R0,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 40  

0175 A3                INC     DPTR
0176 E0                MOVX    A,@DPTR
0177 F9                MOV     R1,A
0178 A3                INC     DPTR
0179 E0                MOVX    A,@DPTR
017A FA                MOV     R2,A
017B A3                INC     DPTR
017C E0                MOVX    A,@DPTR
017D FB                MOV     R3,A
017E C3                CLR     C
017F E500        R     MOV     A,handle_value+03H
0181 9B                SUBB    A,R3
0182 FF                MOV     R7,A
0183 E500        R     MOV     A,handle_value+02H
0185 9A                SUBB    A,R2
0186 FE                MOV     R6,A
0187 E500        R     MOV     A,handle_value+01H
0189 99                SUBB    A,R1
018A FD                MOV     R5,A
018B E500        R     MOV     A,handle_value
018D 98                SUBB    A,R0
018E FC                MOV     R4,A
018F 900000      E     MOV     DPTR,#c_mem+040H
0192 E0                MOVX    A,@DPTR
0193 F8                MOV     R0,A
0194 A3                INC     DPTR
0195 E0                MOVX    A,@DPTR
0196 F9                MOV     R1,A
0197 A3                INC     DPTR
0198 E0                MOVX    A,@DPTR
0199 FA                MOV     R2,A
019A A3                INC     DPTR
019B E0                MOVX    A,@DPTR
019C FB                MOV     R3,A
019D D3                SETB    C
019E 120000      E     LCALL   ?C?SLCMP
01A1 4043              JC      ?C0061
01A3 E4                CLR     A
01A4 FF                MOV     R7,A
01A5 FE                MOV     R6,A
01A6 FD                MOV     R5,A
01A7 FC                MOV     R4,A
01A8 900000      E     MOV     DPTR,#c_mem+040H
01AB E0                MOVX    A,@DPTR
01AC F8                MOV     R0,A
01AD A3                INC     DPTR
01AE E0                MOVX    A,@DPTR
01AF A3                INC     DPTR
01B0 E0                MOVX    A,@DPTR
01B1 A3                INC     DPTR
01B2 E0                MOVX    A,@DPTR
01B3 120000      E     LCALL   ?C?SLCMP
01B6 602E              JZ      ?C0061
                                           ; SOURCE LINE # 495
01B8 900000      E     MOV     DPTR,#g_ref
01BB E0                MOVX    A,@DPTR
01BC FC                MOV     R4,A
01BD A3                INC     DPTR
01BE E0                MOVX    A,@DPTR
01BF FD                MOV     R5,A
01C0 A3                INC     DPTR
01C1 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 41  

01C2 FE                MOV     R6,A
01C3 A3                INC     DPTR
01C4 E0                MOVX    A,@DPTR
01C5 FF                MOV     R7,A
01C6 900000      E     MOV     DPTR,#c_mem+040H
01C9 E0                MOVX    A,@DPTR
01CA F8                MOV     R0,A
01CB A3                INC     DPTR
01CC E0                MOVX    A,@DPTR
01CD A3                INC     DPTR
01CE E0                MOVX    A,@DPTR
01CF A3                INC     DPTR
01D0 E0                MOVX    A,@DPTR
01D1 EF                MOV     A,R7
01D2 2B                ADD     A,R3
01D3 FF                MOV     R7,A
01D4 EE                MOV     A,R6
01D5 3A                ADDC    A,R2
01D6 FE                MOV     R6,A
01D7 ED                MOV     A,R5
01D8 39                ADDC    A,R1
01D9 FD                MOV     R5,A
01DA EC                MOV     A,R4
01DB 38                ADDC    A,R0
01DC FC                MOV     R4,A
01DD 900000      E     MOV     DPTR,#g_ref
01E0 120000      E     LCALL   ?C?LSTXDATA
01E3 020000      R     LJMP    ?C0055
01E6         ?C0061:
                                           ; SOURCE LINE # 497
01E6 AF00        R     MOV     R7,handle_value+03H
01E8 AE00        R     MOV     R6,handle_value+02H
01EA AD00        R     MOV     R5,handle_value+01H
01EC AC00        R     MOV     R4,handle_value
01EE 900000      E     MOV     DPTR,#g_ref
01F1 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 498
                                           ; SOURCE LINE # 499
01F4 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 501
01F7         ?C0063:
                                           ; SOURCE LINE # 502
01F7 E4                CLR     A
01F8 FF                MOV     R7,A
01F9 FE                MOV     R6,A
01FA FD                MOV     R5,A
01FB FC                MOV     R4,A
01FC AB00        R     MOV     R3,err_emg_1+03H
01FE AA00        R     MOV     R2,err_emg_1+02H
0200 A900        R     MOV     R1,err_emg_1+01H
0202 A800        R     MOV     R0,err_emg_1
0204 D3                SETB    C
0205 120000      E     LCALL   ?C?SLCMP
0208 403D              JC      ?C0064
                                           ; SOURCE LINE # 503
020A 900000      E     MOV     DPTR,#g_mem+034H
020D E0                MOVX    A,@DPTR
020E FC                MOV     R4,A
020F A3                INC     DPTR
0210 E0                MOVX    A,@DPTR
0211 FD                MOV     R5,A
0212 A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 42  

0213 E0                MOVX    A,@DPTR
0214 FE                MOV     R6,A
0215 A3                INC     DPTR
0216 E0                MOVX    A,@DPTR
0217 FF                MOV     R7,A
0218 A800        R     MOV     R0,err_emg_1
021A 120000      E     LCALL   ?C?LMUL
021D C006              PUSH    AR6
021F C007              PUSH    AR7
0221 900000      E     MOV     DPTR,#c_mem+044H
0224 E0                MOVX    A,@DPTR
0225 FE                MOV     R6,A
0226 A3                INC     DPTR
0227 E0                MOVX    A,@DPTR
0228 FF                MOV     R7,A
0229 C3                CLR     C
022A E4                CLR     A
022B 9F                SUBB    A,R7
022C FF                MOV     R7,A
022D 7404              MOV     A,#04H
022F 9E                SUBB    A,R6
0230 FE                MOV     R6,A
0231 AB07              MOV     R3,AR7
0233 FA                MOV     R2,A
0234 E4                CLR     A
0235 F9                MOV     R1,A
0236 F8                MOV     R0,A
0237 D007              POP     AR7
0239 D006              POP     AR6
023B 120000      E     LCALL   ?C?SLDIV
023E 900000      E     MOV     DPTR,#g_ref
0241 120000      E     LCALL   ?C?LSTXDATA
0244 020000      R     LJMP    ?C0055
0247         ?C0064:
                                           ; SOURCE LINE # 505
0247 E4                CLR     A
0248 FF                MOV     R7,A
0249 FE                MOV     R6,A
024A FD                MOV     R5,A
024B FC                MOV     R4,A
024C 900000      E     MOV     DPTR,#g_ref
024F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 506
0252 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 508
0255         ?C0066:
                                           ; SOURCE LINE # 509
0255 900000      E     MOV     DPTR,#g_refOld
0258 E0                MOVX    A,@DPTR
0259 FC                MOV     R4,A
025A A3                INC     DPTR
025B E0                MOVX    A,@DPTR
025C FD                MOV     R5,A
025D A3                INC     DPTR
025E E0                MOVX    A,@DPTR
025F FE                MOV     R6,A
0260 A3                INC     DPTR
0261 E0                MOVX    A,@DPTR
0262 FF                MOV     R7,A
0263 900000      E     MOV     DPTR,#g_ref
0266 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 510
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 43  

0269 E4                CLR     A
026A FF                MOV     R7,A
026B FE                MOV     R6,A
026C FD                MOV     R5,A
026D FC                MOV     R4,A
026E AB00        R     MOV     R3,err_emg_1+03H
0270 AA00        R     MOV     R2,err_emg_1+02H
0272 A900        R     MOV     R1,err_emg_1+01H
0274 A800        R     MOV     R0,err_emg_1
0276 D3                SETB    C
0277 120000      E     LCALL   ?C?SLCMP
027A 4056              JC      ?C0067
                                           ; SOURCE LINE # 511
027C 900000      E     MOV     DPTR,#g_mem+051H
027F E0                MOVX    A,@DPTR
0280 FF                MOV     R7,A
0281 E4                CLR     A
0282 FC                MOV     R4,A
0283 FD                MOV     R5,A
0284 FE                MOV     R6,A
0285 A800        R     MOV     R0,err_emg_1
0287 120000      E     LCALL   ?C?LMUL
028A E4                CLR     A
028B 7B02              MOV     R3,#02H
028D FA                MOV     R2,A
028E F9                MOV     R1,A
028F F8                MOV     R0,A
0290 120000      E     LCALL   ?C?LMUL
0293 C006              PUSH    AR6
0295 C007              PUSH    AR7
0297 900000      E     MOV     DPTR,#c_mem+044H
029A E0                MOVX    A,@DPTR
029B FE                MOV     R6,A
029C A3                INC     DPTR
029D E0                MOVX    A,@DPTR
029E FF                MOV     R7,A
029F C3                CLR     C
02A0 E4                CLR     A
02A1 9F                SUBB    A,R7
02A2 FF                MOV     R7,A
02A3 7404              MOV     A,#04H
02A5 9E                SUBB    A,R6
02A6 FE                MOV     R6,A
02A7 AB07              MOV     R3,AR7
02A9 FA                MOV     R2,A
02AA E4                CLR     A
02AB F9                MOV     R1,A
02AC F8                MOV     R0,A
02AD D007              POP     AR7
02AF D006              POP     AR6
02B1 120000      E     LCALL   ?C?SLDIV
02B4 900000      E     MOV     DPTR,#g_refOld
02B7 E0                MOVX    A,@DPTR
02B8 F8                MOV     R0,A
02B9 A3                INC     DPTR
02BA E0                MOVX    A,@DPTR
02BB F9                MOV     R1,A
02BC A3                INC     DPTR
02BD E0                MOVX    A,@DPTR
02BE FA                MOV     R2,A
02BF A3                INC     DPTR
02C0 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 44  

02C1 2F                ADD     A,R7
02C2 FF                MOV     R7,A
02C3 EA                MOV     A,R2
02C4 3E                ADDC    A,R6
02C5 FE                MOV     R6,A
02C6 E9                MOV     A,R1
02C7 3D                ADDC    A,R5
02C8 FD                MOV     R5,A
02C9 E8                MOV     A,R0
02CA 3C                ADDC    A,R4
02CB FC                MOV     R4,A
02CC 900000      E     MOV     DPTR,#g_ref
02CF 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 512
02D2         ?C0067:
                                           ; SOURCE LINE # 513
02D2 E4                CLR     A
02D3 FF                MOV     R7,A
02D4 FE                MOV     R6,A
02D5 FD                MOV     R5,A
02D6 FC                MOV     R4,A
02D7 AB00        R     MOV     R3,err_emg_2+03H
02D9 AA00        R     MOV     R2,err_emg_2+02H
02DB A900        R     MOV     R1,err_emg_2+01H
02DD A800        R     MOV     R0,err_emg_2
02DF D3                SETB    C
02E0 120000      E     LCALL   ?C?SLCMP
02E3 5003              JNC     $ + 5H
02E5 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 514
02E8 900000      E     MOV     DPTR,#g_mem+051H
02EB E0                MOVX    A,@DPTR
02EC FF                MOV     R7,A
02ED E4                CLR     A
02EE FC                MOV     R4,A
02EF FD                MOV     R5,A
02F0 FE                MOV     R6,A
02F1 A800        R     MOV     R0,err_emg_2
02F3 120000      E     LCALL   ?C?LMUL
02F6 E4                CLR     A
02F7 7B02              MOV     R3,#02H
02F9 FA                MOV     R2,A
02FA F9                MOV     R1,A
02FB F8                MOV     R0,A
02FC 120000      E     LCALL   ?C?LMUL
02FF C006              PUSH    AR6
0301 C007              PUSH    AR7
0303 900000      E     MOV     DPTR,#c_mem+046H
0306 E0                MOVX    A,@DPTR
0307 FE                MOV     R6,A
0308 A3                INC     DPTR
0309 E0                MOVX    A,@DPTR
030A FF                MOV     R7,A
030B C3                CLR     C
030C E4                CLR     A
030D 9F                SUBB    A,R7
030E FF                MOV     R7,A
030F 7404              MOV     A,#04H
0311 9E                SUBB    A,R6
0312 FE                MOV     R6,A
0313 AB07              MOV     R3,AR7
0315 FA                MOV     R2,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 45  

0316 E4                CLR     A
0317 F9                MOV     R1,A
0318 F8                MOV     R0,A
0319 D007              POP     AR7
031B D006              POP     AR6
031D 120000      E     LCALL   ?C?SLDIV
0320 A804              MOV     R0,AR4
0322 A905              MOV     R1,AR5
0324 AA06              MOV     R2,AR6
0326 AB07              MOV     R3,AR7
0328 900000      E     MOV     DPTR,#g_refOld
032B E0                MOVX    A,@DPTR
032C FC                MOV     R4,A
032D A3                INC     DPTR
032E E0                MOVX    A,@DPTR
032F FD                MOV     R5,A
0330 A3                INC     DPTR
0331 E0                MOVX    A,@DPTR
0332 FE                MOV     R6,A
0333 A3                INC     DPTR
0334 E0                MOVX    A,@DPTR
0335 C3                CLR     C
0336 9B                SUBB    A,R3
0337 FF                MOV     R7,A
0338 EE                MOV     A,R6
0339 9A                SUBB    A,R2
033A FE                MOV     R6,A
033B ED                MOV     A,R5
033C 99                SUBB    A,R1
033D FD                MOV     R5,A
033E EC                MOV     A,R4
033F 98                SUBB    A,R0
0340 FC                MOV     R4,A
0341 900000      E     MOV     DPTR,#g_ref
0344 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 515
                                           ; SOURCE LINE # 516
0347 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 518
034A         ?C0069:
                                           ; SOURCE LINE # 519
034A 900000      E     MOV     DPTR,#g_refOld
034D E0                MOVX    A,@DPTR
034E FC                MOV     R4,A
034F A3                INC     DPTR
0350 E0                MOVX    A,@DPTR
0351 FD                MOV     R5,A
0352 A3                INC     DPTR
0353 E0                MOVX    A,@DPTR
0354 FE                MOV     R6,A
0355 A3                INC     DPTR
0356 E0                MOVX    A,@DPTR
0357 FF                MOV     R7,A
0358 900000      E     MOV     DPTR,#g_ref
035B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 520
035E 900000      R     MOV     DPTR,#current_emg
0361 E0                MOVX    A,@DPTR
0362 14                DEC     A
0363 6048              JZ      ?C0074
0365 14                DEC     A
0366 7003              JNZ     $ + 5H
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 46  

0368 020000      R     LJMP    ?C0076
036B 2402              ADD     A,#02H
036D 6003              JZ      $ + 5H
036F 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 521
0372         ?C0071:
                                           ; SOURCE LINE # 523
0372 E4                CLR     A
0373 FF                MOV     R7,A
0374 FE                MOV     R6,A
0375 FD                MOV     R5,A
0376 FC                MOV     R4,A
0377 AB00        R     MOV     R3,err_emg_1+03H
0379 AA00        R     MOV     R2,err_emg_1+02H
037B A900        R     MOV     R1,err_emg_1+01H
037D A800        R     MOV     R0,err_emg_1
037F D3                SETB    C
0380 120000      E     LCALL   ?C?SLCMP
0383 4009              JC      ?C0072
                                           ; SOURCE LINE # 524
0385 900000      R     MOV     DPTR,#current_emg
0388 7401              MOV     A,#01H
038A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 525
038B 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 526
038E         ?C0072:
                                           ; SOURCE LINE # 527
038E E4                CLR     A
038F FF                MOV     R7,A
0390 FE                MOV     R6,A
0391 FD                MOV     R5,A
0392 FC                MOV     R4,A
0393 AB00        R     MOV     R3,err_emg_2+03H
0395 AA00        R     MOV     R2,err_emg_2+02H
0397 A900        R     MOV     R1,err_emg_2+01H
0399 A800        R     MOV     R0,err_emg_2
039B D3                SETB    C
039C 120000      E     LCALL   ?C?SLCMP
039F 5003              JNC     $ + 5H
03A1 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 528
03A4 900000      R     MOV     DPTR,#current_emg
03A7 7402              MOV     A,#02H
03A9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 529
03AA 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 530
                                           ; SOURCE LINE # 531
                                           ; SOURCE LINE # 533
03AD         ?C0074:
                                           ; SOURCE LINE # 535
03AD E4                CLR     A
03AE FF                MOV     R7,A
03AF FE                MOV     R6,A
03B0 FD                MOV     R5,A
03B1 FC                MOV     R4,A
03B2 AB00        R     MOV     R3,err_emg_1+03H
03B4 AA00        R     MOV     R2,err_emg_1+02H
03B6 A900        R     MOV     R1,err_emg_1+01H
03B8 A800        R     MOV     R0,err_emg_1
03BA C3                CLR     C
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 47  

03BB 120000      E     LCALL   ?C?SLCMP
03BE 5008              JNC     ?C0075
                                           ; SOURCE LINE # 536
03C0 E4                CLR     A
03C1 900000      R     MOV     DPTR,#current_emg
03C4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 537
03C5 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 538
03C8         ?C0075:
                                           ; SOURCE LINE # 539
03C8 900000      E     MOV     DPTR,#g_mem+051H
03CB E0                MOVX    A,@DPTR
03CC FF                MOV     R7,A
03CD E4                CLR     A
03CE FC                MOV     R4,A
03CF FD                MOV     R5,A
03D0 FE                MOV     R6,A
03D1 AB00        R     MOV     R3,err_emg_1+03H
03D3 AA00        R     MOV     R2,err_emg_1+02H
03D5 A900        R     MOV     R1,err_emg_1+01H
03D7 A800        R     MOV     R0,err_emg_1
03D9 120000      E     LCALL   ?C?LMUL
03DC E4                CLR     A
03DD 7B02              MOV     R3,#02H
03DF FA                MOV     R2,A
03E0 F9                MOV     R1,A
03E1 F8                MOV     R0,A
03E2 120000      E     LCALL   ?C?LMUL
03E5 C006              PUSH    AR6
03E7 C007              PUSH    AR7
03E9 900000      E     MOV     DPTR,#c_mem+044H
03EC E0                MOVX    A,@DPTR
03ED FE                MOV     R6,A
03EE A3                INC     DPTR
03EF E0                MOVX    A,@DPTR
03F0 FF                MOV     R7,A
03F1 C3                CLR     C
03F2 E4                CLR     A
03F3 9F                SUBB    A,R7
03F4 FF                MOV     R7,A
03F5 7404              MOV     A,#04H
03F7 9E                SUBB    A,R6
03F8 FE                MOV     R6,A
03F9 AB07              MOV     R3,AR7
03FB FA                MOV     R2,A
03FC E4                CLR     A
03FD F9                MOV     R1,A
03FE F8                MOV     R0,A
03FF D007              POP     AR7
0401 D006              POP     AR6
0403 120000      E     LCALL   ?C?SLDIV
0406 900000      E     MOV     DPTR,#g_refOld
0409 E0                MOVX    A,@DPTR
040A F8                MOV     R0,A
040B A3                INC     DPTR
040C E0                MOVX    A,@DPTR
040D F9                MOV     R1,A
040E A3                INC     DPTR
040F E0                MOVX    A,@DPTR
0410 FA                MOV     R2,A
0411 A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 48  

0412 E0                MOVX    A,@DPTR
0413 2F                ADD     A,R7
0414 FF                MOV     R7,A
0415 EA                MOV     A,R2
0416 3E                ADDC    A,R6
0417 FE                MOV     R6,A
0418 E9                MOV     A,R1
0419 3D                ADDC    A,R5
041A FD                MOV     R5,A
041B E8                MOV     A,R0
041C 3C                ADDC    A,R4
041D FC                MOV     R4,A
041E 900000      E     MOV     DPTR,#g_ref
0421 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 540
0424 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 542
0427         ?C0076:
                                           ; SOURCE LINE # 544
0427 E4                CLR     A
0428 FF                MOV     R7,A
0429 FE                MOV     R6,A
042A FD                MOV     R5,A
042B FC                MOV     R4,A
042C AB00        R     MOV     R3,err_emg_2+03H
042E AA00        R     MOV     R2,err_emg_2+02H
0430 A900        R     MOV     R1,err_emg_2+01H
0432 A800        R     MOV     R0,err_emg_2
0434 C3                CLR     C
0435 120000      E     LCALL   ?C?SLCMP
0438 5008              JNC     ?C0077
                                           ; SOURCE LINE # 545
043A E4                CLR     A
043B 900000      R     MOV     DPTR,#current_emg
043E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 546
043F 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 547
0442         ?C0077:
                                           ; SOURCE LINE # 548
0442 900000      E     MOV     DPTR,#g_mem+051H
0445 E0                MOVX    A,@DPTR
0446 FF                MOV     R7,A
0447 E4                CLR     A
0448 FC                MOV     R4,A
0449 FD                MOV     R5,A
044A FE                MOV     R6,A
044B AB00        R     MOV     R3,err_emg_2+03H
044D AA00        R     MOV     R2,err_emg_2+02H
044F A900        R     MOV     R1,err_emg_2+01H
0451 A800        R     MOV     R0,err_emg_2
0453 120000      E     LCALL   ?C?LMUL
0456 E4                CLR     A
0457 7B02              MOV     R3,#02H
0459 FA                MOV     R2,A
045A F9                MOV     R1,A
045B F8                MOV     R0,A
045C 120000      E     LCALL   ?C?LMUL
045F C006              PUSH    AR6
0461 C007              PUSH    AR7
0463 900000      E     MOV     DPTR,#c_mem+046H
0466 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 49  

0467 FE                MOV     R6,A
0468 A3                INC     DPTR
0469 E0                MOVX    A,@DPTR
046A FF                MOV     R7,A
046B C3                CLR     C
046C E4                CLR     A
046D 9F                SUBB    A,R7
046E FF                MOV     R7,A
046F 7404              MOV     A,#04H
0471 9E                SUBB    A,R6
0472 FE                MOV     R6,A
0473 AB07              MOV     R3,AR7
0475 FA                MOV     R2,A
0476 E4                CLR     A
0477 F9                MOV     R1,A
0478 F8                MOV     R0,A
0479 D007              POP     AR7
047B D006              POP     AR6
047D 120000      E     LCALL   ?C?SLDIV
0480 A804              MOV     R0,AR4
0482 A905              MOV     R1,AR5
0484 AA06              MOV     R2,AR6
0486 AB07              MOV     R3,AR7
0488 900000      E     MOV     DPTR,#g_refOld
048B E0                MOVX    A,@DPTR
048C FC                MOV     R4,A
048D A3                INC     DPTR
048E E0                MOVX    A,@DPTR
048F FD                MOV     R5,A
0490 A3                INC     DPTR
0491 E0                MOVX    A,@DPTR
0492 FE                MOV     R6,A
0493 A3                INC     DPTR
0494 E0                MOVX    A,@DPTR
0495 C3                CLR     C
0496 9B                SUBB    A,R3
0497 FF                MOV     R7,A
0498 EE                MOV     A,R6
0499 9A                SUBB    A,R2
049A FE                MOV     R6,A
049B ED                MOV     A,R5
049C 99                SUBB    A,R1
049D FD                MOV     R5,A
049E EC                MOV     A,R4
049F 98                SUBB    A,R0
04A0 FC                MOV     R4,A
04A1 900000      E     MOV     DPTR,#g_ref
04A4 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 549
04A7 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 551
                                           ; SOURCE LINE # 552
                                           ; SOURCE LINE # 553
                                           ; SOURCE LINE # 555
04AA 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 557
04AD         ?C0079:
                                           ; SOURCE LINE # 558
04AD 900000      E     MOV     DPTR,#g_refOld
04B0 E0                MOVX    A,@DPTR
04B1 FC                MOV     R4,A
04B2 A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 50  

04B3 E0                MOVX    A,@DPTR
04B4 FD                MOV     R5,A
04B5 A3                INC     DPTR
04B6 E0                MOVX    A,@DPTR
04B7 FE                MOV     R6,A
04B8 A3                INC     DPTR
04B9 E0                MOVX    A,@DPTR
04BA FF                MOV     R7,A
04BB 900000      E     MOV     DPTR,#g_ref
04BE 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 559
04C1 900000      R     MOV     DPTR,#current_emg
04C4 E0                MOVX    A,@DPTR
04C5 14                DEC     A
04C6 6048              JZ      ?C0084
04C8 14                DEC     A
04C9 7003              JNZ     $ + 5H
04CB 020000      R     LJMP    ?C0087
04CE 2402              ADD     A,#02H
04D0 6003              JZ      $ + 5H
04D2 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 561
04D5         ?C0081:
                                           ; SOURCE LINE # 562
04D5 E4                CLR     A
04D6 FF                MOV     R7,A
04D7 FE                MOV     R6,A
04D8 FD                MOV     R5,A
04D9 FC                MOV     R4,A
04DA AB00        R     MOV     R3,err_emg_1+03H
04DC AA00        R     MOV     R2,err_emg_1+02H
04DE A900        R     MOV     R1,err_emg_1+01H
04E0 A800        R     MOV     R0,err_emg_1
04E2 D3                SETB    C
04E3 120000      E     LCALL   ?C?SLCMP
04E6 4009              JC      ?C0082
                                           ; SOURCE LINE # 563
04E8 900000      R     MOV     DPTR,#current_emg
04EB 7401              MOV     A,#01H
04ED F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 564
04EE 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 565
04F1         ?C0082:
                                           ; SOURCE LINE # 566
04F1 E4                CLR     A
04F2 FF                MOV     R7,A
04F3 FE                MOV     R6,A
04F4 FD                MOV     R5,A
04F5 FC                MOV     R4,A
04F6 AB00        R     MOV     R3,err_emg_2+03H
04F8 AA00        R     MOV     R2,err_emg_2+02H
04FA A900        R     MOV     R1,err_emg_2+01H
04FC A800        R     MOV     R0,err_emg_2
04FE D3                SETB    C
04FF 120000      E     LCALL   ?C?SLCMP
0502 5003              JNC     $ + 5H
0504 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 567
0507 900000      R     MOV     DPTR,#current_emg
050A 7402              MOV     A,#02H
050C F0                MOVX    @DPTR,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 51  

                                           ; SOURCE LINE # 568
050D 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 569
                                           ; SOURCE LINE # 570
                                           ; SOURCE LINE # 573
0510         ?C0084:
                                           ; SOURCE LINE # 575
0510 E4                CLR     A
0511 FF                MOV     R7,A
0512 FE                MOV     R6,A
0513 FD                MOV     R5,A
0514 FC                MOV     R4,A
0515 AB00        R     MOV     R3,err_emg_1+03H
0517 AA00        R     MOV     R2,err_emg_1+02H
0519 A900        R     MOV     R1,err_emg_1+01H
051B A800        R     MOV     R0,err_emg_1
051D C3                CLR     C
051E 120000      E     LCALL   ?C?SLCMP
0521 501B              JNC     ?C0085
0523 E4                CLR     A
0524 FF                MOV     R7,A
0525 FE                MOV     R6,A
0526 FD                MOV     R5,A
0527 FC                MOV     R4,A
0528 AB00        R     MOV     R3,err_emg_2+03H
052A AA00        R     MOV     R2,err_emg_2+02H
052C A900        R     MOV     R1,err_emg_2+01H
052E A800        R     MOV     R0,err_emg_2
0530 C3                CLR     C
0531 120000      E     LCALL   ?C?SLCMP
0534 5008              JNC     ?C0085
                                           ; SOURCE LINE # 576
0536 E4                CLR     A
0537 900000      R     MOV     DPTR,#current_emg
053A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 577
053B 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 578
053E         ?C0085:
                                           ; SOURCE LINE # 580
053E E4                CLR     A
053F FF                MOV     R7,A
0540 FE                MOV     R6,A
0541 FD                MOV     R5,A
0542 FC                MOV     R4,A
0543 AB00        R     MOV     R3,err_emg_1+03H
0545 AA00        R     MOV     R2,err_emg_1+02H
0547 A900        R     MOV     R1,err_emg_1+01H
0549 A800        R     MOV     R0,err_emg_1
054B D3                SETB    C
054C 120000      E     LCALL   ?C?SLCMP
054F 5003              JNC     $ + 5H
0551 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 581
0554 900000      E     MOV     DPTR,#g_mem+051H
0557 E0                MOVX    A,@DPTR
0558 FF                MOV     R7,A
0559 E4                CLR     A
055A FC                MOV     R4,A
055B FD                MOV     R5,A
055C FE                MOV     R6,A
055D A800        R     MOV     R0,err_emg_1
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 52  

055F 120000      E     LCALL   ?C?LMUL
0562 7802              MOV     R0,#02H
0564 120000      E     LCALL   ?C?LSHL
0567 C006              PUSH    AR6
0569 C007              PUSH    AR7
056B 900000      E     MOV     DPTR,#c_mem+044H
056E E0                MOVX    A,@DPTR
056F FE                MOV     R6,A
0570 A3                INC     DPTR
0571 E0                MOVX    A,@DPTR
0572 FF                MOV     R7,A
0573 C3                CLR     C
0574 E4                CLR     A
0575 9F                SUBB    A,R7
0576 FF                MOV     R7,A
0577 7404              MOV     A,#04H
0579 9E                SUBB    A,R6
057A FE                MOV     R6,A
057B AB07              MOV     R3,AR7
057D FA                MOV     R2,A
057E E4                CLR     A
057F F9                MOV     R1,A
0580 F8                MOV     R0,A
0581 D007              POP     AR7
0583 D006              POP     AR6
0585 120000      E     LCALL   ?C?SLDIV
0588 900000      E     MOV     DPTR,#g_refOld
058B E0                MOVX    A,@DPTR
058C F8                MOV     R0,A
058D A3                INC     DPTR
058E E0                MOVX    A,@DPTR
058F F9                MOV     R1,A
0590 A3                INC     DPTR
0591 E0                MOVX    A,@DPTR
0592 FA                MOV     R2,A
0593 A3                INC     DPTR
0594 E0                MOVX    A,@DPTR
0595 2F                ADD     A,R7
0596 FF                MOV     R7,A
0597 EA                MOV     A,R2
0598 3E                ADDC    A,R6
0599 FE                MOV     R6,A
059A E9                MOV     A,R1
059B 3D                ADDC    A,R5
059C FD                MOV     R5,A
059D E8                MOV     A,R0
059E 3C                ADDC    A,R4
059F FC                MOV     R4,A
05A0 900000      E     MOV     DPTR,#g_ref
05A3 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 583
05A6 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 586
05A9         ?C0087:
                                           ; SOURCE LINE # 588
05A9 E4                CLR     A
05AA FF                MOV     R7,A
05AB FE                MOV     R6,A
05AC FD                MOV     R5,A
05AD FC                MOV     R4,A
05AE AB00        R     MOV     R3,err_emg_1+03H
05B0 AA00        R     MOV     R2,err_emg_1+02H
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 53  

05B2 A900        R     MOV     R1,err_emg_1+01H
05B4 A800        R     MOV     R0,err_emg_1
05B6 C3                CLR     C
05B7 120000      E     LCALL   ?C?SLCMP
05BA 501B              JNC     ?C0088
05BC E4                CLR     A
05BD FF                MOV     R7,A
05BE FE                MOV     R6,A
05BF FD                MOV     R5,A
05C0 FC                MOV     R4,A
05C1 AB00        R     MOV     R3,err_emg_2+03H
05C3 AA00        R     MOV     R2,err_emg_2+02H
05C5 A900        R     MOV     R1,err_emg_2+01H
05C7 A800        R     MOV     R0,err_emg_2
05C9 C3                CLR     C
05CA 120000      E     LCALL   ?C?SLCMP
05CD 5008              JNC     ?C0088
                                           ; SOURCE LINE # 589
05CF E4                CLR     A
05D0 900000      R     MOV     DPTR,#current_emg
05D3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 590
05D4 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 591
05D7         ?C0088:
                                           ; SOURCE LINE # 593
05D7 E4                CLR     A
05D8 FF                MOV     R7,A
05D9 FE                MOV     R6,A
05DA FD                MOV     R5,A
05DB FC                MOV     R4,A
05DC AB00        R     MOV     R3,err_emg_2+03H
05DE AA00        R     MOV     R2,err_emg_2+02H
05E0 A900        R     MOV     R1,err_emg_2+01H
05E2 A800        R     MOV     R0,err_emg_2
05E4 D3                SETB    C
05E5 120000      E     LCALL   ?C?SLCMP
05E8 5003              JNC     $ + 5H
05EA 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 594
05ED 900000      E     MOV     DPTR,#c_mem+051H
05F0 E0                MOVX    A,@DPTR
05F1 FF                MOV     R7,A
05F2 E4                CLR     A
05F3 FC                MOV     R4,A
05F4 FD                MOV     R5,A
05F5 FE                MOV     R6,A
05F6 A800        R     MOV     R0,err_emg_2
05F8 120000      E     LCALL   ?C?LMUL
05FB 7802              MOV     R0,#02H
05FD 120000      E     LCALL   ?C?LSHL
0600 C006              PUSH    AR6
0602 C007              PUSH    AR7
0604 900000      E     MOV     DPTR,#c_mem+046H
0607 E0                MOVX    A,@DPTR
0608 FE                MOV     R6,A
0609 A3                INC     DPTR
060A E0                MOVX    A,@DPTR
060B FF                MOV     R7,A
060C C3                CLR     C
060D E4                CLR     A
060E 9F                SUBB    A,R7
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 54  

060F FF                MOV     R7,A
0610 7404              MOV     A,#04H
0612 9E                SUBB    A,R6
0613 FE                MOV     R6,A
0614 AB07              MOV     R3,AR7
0616 FA                MOV     R2,A
0617 E4                CLR     A
0618 F9                MOV     R1,A
0619 F8                MOV     R0,A
061A D007              POP     AR7
061C D006              POP     AR6
061E 120000      E     LCALL   ?C?SLDIV
0621 A804              MOV     R0,AR4
0623 A905              MOV     R1,AR5
0625 AA06              MOV     R2,AR6
0627 AB07              MOV     R3,AR7
0629 900000      E     MOV     DPTR,#g_refOld
062C E0                MOVX    A,@DPTR
062D FC                MOV     R4,A
062E A3                INC     DPTR
062F E0                MOVX    A,@DPTR
0630 FD                MOV     R5,A
0631 A3                INC     DPTR
0632 E0                MOVX    A,@DPTR
0633 FE                MOV     R6,A
0634 A3                INC     DPTR
0635 E0                MOVX    A,@DPTR
0636 C3                CLR     C
0637 9B                SUBB    A,R3
0638 FF                MOV     R7,A
0639 EE                MOV     A,R6
063A 9A                SUBB    A,R2
063B FE                MOV     R6,A
063C ED                MOV     A,R5
063D 99                SUBB    A,R1
063E FD                MOV     R5,A
063F EC                MOV     A,R4
0640 98                SUBB    A,R0
0641 FC                MOV     R4,A
0642 900000      E     MOV     DPTR,#g_ref
0645 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 595
                                           ; SOURCE LINE # 596
0648 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 598
                                           ; SOURCE LINE # 599
                                           ; SOURCE LINE # 600
                                           ; SOURCE LINE # 602
064B 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 604
064E         ?C0091:
                                           ; SOURCE LINE # 606
064E 900000      E     MOV     DPTR,#c_mem+07CH
0651 E0                MOVX    A,@DPTR
0652 FC                MOV     R4,A
0653 A3                INC     DPTR
0654 E0                MOVX    A,@DPTR
0655 FD                MOV     R5,A
0656 E4                CLR     A
0657 120000      E     LCALL   ?C?FCASTI
065A E4                CLR     A
065B FB                MOV     R3,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 55  

065C FA                MOV     R2,A
065D F9                MOV     R1,A
065E 7840              MOV     R0,#040H
0660 120000      E     LCALL   ?C?FPDIV
0663 C004              PUSH    AR4
0665 C005              PUSH    AR5
0667 C006              PUSH    AR6
0669 C007              PUSH    AR7
066B 900000      E     MOV     DPTR,#g_meas+02FH
066E E0                MOVX    A,@DPTR
066F FC                MOV     R4,A
0670 A3                INC     DPTR
0671 E0                MOVX    A,@DPTR
0672 FD                MOV     R5,A
0673 EC                MOV     A,R4
0674 120000      E     LCALL   ?C?FCASTI
0677 D003              POP     AR3
0679 D002              POP     AR2
067B D001              POP     AR1
067D D000              POP     AR0
067F 120000      E     LCALL   ?C?FPDIV
0682 8F00        R     MOV     joy_perc+03H,R7
0684 8E00        R     MOV     joy_perc+02H,R6
0686 8D00        R     MOV     joy_perc+01H,R5
0688 8C00        R     MOV     joy_perc,R4
                                           ; SOURCE LINE # 607
068A 900000      E     MOV     DPTR,#c_mem+07AH
068D E0                MOVX    A,@DPTR
068E FC                MOV     R4,A
068F A3                INC     DPTR
0690 E0                MOVX    A,@DPTR
0691 FD                MOV     R5,A
0692 E4                CLR     A
0693 120000      E     LCALL   ?C?FCASTI
0696 AB00        R     MOV     R3,joy_perc+03H
0698 AA00        R     MOV     R2,joy_perc+02H
069A A900        R     MOV     R1,joy_perc+01H
069C A800        R     MOV     R0,joy_perc
069E 120000      E     LCALL   ?C?FPMUL
06A1 C004              PUSH    AR4
06A3 C005              PUSH    AR5
06A5 C006              PUSH    AR6
06A7 C007              PUSH    AR7
06A9 900000      E     MOV     DPTR,#g_refOld
06AC E0                MOVX    A,@DPTR
06AD FC                MOV     R4,A
06AE A3                INC     DPTR
06AF E0                MOVX    A,@DPTR
06B0 FD                MOV     R5,A
06B1 A3                INC     DPTR
06B2 E0                MOVX    A,@DPTR
06B3 FE                MOV     R6,A
06B4 A3                INC     DPTR
06B5 E0                MOVX    A,@DPTR
06B6 FF                MOV     R7,A
06B7 EC                MOV     A,R4
06B8 120000      E     LCALL   ?C?FCASTL
06BB D003              POP     AR3
06BD D002              POP     AR2
06BF D001              POP     AR1
06C1 D000              POP     AR0
06C3 120000      E     LCALL   ?C?FPADD
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 56  

06C6 120000      E     LCALL   ?C?CASTF
06C9 900000      E     MOV     DPTR,#g_ref
06CC 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 609
                                           ; SOURCE LINE # 610
                                           ; SOURCE LINE # 611
                                           ; SOURCE LINE # 612
06CF         ?C0055:
                                           ; SOURCE LINE # 615
06CF 900000      E     MOV     DPTR,#c_mem+02BH
06D2 E0                MOVX    A,@DPTR
06D3 606A              JZ      ?C0093
                                           ; SOURCE LINE # 616
06D5 A3                INC     DPTR
06D6 E0                MOVX    A,@DPTR
06D7 FC                MOV     R4,A
06D8 A3                INC     DPTR
06D9 E0                MOVX    A,@DPTR
06DA FD                MOV     R5,A
06DB A3                INC     DPTR
06DC E0                MOVX    A,@DPTR
06DD FE                MOV     R6,A
06DE A3                INC     DPTR
06DF E0                MOVX    A,@DPTR
06E0 FF                MOV     R7,A
06E1 900000      E     MOV     DPTR,#g_ref
06E4 E0                MOVX    A,@DPTR
06E5 F8                MOV     R0,A
06E6 A3                INC     DPTR
06E7 E0                MOVX    A,@DPTR
06E8 F9                MOV     R1,A
06E9 A3                INC     DPTR
06EA E0                MOVX    A,@DPTR
06EB FA                MOV     R2,A
06EC A3                INC     DPTR
06ED E0                MOVX    A,@DPTR
06EE FB                MOV     R3,A
06EF C3                CLR     C
06F0 120000      E     LCALL   ?C?SLCMP
06F3 5014              JNC     ?C0094
                                           ; SOURCE LINE # 617
06F5 900000      E     MOV     DPTR,#c_mem+02CH
06F8 E0                MOVX    A,@DPTR
06F9 FC                MOV     R4,A
06FA A3                INC     DPTR
06FB E0                MOVX    A,@DPTR
06FC FD                MOV     R5,A
06FD A3                INC     DPTR
06FE E0                MOVX    A,@DPTR
06FF FE                MOV     R6,A
0700 A3                INC     DPTR
0701 E0                MOVX    A,@DPTR
0702 FF                MOV     R7,A
0703 900000      E     MOV     DPTR,#g_ref
0706 120000      E     LCALL   ?C?LSTXDATA
0709         ?C0094:
                                           ; SOURCE LINE # 618
0709 900000      E     MOV     DPTR,#c_mem+034H
070C E0                MOVX    A,@DPTR
070D FC                MOV     R4,A
070E A3                INC     DPTR
070F E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 57  

0710 FD                MOV     R5,A
0711 A3                INC     DPTR
0712 E0                MOVX    A,@DPTR
0713 FE                MOV     R6,A
0714 A3                INC     DPTR
0715 E0                MOVX    A,@DPTR
0716 FF                MOV     R7,A
0717 900000      E     MOV     DPTR,#g_ref
071A E0                MOVX    A,@DPTR
071B F8                MOV     R0,A
071C A3                INC     DPTR
071D E0                MOVX    A,@DPTR
071E F9                MOV     R1,A
071F A3                INC     DPTR
0720 E0                MOVX    A,@DPTR
0721 FA                MOV     R2,A
0722 A3                INC     DPTR
0723 E0                MOVX    A,@DPTR
0724 FB                MOV     R3,A
0725 D3                SETB    C
0726 120000      E     LCALL   ?C?SLCMP
0729 4014              JC      ?C0093
                                           ; SOURCE LINE # 619
072B 900000      E     MOV     DPTR,#c_mem+034H
072E E0                MOVX    A,@DPTR
072F FC                MOV     R4,A
0730 A3                INC     DPTR
0731 E0                MOVX    A,@DPTR
0732 FD                MOV     R5,A
0733 A3                INC     DPTR
0734 E0                MOVX    A,@DPTR
0735 FE                MOV     R6,A
0736 A3                INC     DPTR
0737 E0                MOVX    A,@DPTR
0738 FF                MOV     R7,A
0739 900000      E     MOV     DPTR,#g_ref
073C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 620
073F         ?C0093:
                                           ; SOURCE LINE # 622
073F 900000      E     MOV     DPTR,#c_mem+056H
0742 E0                MOVX    A,@DPTR
0743 6401              XRL     A,#01H
0745 6003              JZ      $ + 5H
0747 020000      R     LJMP    ?C0096
                                           ; SOURCE LINE # 623
074A 900000      E     MOV     DPTR,#rest_enabled
074D E0                MOVX    A,@DPTR
074E B40114            CJNE    A,#01H,?C0097
                                           ; SOURCE LINE # 625
0751 900000      E     MOV     DPTR,#rest_pos_curr_ref
0754 E0                MOVX    A,@DPTR
0755 FC                MOV     R4,A
0756 A3                INC     DPTR
0757 E0                MOVX    A,@DPTR
0758 FD                MOV     R5,A
0759 A3                INC     DPTR
075A E0                MOVX    A,@DPTR
075B FE                MOV     R6,A
075C A3                INC     DPTR
075D E0                MOVX    A,@DPTR
075E FF                MOV     R7,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 58  

075F 900000      E     MOV     DPTR,#g_ref
0762 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 626
0765         ?C0097:
                                           ; SOURCE LINE # 628
0765 900000      E     MOV     DPTR,#forced_open
0768 E0                MOVX    A,@DPTR
0769 6401              XRL     A,#01H
076B 6003              JZ      $ + 5H
076D 020000      R     LJMP    ?C0096
                                           ; SOURCE LINE # 630
0770 FF                MOV     R7,A
0771 FE                MOV     R6,A
0772 FD                MOV     R5,A
0773 FC                MOV     R4,A
0774 AB00        R     MOV     R3,err_emg_2+03H
0776 AA00        R     MOV     R2,err_emg_2+02H
0778 A900        R     MOV     R1,err_emg_2+01H
077A A800        R     MOV     R0,err_emg_2
077C D3                SETB    C
077D 120000      E     LCALL   ?C?SLCMP
0780 405D              JC      ?C0099
                                           ; SOURCE LINE # 631
0782 900000      E     MOV     DPTR,#g_mem+057H
0785 E0                MOVX    A,@DPTR
0786 FC                MOV     R4,A
0787 A3                INC     DPTR
0788 E0                MOVX    A,@DPTR
0789 FD                MOV     R5,A
078A A3                INC     DPTR
078B E0                MOVX    A,@DPTR
078C FE                MOV     R6,A
078D A3                INC     DPTR
078E E0                MOVX    A,@DPTR
078F FF                MOV     R7,A
0790 A800        R     MOV     R0,err_emg_2
0792 120000      E     LCALL   ?C?LMUL
0795 C006              PUSH    AR6
0797 C007              PUSH    AR7
0799 900000      E     MOV     DPTR,#c_mem+046H
079C E0                MOVX    A,@DPTR
079D FE                MOV     R6,A
079E A3                INC     DPTR
079F E0                MOVX    A,@DPTR
07A0 FF                MOV     R7,A
07A1 C3                CLR     C
07A2 E4                CLR     A
07A3 9F                SUBB    A,R7
07A4 FF                MOV     R7,A
07A5 7404              MOV     A,#04H
07A7 9E                SUBB    A,R6
07A8 FE                MOV     R6,A
07A9 AB07              MOV     R3,AR7
07AB FA                MOV     R2,A
07AC E4                CLR     A
07AD F9                MOV     R1,A
07AE F8                MOV     R0,A
07AF D007              POP     AR7
07B1 D006              POP     AR6
07B3 120000      E     LCALL   ?C?SLDIV
07B6 A804              MOV     R0,AR4
07B8 A905              MOV     R1,AR5
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 59  

07BA AA06              MOV     R2,AR6
07BC AB07              MOV     R3,AR7
07BE 900000      E     MOV     DPTR,#g_mem+057H
07C1 E0                MOVX    A,@DPTR
07C2 FC                MOV     R4,A
07C3 A3                INC     DPTR
07C4 E0                MOVX    A,@DPTR
07C5 FD                MOV     R5,A
07C6 A3                INC     DPTR
07C7 E0                MOVX    A,@DPTR
07C8 FE                MOV     R6,A
07C9 A3                INC     DPTR
07CA E0                MOVX    A,@DPTR
07CB C3                CLR     C
07CC 9B                SUBB    A,R3
07CD FF                MOV     R7,A
07CE EE                MOV     A,R6
07CF 9A                SUBB    A,R2
07D0 FE                MOV     R6,A
07D1 ED                MOV     A,R5
07D2 99                SUBB    A,R1
07D3 FD                MOV     R5,A
07D4 EC                MOV     A,R4
07D5 98                SUBB    A,R0
07D6 FC                MOV     R4,A
07D7 900000      E     MOV     DPTR,#g_ref
07DA 120000      E     LCALL   ?C?LSTXDATA
07DD 8019              SJMP    ?C0096
07DF         ?C0099:
                                           ; SOURCE LINE # 632
                                           ; SOURCE LINE # 633
07DF 900000      E     MOV     DPTR,#g_mem+057H
07E2 E0                MOVX    A,@DPTR
07E3 FC                MOV     R4,A
07E4 A3                INC     DPTR
07E5 E0                MOVX    A,@DPTR
07E6 FD                MOV     R5,A
07E7 A3                INC     DPTR
07E8 E0                MOVX    A,@DPTR
07E9 FE                MOV     R6,A
07EA A3                INC     DPTR
07EB E0                MOVX    A,@DPTR
07EC FF                MOV     R7,A
07ED 900000      E     MOV     DPTR,#g_ref
07F0 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 634
07F3 E4                CLR     A
07F4 900000      E     MOV     DPTR,#forced_open
07F7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 635
                                           ; SOURCE LINE # 636
                                           ; SOURCE LINE # 637
07F8         ?C0096:
                                           ; SOURCE LINE # 640
07F8 900000      E     MOV     DPTR,#g_meas
07FB E0                MOVX    A,@DPTR
07FC F8                MOV     R0,A
07FD A3                INC     DPTR
07FE E0                MOVX    A,@DPTR
07FF F9                MOV     R1,A
0800 A3                INC     DPTR
0801 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 60  

0802 FA                MOV     R2,A
0803 A3                INC     DPTR
0804 E0                MOVX    A,@DPTR
0805 FB                MOV     R3,A
0806 900000      E     MOV     DPTR,#g_ref
0809 E0                MOVX    A,@DPTR
080A FC                MOV     R4,A
080B A3                INC     DPTR
080C E0                MOVX    A,@DPTR
080D FD                MOV     R5,A
080E A3                INC     DPTR
080F E0                MOVX    A,@DPTR
0810 FE                MOV     R6,A
0811 A3                INC     DPTR
0812 E0                MOVX    A,@DPTR
0813 C3                CLR     C
0814 9B                SUBB    A,R3
0815 F500        R     MOV     pos_error+03H,A
0817 EE                MOV     A,R6
0818 9A                SUBB    A,R2
0819 F500        R     MOV     pos_error+02H,A
081B ED                MOV     A,R5
081C 99                SUBB    A,R1
081D F500        R     MOV     pos_error+01H,A
081F EC                MOV     A,R4
0820 98                SUBB    A,R0
0821 F500        R     MOV     pos_error,A
                                           ; SOURCE LINE # 642
0823 900000      R     MOV     DPTR,#pos_error_sum
0826 E0                MOVX    A,@DPTR
0827 FC                MOV     R4,A
0828 A3                INC     DPTR
0829 E0                MOVX    A,@DPTR
082A FD                MOV     R5,A
082B A3                INC     DPTR
082C E0                MOVX    A,@DPTR
082D FE                MOV     R6,A
082E A3                INC     DPTR
082F E0                MOVX    A,@DPTR
0830 2500        R     ADD     A,pos_error+03H
0832 FF                MOV     R7,A
0833 EE                MOV     A,R6
0834 3500        R     ADDC    A,pos_error+02H
0836 FE                MOV     R6,A
0837 ED                MOV     A,R5
0838 3500        R     ADDC    A,pos_error+01H
083A FD                MOV     R5,A
083B EC                MOV     A,R4
083C 3500        R     ADDC    A,pos_error
083E FC                MOV     R4,A
083F 900000      R     MOV     DPTR,#pos_error_sum
0842 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 645
0845 E4                CLR     A
0846 7FE8              MOV     R7,#0E8H
0848 7E03              MOV     R6,#03H
084A FD                MOV     R5,A
084B FC                MOV     R4,A
084C 900000      R     MOV     DPTR,#pos_error_sum
084F E0                MOVX    A,@DPTR
0850 F8                MOV     R0,A
0851 A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 61  

0852 E0                MOVX    A,@DPTR
0853 F9                MOV     R1,A
0854 A3                INC     DPTR
0855 E0                MOVX    A,@DPTR
0856 FA                MOV     R2,A
0857 A3                INC     DPTR
0858 E0                MOVX    A,@DPTR
0859 FB                MOV     R3,A
085A D3                SETB    C
085B 120000      E     LCALL   ?C?SLCMP
085E 400F              JC      ?C0101
                                           ; SOURCE LINE # 646
0860 E4                CLR     A
0861 7FE8              MOV     R7,#0E8H
0863 7E03              MOV     R6,#03H
0865 FD                MOV     R5,A
0866 FC                MOV     R4,A
0867 900000      R     MOV     DPTR,#pos_error_sum
086A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 647
086D 802A              SJMP    ?C0102
086F         ?C0101:
086F 7F18              MOV     R7,#018H
0871 7EFC              MOV     R6,#0FCH
0873 7DFF              MOV     R5,#0FFH
0875 7CFF              MOV     R4,#0FFH
0877 900000      R     MOV     DPTR,#pos_error_sum
087A E0                MOVX    A,@DPTR
087B F8                MOV     R0,A
087C A3                INC     DPTR
087D E0                MOVX    A,@DPTR
087E F9                MOV     R1,A
087F A3                INC     DPTR
0880 E0                MOVX    A,@DPTR
0881 FA                MOV     R2,A
0882 A3                INC     DPTR
0883 E0                MOVX    A,@DPTR
0884 FB                MOV     R3,A
0885 C3                CLR     C
0886 120000      E     LCALL   ?C?SLCMP
0889 500E              JNC     ?C0102
                                           ; SOURCE LINE # 648
088B 7F18              MOV     R7,#018H
088D 7EFC              MOV     R6,#0FCH
088F 7DFF              MOV     R5,#0FFH
0891 7CFF              MOV     R4,#0FFH
0893 900000      R     MOV     DPTR,#pos_error_sum
0896 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 649
0899         ?C0102:
                                           ; SOURCE LINE # 652
0899 E4                CLR     A
089A FF                MOV     R7,A
089B FE                MOV     R6,A
089C FD                MOV     R5,A
089D FC                MOV     R4,A
089E AB00        R     MOV     R3,k_p+03H
08A0 AA00        R     MOV     R2,k_p+02H
08A2 A900        R     MOV     R1,k_p+01H
08A4 A800        R     MOV     R0,k_p
08A6 C3                CLR     C
08A7 120000      E     LCALL   ?C?SLCMP
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 62  

08AA 601A              JZ      ?C0104
                                           ; SOURCE LINE # 653
08AC AF00        R     MOV     R7,pos_error+03H
08AE AE00        R     MOV     R6,pos_error+02H
08B0 AD00        R     MOV     R5,pos_error+01H
08B2 AC00        R     MOV     R4,pos_error
08B4 A800        R     MOV     R0,k_p
08B6 120000      E     LCALL   ?C?LMUL
08B9 7810              MOV     R0,#010H
08BB 120000      E     LCALL   ?C?SLSHR
08BE 8F00        R     MOV     pwm_input+03H,R7
08C0 8E00        R     MOV     pwm_input+02H,R6
08C2 8D00        R     MOV     pwm_input+01H,R5
08C4 8C00        R     MOV     pwm_input,R4
08C6         ?C0104:
                                           ; SOURCE LINE # 657
08C6 E4                CLR     A
08C7 FF                MOV     R7,A
08C8 FE                MOV     R6,A
08C9 FD                MOV     R5,A
08CA FC                MOV     R4,A
08CB AB00        R     MOV     R3,k_i+03H
08CD AA00        R     MOV     R2,k_i+02H
08CF A900        R     MOV     R1,k_i+01H
08D1 A800        R     MOV     R0,k_i
08D3 C3                CLR     C
08D4 120000      E     LCALL   ?C?SLCMP
08D7 602C              JZ      ?C0105
                                           ; SOURCE LINE # 658
08D9 900000      R     MOV     DPTR,#pos_error_sum
08DC E0                MOVX    A,@DPTR
08DD FC                MOV     R4,A
08DE A3                INC     DPTR
08DF E0                MOVX    A,@DPTR
08E0 FD                MOV     R5,A
08E1 A3                INC     DPTR
08E2 E0                MOVX    A,@DPTR
08E3 FE                MOV     R6,A
08E4 A3                INC     DPTR
08E5 E0                MOVX    A,@DPTR
08E6 FF                MOV     R7,A
08E7 A800        R     MOV     R0,k_i
08E9 120000      E     LCALL   ?C?LMUL
08EC 7810              MOV     R0,#010H
08EE 120000      E     LCALL   ?C?SLSHR
08F1 E500        R     MOV     A,pwm_input+03H
08F3 2F                ADD     A,R7
08F4 F500        R     MOV     pwm_input+03H,A
08F6 E500        R     MOV     A,pwm_input+02H
08F8 3E                ADDC    A,R6
08F9 F500        R     MOV     pwm_input+02H,A
08FB E500        R     MOV     A,pwm_input+01H
08FD 3D                ADDC    A,R5
08FE F500        R     MOV     pwm_input+01H,A
0900 E500        R     MOV     A,pwm_input
0902 3C                ADDC    A,R4
0903 F500        R     MOV     pwm_input,A
0905         ?C0105:
                                           ; SOURCE LINE # 662
0905 E4                CLR     A
0906 FF                MOV     R7,A
0907 FE                MOV     R6,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 63  

0908 FD                MOV     R5,A
0909 FC                MOV     R4,A
090A AB00        R     MOV     R3,k_d+03H
090C AA00        R     MOV     R2,k_d+02H
090E A900        R     MOV     R1,k_d+01H
0910 A800        R     MOV     R0,k_d
0912 C3                CLR     C
0913 120000      E     LCALL   ?C?SLCMP
0916 6043              JZ      ?C0106
                                           ; SOURCE LINE # 663
0918 900000      R     MOV     DPTR,#prev_pos_err
091B E0                MOVX    A,@DPTR
091C F8                MOV     R0,A
091D A3                INC     DPTR
091E E0                MOVX    A,@DPTR
091F F9                MOV     R1,A
0920 A3                INC     DPTR
0921 E0                MOVX    A,@DPTR
0922 FA                MOV     R2,A
0923 A3                INC     DPTR
0924 E0                MOVX    A,@DPTR
0925 FB                MOV     R3,A
0926 C3                CLR     C
0927 E500        R     MOV     A,pos_error+03H
0929 9B                SUBB    A,R3
092A FF                MOV     R7,A
092B E500        R     MOV     A,pos_error+02H
092D 9A                SUBB    A,R2
092E FE                MOV     R6,A
092F E500        R     MOV     A,pos_error+01H
0931 99                SUBB    A,R1
0932 FD                MOV     R5,A
0933 E500        R     MOV     A,pos_error
0935 98                SUBB    A,R0
0936 FC                MOV     R4,A
0937 AB00        R     MOV     R3,k_d+03H
0939 AA00        R     MOV     R2,k_d+02H
093B A900        R     MOV     R1,k_d+01H
093D A800        R     MOV     R0,k_d
093F 120000      E     LCALL   ?C?LMUL
0942 7810              MOV     R0,#010H
0944 120000      E     LCALL   ?C?SLSHR
0947 E500        R     MOV     A,pwm_input+03H
0949 2F                ADD     A,R7
094A F500        R     MOV     pwm_input+03H,A
094C E500        R     MOV     A,pwm_input+02H
094E 3E                ADDC    A,R6
094F F500        R     MOV     pwm_input+02H,A
0951 E500        R     MOV     A,pwm_input+01H
0953 3D                ADDC    A,R5
0954 F500        R     MOV     pwm_input+01H,A
0956 E500        R     MOV     A,pwm_input
0958 3C                ADDC    A,R4
0959 F500        R     MOV     pwm_input,A
095B         ?C0106:
                                           ; SOURCE LINE # 667
095B AF00        R     MOV     R7,pos_error+03H
095D AE00        R     MOV     R6,pos_error+02H
095F AD00        R     MOV     R5,pos_error+01H
0961 AC00        R     MOV     R4,pos_error
0963 900000      R     MOV     DPTR,#prev_pos_err
0966 120000      E     LCALL   ?C?LSTXDATA
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 64  

                                           ; SOURCE LINE # 669
0969 E4                CLR     A
096A FF                MOV     R7,A
096B FE                MOV     R6,A
096C FD                MOV     R5,A
096D FC                MOV     R4,A
096E AB00        R     MOV     R3,pwm_input+03H
0970 AA00        R     MOV     R2,pwm_input+02H
0972 A900        R     MOV     R1,pwm_input+01H
0974 A800        R     MOV     R0,pwm_input
0976 D3                SETB    C
0977 120000      E     LCALL   ?C?SLCMP
097A 4004              JC      ?C0107
                                           ; SOURCE LINE # 670
097C D200        R     SETB    motor_dir
097E 8002              SJMP    ?C0108
0980         ?C0107:
                                           ; SOURCE LINE # 672
0980 C200        R     CLR     motor_dir
0982         ?C0108:
                                           ; SOURCE LINE # 677
0982 E4                CLR     A
0983 7F64              MOV     R7,#064H
0985 FE                MOV     R6,A
0986 FD                MOV     R5,A
0987 FC                MOV     R4,A
0988 AB00        R     MOV     R3,pwm_input+03H
098A AA00        R     MOV     R2,pwm_input+02H
098C A900        R     MOV     R1,pwm_input+01H
098E A800        R     MOV     R0,pwm_input
0990 D3                SETB    C
0991 120000      E     LCALL   ?C?SLCMP
0994 400A              JC      ?C0109
                                           ; SOURCE LINE # 678
0996 E4                CLR     A
0997 750064      R     MOV     pwm_input+03H,#064H
099A F500        R     MOV     pwm_input+02H,A
099C F500        R     MOV     pwm_input+01H,A
099E F500        R     MOV     pwm_input,A
09A0         ?C0109:
                                           ; SOURCE LINE # 679
09A0 74FF              MOV     A,#0FFH
09A2 7F9C              MOV     R7,#09CH
09A4 FE                MOV     R6,A
09A5 FD                MOV     R5,A
09A6 FC                MOV     R4,A
09A7 AB00        R     MOV     R3,pwm_input+03H
09A9 AA00        R     MOV     R2,pwm_input+02H
09AB A900        R     MOV     R1,pwm_input+01H
09AD A800        R     MOV     R0,pwm_input
09AF C3                CLR     C
09B0 120000      E     LCALL   ?C?SLCMP
09B3 500B              JNC     ?C0110
                                           ; SOURCE LINE # 680
09B5 74FF              MOV     A,#0FFH
09B7 75009C      R     MOV     pwm_input+03H,#09CH
09BA F500        R     MOV     pwm_input+02H,A
09BC F500        R     MOV     pwm_input+01H,A
09BE F500        R     MOV     pwm_input,A
09C0         ?C0110:
                                           ; SOURCE LINE # 683
09C0 AF00        R     MOV     R7,pwm_input+03H
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 65  

09C2 AE00        R     MOV     R6,pwm_input+02H
09C4 AD00        R     MOV     R5,pwm_input+01H
09C6 AC00        R     MOV     R4,pwm_input
09C8 780A              MOV     R0,#0AH
09CA 120000      E     LCALL   ?C?LSHL
09CD E4                CLR     A
09CE 7B64              MOV     R3,#064H
09D0 FA                MOV     R2,A
09D1 F9                MOV     R1,A
09D2 F8                MOV     R0,A
09D3 120000      E     LCALL   ?C?SLDIV
09D6 A804              MOV     R0,AR4
09D8 A905              MOV     R1,AR5
09DA AA06              MOV     R2,AR6
09DC AB07              MOV     R3,AR7
09DE 900000      E     MOV     DPTR,#dev_pwm_limit
09E1 E0                MOVX    A,@DPTR
09E2 FF                MOV     R7,A
09E3 E4                CLR     A
09E4 FC                MOV     R4,A
09E5 FD                MOV     R5,A
09E6 FE                MOV     R6,A
09E7 120000      E     LCALL   ?C?LMUL
09EA 780A              MOV     R0,#0AH
09EC 120000      E     LCALL   ?C?SLSHR
09EF 8F00        R     MOV     pwm_input+03H,R7
09F1 8E00        R     MOV     pwm_input+02H,R6
09F3 8D00        R     MOV     pwm_input+01H,R5
09F5 8C00        R     MOV     pwm_input,R4
                                           ; SOURCE LINE # 686
09F7 E4                CLR     A
09F8 FF                MOV     R7,A
09F9 FE                MOV     R6,A
09FA FD                MOV     R5,A
09FB FC                MOV     R4,A
09FC AB00        R     MOV     R3,pwm_input+03H
09FE AA00        R     MOV     R2,pwm_input+02H
0A00 A900        R     MOV     R1,pwm_input+01H
0A02 A800        R     MOV     R0,pwm_input
0A04 C3                CLR     C
0A05 120000      E     LCALL   ?C?SLCMP
0A08 4004              JC      ?C0111
0A0A 7F01              MOV     R7,#01H
0A0C 8002              SJMP    ?C0112
0A0E         ?C0111:
0A0E 7FFF              MOV     R7,#0FFH
0A10         ?C0112:
0A10 900000      E     MOV     DPTR,#pwm_sign
0A13 EF                MOV     A,R7
0A14 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 688
0A15 300007            JNB     motor_dir,?C0113
                                           ; SOURCE LINE # 689
0A18 7F01              MOV     R7,#01H
0A1A 120000      E     LCALL   _MOTOR_DIR_Write
0A1D 8005              SJMP    ?C0114
0A1F         ?C0113:
                                           ; SOURCE LINE # 691
0A1F E4                CLR     A
0A20 FF                MOV     R7,A
0A21 120000      E     LCALL   _MOTOR_DIR_Write
0A24         ?C0114:
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 66  

                                           ; SOURCE LINE # 693
0A24 AE00        R     MOV     R6,pwm_input+02H
0A26 AF00        R     MOV     R7,pwm_input+03H
0A28 120000      E     LCALL   _abs
0A2B 120000      E     LCALL   _PWM_MOTORS_WriteCompare1
                                           ; SOURCE LINE # 694
0A2E 22                RET     
             ; FUNCTION motor_control (END)

             ; FUNCTION _encoder_reading (BEGIN)
                                           ; SOURCE LINE # 700
;---- Variable 'idx' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 702
0000 8F00        R     MOV     index,R7
                                           ; SOURCE LINE # 729
0002 E500        R     MOV     A,index
0004 C3                CLR     C
0005 9403              SUBB    A,#03H
0007 4003              JC      $ + 5H
0009 020000      R     LJMP    ?C0117
000C         ?C0116:
                                           ; SOURCE LINE # 732
000C 300022            JNB     reset_last_value_flag,?C0118
                                           ; SOURCE LINE # 733
;---- Variable 'jj' assigned to Register 'R3' ----
000F 7B03              MOV     R3,#03H
0011         ?C0119:
0011 AF03              MOV     R7,AR3
0013 1B                DEC     R3
0014 EF                MOV     A,R7
0015 6018              JZ      ?C0120
                                           ; SOURCE LINE # 734
0017 E4                CLR     A
0018 FF                MOV     R7,A
0019 FE                MOV     R6,A
001A FD                MOV     R5,A
001B FC                MOV     R4,A
001C EB                MOV     A,R3
001D 25E0              ADD     A,ACC
001F 25E0              ADD     A,ACC
0021 2400        R     ADD     A,#LOW last_value_encoder
0023 F582              MOV     DPL,A
0025 E4                CLR     A
0026 3400        R     ADDC    A,#HIGH last_value_encoder
0028 F583              MOV     DPH,A
002A 120000      E     LCALL   ?C?LSTXDATA
002D 80E2              SJMP    ?C0119
002F         ?C0120:
                                           ; SOURCE LINE # 736
002F C200        E     CLR     reset_last_value_flag
                                           ; SOURCE LINE # 737
0031         ?C0118:
                                           ; SOURCE LINE # 741
0031 E500        R     MOV     A,index
0033 7018              JNZ     ?C0121
                                           ; SOURCE LINE # 742
0035 120000      E     LCALL   SHIFTREG_ENC_1_ReadData
0038 7801              MOV     R0,#01H
003A 120000      E     LCALL   ?C?ULSHR
003D EF                MOV     A,R7
003E EE                MOV     A,R6
003F ED                MOV     A,R5
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 67  

0040 5403              ANL     A,#03H
0042 FD                MOV     R5,A
0043 E4                CLR     A
0044 FC                MOV     R4,A
0045 900000      R     MOV     DPTR,#data_encoder
0048 120000      E     LCALL   ?C?LSTXDATA
004B 8033              SJMP    ?C0122
004D         ?C0121:
                                           ; SOURCE LINE # 743
                                           ; SOURCE LINE # 744
004D E500        R     MOV     A,index
004F B40118            CJNE    A,#01H,?C0123
                                           ; SOURCE LINE # 745
0052 120000      E     LCALL   SHIFTREG_ENC_2_ReadData
0055 7801              MOV     R0,#01H
0057 120000      E     LCALL   ?C?ULSHR
005A EF                MOV     A,R7
005B EE                MOV     A,R6
005C ED                MOV     A,R5
005D 5403              ANL     A,#03H
005F FD                MOV     R5,A
0060 E4                CLR     A
0061 FC                MOV     R4,A
0062 900000      R     MOV     DPTR,#data_encoder
0065 120000      E     LCALL   ?C?LSTXDATA
0068 8016              SJMP    ?C0122
006A         ?C0123:
                                           ; SOURCE LINE # 747
006A 120000      E     LCALL   SHIFTREG_ENC_3_ReadData
006D 7801              MOV     R0,#01H
006F 120000      E     LCALL   ?C?ULSHR
0072 EF                MOV     A,R7
0073 EE                MOV     A,R6
0074 ED                MOV     A,R5
0075 5403              ANL     A,#03H
0077 FD                MOV     R5,A
0078 E4                CLR     A
0079 FC                MOV     R4,A
007A 900000      R     MOV     DPTR,#data_encoder
007D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 748
0080         ?C0122:
                                           ; SOURCE LINE # 751
0080 7B01              MOV     R3,#01H
0082 7A00        R     MOV     R2,#HIGH data_encoder
0084 7900        R     MOV     R1,#LOW data_encoder
0086 120000      E     LCALL   _check_enc_data
0089 4003              JC      $ + 5H
008B 020000      R     LJMP    ?C0125
                                           ; SOURCE LINE # 753
008E 900000      R     MOV     DPTR,#data_encoder
0091 E0                MOVX    A,@DPTR
0092 FC                MOV     R4,A
0093 A3                INC     DPTR
0094 E0                MOVX    A,@DPTR
0095 FD                MOV     R5,A
0096 A3                INC     DPTR
0097 E0                MOVX    A,@DPTR
0098 FE                MOV     R6,A
0099 A3                INC     DPTR
009A E0                MOVX    A,@DPTR
009B 54C0              ANL     A,#0C0H
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 68  

009D FF                MOV     R7,A
009E EE                MOV     A,R6
009F ED                MOV     A,R5
00A0 5403              ANL     A,#03H
00A2 FD                MOV     R5,A
00A3 E4                CLR     A
00A4 2F                ADD     A,R7
00A5 FF                MOV     R7,A
00A6 E4                CLR     A
00A7 3E                ADDC    A,R6
00A8 FE                MOV     R6,A
00A9 ED                MOV     A,R5
00AA 34FE              ADDC    A,#0FEH
00AC FD                MOV     R5,A
00AD E4                CLR     A
00AE 34FF              ADDC    A,#0FFH
00B0 FC                MOV     R4,A
00B1 7802              MOV     R0,#02H
00B3 120000      E     LCALL   ?C?ULSHR
00B6 EE                MOV     A,R6
00B7 33                RLC     A
00B8 95E0              SUBB    A,ACC
00BA FD                MOV     R5,A
00BB FC                MOV     R4,A
00BC E500        R     MOV     A,index
00BE 25E0              ADD     A,ACC
00C0 25E0              ADD     A,ACC
00C2 2400        E     ADD     A,#LOW g_mem+013H
00C4 F582              MOV     DPL,A
00C6 E4                CLR     A
00C7 3400        E     ADDC    A,#HIGH g_mem+013H
00C9 F583              MOV     DPH,A
00CB E0                MOVX    A,@DPTR
00CC F8                MOV     R0,A
00CD A3                INC     DPTR
00CE E0                MOVX    A,@DPTR
00CF F9                MOV     R1,A
00D0 A3                INC     DPTR
00D1 E0                MOVX    A,@DPTR
00D2 FA                MOV     R2,A
00D3 A3                INC     DPTR
00D4 E0                MOVX    A,@DPTR
00D5 2F                ADD     A,R7
00D6 FF                MOV     R7,A
00D7 EA                MOV     A,R2
00D8 3E                ADDC    A,R6
00D9 FE                MOV     R6,A
00DA E9                MOV     A,R1
00DB 3D                ADDC    A,R5
00DC FD                MOV     R5,A
00DD E8                MOV     A,R0
00DE 3C                ADDC    A,R4
00DF FC                MOV     R4,A
00E0 900000      R     MOV     DPTR,#value_encoder
00E3 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 760
00E6 300027            JNB     only_first_time,?C0126
                                           ; SOURCE LINE # 761
00E9 900000      R     MOV     DPTR,#value_encoder
00EC E0                MOVX    A,@DPTR
00ED FC                MOV     R4,A
00EE A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 69  

00EF E0                MOVX    A,@DPTR
00F0 FD                MOV     R5,A
00F1 A3                INC     DPTR
00F2 E0                MOVX    A,@DPTR
00F3 FE                MOV     R6,A
00F4 A3                INC     DPTR
00F5 E0                MOVX    A,@DPTR
00F6 FF                MOV     R7,A
00F7 E500        R     MOV     A,index
00F9 25E0              ADD     A,ACC
00FB 25E0              ADD     A,ACC
00FD 2400        R     ADD     A,#LOW last_value_encoder
00FF F582              MOV     DPL,A
0101 E4                CLR     A
0102 3400        R     ADDC    A,#HIGH last_value_encoder
0104 F583              MOV     DPH,A
0106 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 762
0109 E500        R     MOV     A,index
010B B40202            CJNE    A,#02H,?C0126
                                           ; SOURCE LINE # 763
010E C200        R     CLR     only_first_time
                                           ; SOURCE LINE # 764
0110         ?C0126:
                                           ; SOURCE LINE # 767
0110 E500        R     MOV     A,index
0112 25E0              ADD     A,ACC
0114 25E0              ADD     A,ACC
0116 2400        R     ADD     A,#LOW last_value_encoder
0118 F582              MOV     DPL,A
011A E4                CLR     A
011B 3400        R     ADDC    A,#HIGH last_value_encoder
011D F583              MOV     DPH,A
011F E0                MOVX    A,@DPTR
0120 F8                MOV     R0,A
0121 A3                INC     DPTR
0122 E0                MOVX    A,@DPTR
0123 F9                MOV     R1,A
0124 A3                INC     DPTR
0125 E0                MOVX    A,@DPTR
0126 FA                MOV     R2,A
0127 A3                INC     DPTR
0128 E0                MOVX    A,@DPTR
0129 FB                MOV     R3,A
012A 900000      R     MOV     DPTR,#value_encoder
012D E0                MOVX    A,@DPTR
012E FC                MOV     R4,A
012F A3                INC     DPTR
0130 E0                MOVX    A,@DPTR
0131 FD                MOV     R5,A
0132 A3                INC     DPTR
0133 E0                MOVX    A,@DPTR
0134 FE                MOV     R6,A
0135 A3                INC     DPTR
0136 E0                MOVX    A,@DPTR
0137 C3                CLR     C
0138 9B                SUBB    A,R3
0139 FF                MOV     R7,A
013A EE                MOV     A,R6
013B 9A                SUBB    A,R2
013C FE                MOV     R6,A
013D ED                MOV     A,R5
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 70  

013E 99                SUBB    A,R1
013F FD                MOV     R5,A
0140 EC                MOV     A,R4
0141 98                SUBB    A,R0
0142 FC                MOV     R4,A
0143 900000      R     MOV     DPTR,#aux
0146 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 787
0149 E4                CLR     A
014A FF                MOV     R7,A
014B 7EC0              MOV     R6,#0C0H
014D FD                MOV     R5,A
014E FC                MOV     R4,A
014F 900000      R     MOV     DPTR,#aux
0152 E0                MOVX    A,@DPTR
0153 F8                MOV     R0,A
0154 A3                INC     DPTR
0155 E0                MOVX    A,@DPTR
0156 F9                MOV     R1,A
0157 A3                INC     DPTR
0158 E0                MOVX    A,@DPTR
0159 FA                MOV     R2,A
015A A3                INC     DPTR
015B E0                MOVX    A,@DPTR
015C FB                MOV     R3,A
015D D3                SETB    C
015E 120000      E     LCALL   ?C?SLCMP
0161 4010              JC      ?C0128
                                           ; SOURCE LINE # 788
0163 7400        E     MOV     A,#LOW g_meas+0CH
0165 2500        R     ADD     A,index
0167 F582              MOV     DPL,A
0169 E4                CLR     A
016A 3400        E     ADDC    A,#HIGH g_meas+0CH
016C F583              MOV     DPH,A
016E E0                MOVX    A,@DPTR
016F 14                DEC     A
0170 F0                MOVX    @DPTR,A
0171 8068              SJMP    ?C0129
0173         ?C0128:
                                           ; SOURCE LINE # 789
                                           ; SOURCE LINE # 790
0173 7F00              MOV     R7,#00H
0175 7E40              MOV     R6,#040H
0177 7DFF              MOV     R5,#0FFH
0179 7CFF              MOV     R4,#0FFH
017B 900000      R     MOV     DPTR,#aux
017E E0                MOVX    A,@DPTR
017F F8                MOV     R0,A
0180 A3                INC     DPTR
0181 E0                MOVX    A,@DPTR
0182 F9                MOV     R1,A
0183 A3                INC     DPTR
0184 E0                MOVX    A,@DPTR
0185 FA                MOV     R2,A
0186 A3                INC     DPTR
0187 E0                MOVX    A,@DPTR
0188 FB                MOV     R3,A
0189 C3                CLR     C
018A 120000      E     LCALL   ?C?SLCMP
018D 5010              JNC     ?C0130
                                           ; SOURCE LINE # 791
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 71  

018F 7400        E     MOV     A,#LOW g_meas+0CH
0191 2500        R     ADD     A,index
0193 F582              MOV     DPL,A
0195 E4                CLR     A
0196 3400        E     ADDC    A,#HIGH g_meas+0CH
0198 F583              MOV     DPH,A
019A E0                MOVX    A,@DPTR
019B 04                INC     A
019C F0                MOVX    @DPTR,A
019D 803C              SJMP    ?C0129
019F         ?C0130:
                                           ; SOURCE LINE # 792
                                           ; SOURCE LINE # 793
019F 900000      R     MOV     DPTR,#aux
01A2 E0                MOVX    A,@DPTR
01A3 A3                INC     DPTR
01A4 E0                MOVX    A,@DPTR
01A5 A3                INC     DPTR
01A6 E0                MOVX    A,@DPTR
01A7 FE                MOV     R6,A
01A8 A3                INC     DPTR
01A9 E0                MOVX    A,@DPTR
01AA FF                MOV     R7,A
01AB 120000      E     LCALL   _abs
01AE D3                SETB    C
01AF EF                MOV     A,R7
01B0 9400              SUBB    A,#00H
01B2 EE                MOV     A,R6
01B3 6480              XRL     A,#080H
01B5 94C0              SUBB    A,#0C0H
01B7 4022              JC      ?C0129
                                           ; SOURCE LINE # 794
01B9 7400        R     MOV     A,#LOW error
01BB 2500        R     ADD     A,index
01BD F582              MOV     DPL,A
01BF E4                CLR     A
01C0 3400        R     ADDC    A,#HIGH error
01C2 F583              MOV     DPH,A
01C4 E0                MOVX    A,@DPTR
01C5 04                INC     A
01C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 795
01C7 7400        R     MOV     A,#LOW error
01C9 2500        R     ADD     A,index
01CB F582              MOV     DPL,A
01CD E4                CLR     A
01CE 3400        R     ADDC    A,#HIGH error
01D0 F583              MOV     DPH,A
01D2 E0                MOVX    A,@DPTR
01D3 C3                CLR     C
01D4 940A              SUBB    A,#0AH
01D6 5003              JNC     $ + 5H
01D8 020000      R     LJMP    ?C0117
01DB         ?C0133:
                                           ; SOURCE LINE # 798
                                           ; SOURCE LINE # 799
                                           ; SOURCE LINE # 800
01DB         ?C0129:
                                           ; SOURCE LINE # 802
01DB 7400        R     MOV     A,#LOW error
01DD 2500        R     ADD     A,index
01DF F582              MOV     DPL,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 72  

01E1 E4                CLR     A
01E2 3400        R     ADDC    A,#HIGH error
01E4 F583              MOV     DPH,A
01E6 E4                CLR     A
01E7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 804
01E8 900000      R     MOV     DPTR,#value_encoder
01EB E0                MOVX    A,@DPTR
01EC FC                MOV     R4,A
01ED A3                INC     DPTR
01EE E0                MOVX    A,@DPTR
01EF FD                MOV     R5,A
01F0 A3                INC     DPTR
01F1 E0                MOVX    A,@DPTR
01F2 FE                MOV     R6,A
01F3 A3                INC     DPTR
01F4 E0                MOVX    A,@DPTR
01F5 FF                MOV     R7,A
01F6 E500        R     MOV     A,index
01F8 25E0              ADD     A,ACC
01FA 25E0              ADD     A,ACC
01FC 2400        R     ADD     A,#LOW last_value_encoder
01FE F582              MOV     DPL,A
0200 E4                CLR     A
0201 3400        R     ADDC    A,#HIGH last_value_encoder
0203 F583              MOV     DPH,A
0205 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 806
0208 900000      R     MOV     DPTR,#value_encoder
020B E0                MOVX    A,@DPTR
020C F8                MOV     R0,A
020D A3                INC     DPTR
020E E0                MOVX    A,@DPTR
020F F9                MOV     R1,A
0210 A3                INC     DPTR
0211 E0                MOVX    A,@DPTR
0212 FA                MOV     R2,A
0213 A3                INC     DPTR
0214 E0                MOVX    A,@DPTR
0215 FB                MOV     R3,A
0216 C000              PUSH    AR0
0218 7400        E     MOV     A,#LOW g_meas+0CH
021A 2500        R     ADD     A,index
021C F582              MOV     DPL,A
021E E4                CLR     A
021F 3400        E     ADDC    A,#HIGH g_meas+0CH
0221 F583              MOV     DPH,A
0223 E0                MOVX    A,@DPTR
0224 FF                MOV     R7,A
0225 33                RLC     A
0226 95E0              SUBB    A,ACC
0228 FE                MOV     R6,A
0229 FD                MOV     R5,A
022A FC                MOV     R4,A
022B 7810              MOV     R0,#010H
022D 120000      E     LCALL   ?C?LSHL
0230 D000              POP     AR0
0232 EB                MOV     A,R3
0233 2F                ADD     A,R7
0234 FF                MOV     R7,A
0235 EA                MOV     A,R2
0236 3E                ADDC    A,R6
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 73  

0237 FE                MOV     R6,A
0238 E9                MOV     A,R1
0239 3D                ADDC    A,R5
023A FD                MOV     R5,A
023B E8                MOV     A,R0
023C 3C                ADDC    A,R4
023D FC                MOV     R4,A
023E 900000      R     MOV     DPTR,#value_encoder
0241 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 808
0244 E500        R     MOV     A,index
0246 25E0              ADD     A,ACC
0248 25E0              ADD     A,ACC
024A 2400        E     ADD     A,#LOW c_mem+01FH
024C F582              MOV     DPL,A
024E E4                CLR     A
024F 3400        E     ADDC    A,#HIGH c_mem+01FH
0251 F583              MOV     DPH,A
0253 E0                MOVX    A,@DPTR
0254 FC                MOV     R4,A
0255 A3                INC     DPTR
0256 E0                MOVX    A,@DPTR
0257 FD                MOV     R5,A
0258 A3                INC     DPTR
0259 E0                MOVX    A,@DPTR
025A FE                MOV     R6,A
025B A3                INC     DPTR
025C E0                MOVX    A,@DPTR
025D FF                MOV     R7,A
025E E4                CLR     A
025F FB                MOV     R3,A
0260 FA                MOV     R2,A
0261 7980              MOV     R1,#080H
0263 783F              MOV     R0,#03FH
0265 120000      E     LCALL   ?C?FPCMP3
0268 6038              JZ      ?C0134
                                           ; SOURCE LINE # 809
026A 900000      R     MOV     DPTR,#value_encoder
026D E0                MOVX    A,@DPTR
026E FC                MOV     R4,A
026F A3                INC     DPTR
0270 E0                MOVX    A,@DPTR
0271 FD                MOV     R5,A
0272 A3                INC     DPTR
0273 E0                MOVX    A,@DPTR
0274 FE                MOV     R6,A
0275 A3                INC     DPTR
0276 E0                MOVX    A,@DPTR
0277 FF                MOV     R7,A
0278 EC                MOV     A,R4
0279 120000      E     LCALL   ?C?FCASTL
027C E500        R     MOV     A,index
027E 25E0              ADD     A,ACC
0280 25E0              ADD     A,ACC
0282 2400        E     ADD     A,#LOW c_mem+01FH
0284 F582              MOV     DPL,A
0286 E4                CLR     A
0287 3400        E     ADDC    A,#HIGH c_mem+01FH
0289 F583              MOV     DPH,A
028B E0                MOVX    A,@DPTR
028C F8                MOV     R0,A
028D A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 74  

028E E0                MOVX    A,@DPTR
028F F9                MOV     R1,A
0290 A3                INC     DPTR
0291 E0                MOVX    A,@DPTR
0292 FA                MOV     R2,A
0293 A3                INC     DPTR
0294 E0                MOVX    A,@DPTR
0295 FB                MOV     R3,A
0296 120000      E     LCALL   ?C?FPMUL
0299 120000      E     LCALL   ?C?CASTF
029C 900000      R     MOV     DPTR,#value_encoder
029F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 810
02A2         ?C0134:
                                           ; SOURCE LINE # 812
02A2 900000      R     MOV     DPTR,#value_encoder
02A5 E0                MOVX    A,@DPTR
02A6 FC                MOV     R4,A
02A7 A3                INC     DPTR
02A8 E0                MOVX    A,@DPTR
02A9 FD                MOV     R5,A
02AA A3                INC     DPTR
02AB E0                MOVX    A,@DPTR
02AC FE                MOV     R6,A
02AD A3                INC     DPTR
02AE E0                MOVX    A,@DPTR
02AF FF                MOV     R7,A
02B0 E500        R     MOV     A,index
02B2 25E0              ADD     A,ACC
02B4 25E0              ADD     A,ACC
02B6 2400        E     ADD     A,#LOW g_meas
02B8 F582              MOV     DPL,A
02BA E4                CLR     A
02BB 3400        E     ADDC    A,#HIGH g_meas
02BD F583              MOV     DPH,A
02BF 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 813
02C2         ?C0125:
                                           ; SOURCE LINE # 815
02C2 E500        R     MOV     A,index
02C4 14                DEC     A
02C5 7003              JNZ     $ + 5H
02C7 020000      R     LJMP    ?C0137
02CA 14                DEC     A
02CB 7003              JNZ     $ + 5H
02CD 020000      R     LJMP    ?C0138
02D0 2402              ADD     A,#02H
02D2 6003              JZ      $ + 5H
02D4 020000      R     LJMP    ?C0135
                                           ; SOURCE LINE # 816
02D7         ?C0136:
                                           ; SOURCE LINE # 817
02D7 E4                CLR     A
02D8 7F03              MOV     R7,#03H
02DA FE                MOV     R6,A
02DB FD                MOV     R5,A
02DC FC                MOV     R4,A
02DD 900000      R     MOV     DPTR,#value_encoder
02E0 E0                MOVX    A,@DPTR
02E1 F8                MOV     R0,A
02E2 A3                INC     DPTR
02E3 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 75  

02E4 F9                MOV     R1,A
02E5 A3                INC     DPTR
02E6 E0                MOVX    A,@DPTR
02E7 FA                MOV     R2,A
02E8 A3                INC     DPTR
02E9 E0                MOVX    A,@DPTR
02EA FB                MOV     R3,A
02EB 120000      E     LCALL   ?C?LMUL
02EE 900000      R     MOV     DPTR,#v_value
02F1 E0                MOVX    A,@DPTR
02F2 F8                MOV     R0,A
02F3 A3                INC     DPTR
02F4 E0                MOVX    A,@DPTR
02F5 F9                MOV     R1,A
02F6 A3                INC     DPTR
02F7 E0                MOVX    A,@DPTR
02F8 FA                MOV     R2,A
02F9 A3                INC     DPTR
02FA E0                MOVX    A,@DPTR
02FB 2F                ADD     A,R7
02FC FF                MOV     R7,A
02FD EA                MOV     A,R2
02FE 3E                ADDC    A,R6
02FF FE                MOV     R6,A
0300 E9                MOV     A,R1
0301 3D                ADDC    A,R5
0302 FD                MOV     R5,A
0303 E8                MOV     A,R0
0304 3C                ADDC    A,R4
0305 FC                MOV     R4,A
0306 900000      R     MOV     DPTR,#vv_value
0309 E0                MOVX    A,@DPTR
030A F8                MOV     R0,A
030B A3                INC     DPTR
030C E0                MOVX    A,@DPTR
030D F9                MOV     R1,A
030E A3                INC     DPTR
030F E0                MOVX    A,@DPTR
0310 FA                MOV     R2,A
0311 A3                INC     DPTR
0312 E0                MOVX    A,@DPTR
0313 FB                MOV     R3,A
0314 C3                CLR     C
0315 EF                MOV     A,R7
0316 9B                SUBB    A,R3
0317 FF                MOV     R7,A
0318 EE                MOV     A,R6
0319 9A                SUBB    A,R2
031A FE                MOV     R6,A
031B ED                MOV     A,R5
031C 99                SUBB    A,R1
031D FD                MOV     R5,A
031E EC                MOV     A,R4
031F 98                SUBB    A,R0
0320 FC                MOV     R4,A
0321 C004              PUSH    AR4
0323 C005              PUSH    AR5
0325 C006              PUSH    AR6
0327 C007              PUSH    AR7
0329 E4                CLR     A
032A 7F03              MOV     R7,#03H
032C FE                MOV     R6,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 76  

032D FD                MOV     R5,A
032E FC                MOV     R4,A
032F 900000      R     MOV     DPTR,#vvv_value
0332 E0                MOVX    A,@DPTR
0333 F8                MOV     R0,A
0334 A3                INC     DPTR
0335 E0                MOVX    A,@DPTR
0336 F9                MOV     R1,A
0337 A3                INC     DPTR
0338 E0                MOVX    A,@DPTR
0339 FA                MOV     R2,A
033A A3                INC     DPTR
033B E0                MOVX    A,@DPTR
033C FB                MOV     R3,A
033D 120000      E     LCALL   ?C?LMUL
0340 A804              MOV     R0,AR4
0342 A905              MOV     R1,AR5
0344 AA06              MOV     R2,AR6
0346 AB07              MOV     R3,AR7
0348 D007              POP     AR7
034A D006              POP     AR6
034C D005              POP     AR5
034E D004              POP     AR4
0350 C3                CLR     C
0351 EF                MOV     A,R7
0352 9B                SUBB    A,R3
0353 FF                MOV     R7,A
0354 EE                MOV     A,R6
0355 9A                SUBB    A,R2
0356 FE                MOV     R6,A
0357 ED                MOV     A,R5
0358 99                SUBB    A,R1
0359 FD                MOV     R5,A
035A EC                MOV     A,R4
035B 98                SUBB    A,R0
035C FC                MOV     R4,A
035D E4                CLR     A
035E 7B0A              MOV     R3,#0AH
0360 FA                MOV     R2,A
0361 F9                MOV     R1,A
0362 F8                MOV     R0,A
0363 120000      E     LCALL   ?C?LMUL
0366 120000      E     LCALL   _filter_vel_1
0369 EE                MOV     A,R6
036A 33                RLC     A
036B 95E0              SUBB    A,ACC
036D FD                MOV     R5,A
036E FC                MOV     R4,A
036F 900000      R     MOV     DPTR,#speed_encoder
0372 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 818
0375 020000      R     LJMP    ?C0135
                                           ; SOURCE LINE # 819
                                           ; SOURCE LINE # 820
0378         ?C0137:
                                           ; SOURCE LINE # 821
0378 E4                CLR     A
0379 7F03              MOV     R7,#03H
037B FE                MOV     R6,A
037C FD                MOV     R5,A
037D FC                MOV     R4,A
037E 900000      R     MOV     DPTR,#value_encoder
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 77  

0381 E0                MOVX    A,@DPTR
0382 F8                MOV     R0,A
0383 A3                INC     DPTR
0384 E0                MOVX    A,@DPTR
0385 F9                MOV     R1,A
0386 A3                INC     DPTR
0387 E0                MOVX    A,@DPTR
0388 FA                MOV     R2,A
0389 A3                INC     DPTR
038A E0                MOVX    A,@DPTR
038B FB                MOV     R3,A
038C 120000      E     LCALL   ?C?LMUL
038F 900000      R     MOV     DPTR,#v_value+04H
0392 E0                MOVX    A,@DPTR
0393 F8                MOV     R0,A
0394 A3                INC     DPTR
0395 E0                MOVX    A,@DPTR
0396 F9                MOV     R1,A
0397 A3                INC     DPTR
0398 E0                MOVX    A,@DPTR
0399 FA                MOV     R2,A
039A A3                INC     DPTR
039B E0                MOVX    A,@DPTR
039C 2F                ADD     A,R7
039D FF                MOV     R7,A
039E EA                MOV     A,R2
039F 3E                ADDC    A,R6
03A0 FE                MOV     R6,A
03A1 E9                MOV     A,R1
03A2 3D                ADDC    A,R5
03A3 FD                MOV     R5,A
03A4 E8                MOV     A,R0
03A5 3C                ADDC    A,R4
03A6 FC                MOV     R4,A
03A7 900000      R     MOV     DPTR,#vv_value+04H
03AA E0                MOVX    A,@DPTR
03AB F8                MOV     R0,A
03AC A3                INC     DPTR
03AD E0                MOVX    A,@DPTR
03AE F9                MOV     R1,A
03AF A3                INC     DPTR
03B0 E0                MOVX    A,@DPTR
03B1 FA                MOV     R2,A
03B2 A3                INC     DPTR
03B3 E0                MOVX    A,@DPTR
03B4 FB                MOV     R3,A
03B5 C3                CLR     C
03B6 EF                MOV     A,R7
03B7 9B                SUBB    A,R3
03B8 FF                MOV     R7,A
03B9 EE                MOV     A,R6
03BA 9A                SUBB    A,R2
03BB FE                MOV     R6,A
03BC ED                MOV     A,R5
03BD 99                SUBB    A,R1
03BE FD                MOV     R5,A
03BF EC                MOV     A,R4
03C0 98                SUBB    A,R0
03C1 FC                MOV     R4,A
03C2 C004              PUSH    AR4
03C4 C005              PUSH    AR5
03C6 C006              PUSH    AR6
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 78  

03C8 C007              PUSH    AR7
03CA E4                CLR     A
03CB 7F03              MOV     R7,#03H
03CD FE                MOV     R6,A
03CE FD                MOV     R5,A
03CF FC                MOV     R4,A
03D0 900000      R     MOV     DPTR,#vvv_value+04H
03D3 E0                MOVX    A,@DPTR
03D4 F8                MOV     R0,A
03D5 A3                INC     DPTR
03D6 E0                MOVX    A,@DPTR
03D7 F9                MOV     R1,A
03D8 A3                INC     DPTR
03D9 E0                MOVX    A,@DPTR
03DA FA                MOV     R2,A
03DB A3                INC     DPTR
03DC E0                MOVX    A,@DPTR
03DD FB                MOV     R3,A
03DE 120000      E     LCALL   ?C?LMUL
03E1 A804              MOV     R0,AR4
03E3 A905              MOV     R1,AR5
03E5 AA06              MOV     R2,AR6
03E7 AB07              MOV     R3,AR7
03E9 D007              POP     AR7
03EB D006              POP     AR6
03ED D005              POP     AR5
03EF D004              POP     AR4
03F1 C3                CLR     C
03F2 EF                MOV     A,R7
03F3 9B                SUBB    A,R3
03F4 FF                MOV     R7,A
03F5 EE                MOV     A,R6
03F6 9A                SUBB    A,R2
03F7 FE                MOV     R6,A
03F8 ED                MOV     A,R5
03F9 99                SUBB    A,R1
03FA FD                MOV     R5,A
03FB EC                MOV     A,R4
03FC 98                SUBB    A,R0
03FD FC                MOV     R4,A
03FE E4                CLR     A
03FF 7B0A              MOV     R3,#0AH
0401 FA                MOV     R2,A
0402 F9                MOV     R1,A
0403 F8                MOV     R0,A
0404 120000      E     LCALL   ?C?LMUL
0407 120000      E     LCALL   _filter_vel_2
040A EE                MOV     A,R6
040B 33                RLC     A
040C 95E0              SUBB    A,ACC
040E FD                MOV     R5,A
040F FC                MOV     R4,A
0410 900000      R     MOV     DPTR,#speed_encoder
0413 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 822
0416 020000      R     LJMP    ?C0135
                                           ; SOURCE LINE # 823
                                           ; SOURCE LINE # 824
0419         ?C0138:
                                           ; SOURCE LINE # 825
0419 E4                CLR     A
041A 7F03              MOV     R7,#03H
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 79  

041C FE                MOV     R6,A
041D FD                MOV     R5,A
041E FC                MOV     R4,A
041F 900000      R     MOV     DPTR,#value_encoder
0422 E0                MOVX    A,@DPTR
0423 F8                MOV     R0,A
0424 A3                INC     DPTR
0425 E0                MOVX    A,@DPTR
0426 F9                MOV     R1,A
0427 A3                INC     DPTR
0428 E0                MOVX    A,@DPTR
0429 FA                MOV     R2,A
042A A3                INC     DPTR
042B E0                MOVX    A,@DPTR
042C FB                MOV     R3,A
042D 120000      E     LCALL   ?C?LMUL
0430 900000      R     MOV     DPTR,#v_value+08H
0433 E0                MOVX    A,@DPTR
0434 F8                MOV     R0,A
0435 A3                INC     DPTR
0436 E0                MOVX    A,@DPTR
0437 F9                MOV     R1,A
0438 A3                INC     DPTR
0439 E0                MOVX    A,@DPTR
043A FA                MOV     R2,A
043B A3                INC     DPTR
043C E0                MOVX    A,@DPTR
043D 2F                ADD     A,R7
043E FF                MOV     R7,A
043F EA                MOV     A,R2
0440 3E                ADDC    A,R6
0441 FE                MOV     R6,A
0442 E9                MOV     A,R1
0443 3D                ADDC    A,R5
0444 FD                MOV     R5,A
0445 E8                MOV     A,R0
0446 3C                ADDC    A,R4
0447 FC                MOV     R4,A
0448 900000      R     MOV     DPTR,#vv_value+08H
044B E0                MOVX    A,@DPTR
044C F8                MOV     R0,A
044D A3                INC     DPTR
044E E0                MOVX    A,@DPTR
044F F9                MOV     R1,A
0450 A3                INC     DPTR
0451 E0                MOVX    A,@DPTR
0452 FA                MOV     R2,A
0453 A3                INC     DPTR
0454 E0                MOVX    A,@DPTR
0455 FB                MOV     R3,A
0456 C3                CLR     C
0457 EF                MOV     A,R7
0458 9B                SUBB    A,R3
0459 FF                MOV     R7,A
045A EE                MOV     A,R6
045B 9A                SUBB    A,R2
045C FE                MOV     R6,A
045D ED                MOV     A,R5
045E 99                SUBB    A,R1
045F FD                MOV     R5,A
0460 EC                MOV     A,R4
0461 98                SUBB    A,R0
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 80  

0462 FC                MOV     R4,A
0463 C004              PUSH    AR4
0465 C005              PUSH    AR5
0467 C006              PUSH    AR6
0469 C007              PUSH    AR7
046B E4                CLR     A
046C 7F03              MOV     R7,#03H
046E FE                MOV     R6,A
046F FD                MOV     R5,A
0470 FC                MOV     R4,A
0471 900000      R     MOV     DPTR,#vvv_value+08H
0474 E0                MOVX    A,@DPTR
0475 F8                MOV     R0,A
0476 A3                INC     DPTR
0477 E0                MOVX    A,@DPTR
0478 F9                MOV     R1,A
0479 A3                INC     DPTR
047A E0                MOVX    A,@DPTR
047B FA                MOV     R2,A
047C A3                INC     DPTR
047D E0                MOVX    A,@DPTR
047E FB                MOV     R3,A
047F 120000      E     LCALL   ?C?LMUL
0482 A804              MOV     R0,AR4
0484 A905              MOV     R1,AR5
0486 AA06              MOV     R2,AR6
0488 AB07              MOV     R3,AR7
048A D007              POP     AR7
048C D006              POP     AR6
048E D005              POP     AR5
0490 D004              POP     AR4
0492 C3                CLR     C
0493 EF                MOV     A,R7
0494 9B                SUBB    A,R3
0495 FF                MOV     R7,A
0496 EE                MOV     A,R6
0497 9A                SUBB    A,R2
0498 FE                MOV     R6,A
0499 ED                MOV     A,R5
049A 99                SUBB    A,R1
049B FD                MOV     R5,A
049C EC                MOV     A,R4
049D 98                SUBB    A,R0
049E FC                MOV     R4,A
049F E4                CLR     A
04A0 7B0A              MOV     R3,#0AH
04A2 FA                MOV     R2,A
04A3 F9                MOV     R1,A
04A4 F8                MOV     R0,A
04A5 120000      E     LCALL   ?C?LMUL
04A8 120000      E     LCALL   _filter_vel_3
04AB EE                MOV     A,R6
04AC 33                RLC     A
04AD 95E0              SUBB    A,ACC
04AF FD                MOV     R5,A
04B0 FC                MOV     R4,A
04B1 900000      R     MOV     DPTR,#speed_encoder
04B4 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 826
                                           ; SOURCE LINE # 827
                                           ; SOURCE LINE # 828
04B7         ?C0135:
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 81  

                                           ; SOURCE LINE # 830
04B7 900000      R     MOV     DPTR,#speed_encoder
04BA E0                MOVX    A,@DPTR
04BB FC                MOV     R4,A
04BC A3                INC     DPTR
04BD E0                MOVX    A,@DPTR
04BE FD                MOV     R5,A
04BF A3                INC     DPTR
04C0 E0                MOVX    A,@DPTR
04C1 FE                MOV     R6,A
04C2 A3                INC     DPTR
04C3 E0                MOVX    A,@DPTR
04C4 FF                MOV     R7,A
04C5 E500        R     MOV     A,index
04C7 25E0              ADD     A,ACC
04C9 25E0              ADD     A,ACC
04CB 2400        E     ADD     A,#LOW g_meas+017H
04CD F582              MOV     DPL,A
04CF E4                CLR     A
04D0 3400        E     ADDC    A,#HIGH g_meas+017H
04D2 F583              MOV     DPH,A
04D4 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 833
04D7 E500        R     MOV     A,index
04D9 14                DEC     A
04DA 7003              JNZ     $ + 5H
04DC 020000      R     LJMP    ?C0141
04DF 14                DEC     A
04E0 7003              JNZ     $ + 5H
04E2 020000      R     LJMP    ?C0142
04E5 2402              ADD     A,#02H
04E7 6003              JZ      $ + 5H
04E9 020000      R     LJMP    ?C0139
                                           ; SOURCE LINE # 834
04EC         ?C0140:
                                           ; SOURCE LINE # 835
04EC E4                CLR     A
04ED 7F03              MOV     R7,#03H
04EF FE                MOV     R6,A
04F0 FD                MOV     R5,A
04F1 FC                MOV     R4,A
04F2 900000      R     MOV     DPTR,#speed_encoder
04F5 E0                MOVX    A,@DPTR
04F6 F8                MOV     R0,A
04F7 A3                INC     DPTR
04F8 E0                MOVX    A,@DPTR
04F9 F9                MOV     R1,A
04FA A3                INC     DPTR
04FB E0                MOVX    A,@DPTR
04FC FA                MOV     R2,A
04FD A3                INC     DPTR
04FE E0                MOVX    A,@DPTR
04FF FB                MOV     R3,A
0500 120000      E     LCALL   ?C?LMUL
0503 900000      R     MOV     DPTR,#a_value
0506 E0                MOVX    A,@DPTR
0507 F8                MOV     R0,A
0508 A3                INC     DPTR
0509 E0                MOVX    A,@DPTR
050A F9                MOV     R1,A
050B A3                INC     DPTR
050C E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 82  

050D FA                MOV     R2,A
050E A3                INC     DPTR
050F E0                MOVX    A,@DPTR
0510 2F                ADD     A,R7
0511 FF                MOV     R7,A
0512 EA                MOV     A,R2
0513 3E                ADDC    A,R6
0514 FE                MOV     R6,A
0515 E9                MOV     A,R1
0516 3D                ADDC    A,R5
0517 FD                MOV     R5,A
0518 E8                MOV     A,R0
0519 3C                ADDC    A,R4
051A FC                MOV     R4,A
051B 900000      R     MOV     DPTR,#aa_value
051E E0                MOVX    A,@DPTR
051F F8                MOV     R0,A
0520 A3                INC     DPTR
0521 E0                MOVX    A,@DPTR
0522 F9                MOV     R1,A
0523 A3                INC     DPTR
0524 E0                MOVX    A,@DPTR
0525 FA                MOV     R2,A
0526 A3                INC     DPTR
0527 E0                MOVX    A,@DPTR
0528 FB                MOV     R3,A
0529 C3                CLR     C
052A EF                MOV     A,R7
052B 9B                SUBB    A,R3
052C FF                MOV     R7,A
052D EE                MOV     A,R6
052E 9A                SUBB    A,R2
052F FE                MOV     R6,A
0530 ED                MOV     A,R5
0531 99                SUBB    A,R1
0532 FD                MOV     R5,A
0533 EC                MOV     A,R4
0534 98                SUBB    A,R0
0535 FC                MOV     R4,A
0536 C004              PUSH    AR4
0538 C005              PUSH    AR5
053A C006              PUSH    AR6
053C C007              PUSH    AR7
053E E4                CLR     A
053F 7F03              MOV     R7,#03H
0541 FE                MOV     R6,A
0542 FD                MOV     R5,A
0543 FC                MOV     R4,A
0544 900000      R     MOV     DPTR,#aaa_value
0547 E0                MOVX    A,@DPTR
0548 F8                MOV     R0,A
0549 A3                INC     DPTR
054A E0                MOVX    A,@DPTR
054B F9                MOV     R1,A
054C A3                INC     DPTR
054D E0                MOVX    A,@DPTR
054E FA                MOV     R2,A
054F A3                INC     DPTR
0550 E0                MOVX    A,@DPTR
0551 FB                MOV     R3,A
0552 120000      E     LCALL   ?C?LMUL
0555 A804              MOV     R0,AR4
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 83  

0557 A905              MOV     R1,AR5
0559 AA06              MOV     R2,AR6
055B AB07              MOV     R3,AR7
055D D007              POP     AR7
055F D006              POP     AR6
0561 D005              POP     AR5
0563 D004              POP     AR4
0565 C3                CLR     C
0566 EF                MOV     A,R7
0567 9B                SUBB    A,R3
0568 FF                MOV     R7,A
0569 EE                MOV     A,R6
056A 9A                SUBB    A,R2
056B FE                MOV     R6,A
056C ED                MOV     A,R5
056D 99                SUBB    A,R1
056E FD                MOV     R5,A
056F EC                MOV     A,R4
0570 98                SUBB    A,R0
0571 FC                MOV     R4,A
0572 E4                CLR     A
0573 7B0A              MOV     R3,#0AH
0575 FA                MOV     R2,A
0576 F9                MOV     R1,A
0577 F8                MOV     R0,A
0578 120000      E     LCALL   ?C?LMUL
057B 120000      E     LCALL   _filter_acc_1
057E EE                MOV     A,R6
057F 33                RLC     A
0580 95E0              SUBB    A,ACC
0582 FD                MOV     R5,A
0583 FC                MOV     R4,A
0584 900000      R     MOV     DPTR,#accel_encoder
0587 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 836
058A 020000      R     LJMP    ?C0139
                                           ; SOURCE LINE # 838
058D         ?C0141:
                                           ; SOURCE LINE # 839
058D E4                CLR     A
058E 7F03              MOV     R7,#03H
0590 FE                MOV     R6,A
0591 FD                MOV     R5,A
0592 FC                MOV     R4,A
0593 900000      R     MOV     DPTR,#speed_encoder
0596 E0                MOVX    A,@DPTR
0597 F8                MOV     R0,A
0598 A3                INC     DPTR
0599 E0                MOVX    A,@DPTR
059A F9                MOV     R1,A
059B A3                INC     DPTR
059C E0                MOVX    A,@DPTR
059D FA                MOV     R2,A
059E A3                INC     DPTR
059F E0                MOVX    A,@DPTR
05A0 FB                MOV     R3,A
05A1 120000      E     LCALL   ?C?LMUL
05A4 900000      R     MOV     DPTR,#a_value+04H
05A7 E0                MOVX    A,@DPTR
05A8 F8                MOV     R0,A
05A9 A3                INC     DPTR
05AA E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 84  

05AB F9                MOV     R1,A
05AC A3                INC     DPTR
05AD E0                MOVX    A,@DPTR
05AE FA                MOV     R2,A
05AF A3                INC     DPTR
05B0 E0                MOVX    A,@DPTR
05B1 2F                ADD     A,R7
05B2 FF                MOV     R7,A
05B3 EA                MOV     A,R2
05B4 3E                ADDC    A,R6
05B5 FE                MOV     R6,A
05B6 E9                MOV     A,R1
05B7 3D                ADDC    A,R5
05B8 FD                MOV     R5,A
05B9 E8                MOV     A,R0
05BA 3C                ADDC    A,R4
05BB FC                MOV     R4,A
05BC 900000      R     MOV     DPTR,#aa_value+04H
05BF E0                MOVX    A,@DPTR
05C0 F8                MOV     R0,A
05C1 A3                INC     DPTR
05C2 E0                MOVX    A,@DPTR
05C3 F9                MOV     R1,A
05C4 A3                INC     DPTR
05C5 E0                MOVX    A,@DPTR
05C6 FA                MOV     R2,A
05C7 A3                INC     DPTR
05C8 E0                MOVX    A,@DPTR
05C9 FB                MOV     R3,A
05CA C3                CLR     C
05CB EF                MOV     A,R7
05CC 9B                SUBB    A,R3
05CD FF                MOV     R7,A
05CE EE                MOV     A,R6
05CF 9A                SUBB    A,R2
05D0 FE                MOV     R6,A
05D1 ED                MOV     A,R5
05D2 99                SUBB    A,R1
05D3 FD                MOV     R5,A
05D4 EC                MOV     A,R4
05D5 98                SUBB    A,R0
05D6 FC                MOV     R4,A
05D7 C004              PUSH    AR4
05D9 C005              PUSH    AR5
05DB C006              PUSH    AR6
05DD C007              PUSH    AR7
05DF E4                CLR     A
05E0 7F03              MOV     R7,#03H
05E2 FE                MOV     R6,A
05E3 FD                MOV     R5,A
05E4 FC                MOV     R4,A
05E5 900000      R     MOV     DPTR,#aaa_value+04H
05E8 E0                MOVX    A,@DPTR
05E9 F8                MOV     R0,A
05EA A3                INC     DPTR
05EB E0                MOVX    A,@DPTR
05EC F9                MOV     R1,A
05ED A3                INC     DPTR
05EE E0                MOVX    A,@DPTR
05EF FA                MOV     R2,A
05F0 A3                INC     DPTR
05F1 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 85  

05F2 FB                MOV     R3,A
05F3 120000      E     LCALL   ?C?LMUL
05F6 A804              MOV     R0,AR4
05F8 A905              MOV     R1,AR5
05FA AA06              MOV     R2,AR6
05FC AB07              MOV     R3,AR7
05FE D007              POP     AR7
0600 D006              POP     AR6
0602 D005              POP     AR5
0604 D004              POP     AR4
0606 C3                CLR     C
0607 EF                MOV     A,R7
0608 9B                SUBB    A,R3
0609 FF                MOV     R7,A
060A EE                MOV     A,R6
060B 9A                SUBB    A,R2
060C FE                MOV     R6,A
060D ED                MOV     A,R5
060E 99                SUBB    A,R1
060F FD                MOV     R5,A
0610 EC                MOV     A,R4
0611 98                SUBB    A,R0
0612 FC                MOV     R4,A
0613 E4                CLR     A
0614 7B0A              MOV     R3,#0AH
0616 FA                MOV     R2,A
0617 F9                MOV     R1,A
0618 F8                MOV     R0,A
0619 120000      E     LCALL   ?C?LMUL
061C 120000      E     LCALL   _filter_acc_2
061F EE                MOV     A,R6
0620 33                RLC     A
0621 95E0              SUBB    A,ACC
0623 FD                MOV     R5,A
0624 FC                MOV     R4,A
0625 900000      R     MOV     DPTR,#accel_encoder
0628 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 840
062B 020000      R     LJMP    ?C0139
                                           ; SOURCE LINE # 842
062E         ?C0142:
                                           ; SOURCE LINE # 843
062E E4                CLR     A
062F 7F03              MOV     R7,#03H
0631 FE                MOV     R6,A
0632 FD                MOV     R5,A
0633 FC                MOV     R4,A
0634 900000      R     MOV     DPTR,#speed_encoder
0637 E0                MOVX    A,@DPTR
0638 F8                MOV     R0,A
0639 A3                INC     DPTR
063A E0                MOVX    A,@DPTR
063B F9                MOV     R1,A
063C A3                INC     DPTR
063D E0                MOVX    A,@DPTR
063E FA                MOV     R2,A
063F A3                INC     DPTR
0640 E0                MOVX    A,@DPTR
0641 FB                MOV     R3,A
0642 120000      E     LCALL   ?C?LMUL
0645 900000      R     MOV     DPTR,#a_value+08H
0648 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 86  

0649 F8                MOV     R0,A
064A A3                INC     DPTR
064B E0                MOVX    A,@DPTR
064C F9                MOV     R1,A
064D A3                INC     DPTR
064E E0                MOVX    A,@DPTR
064F FA                MOV     R2,A
0650 A3                INC     DPTR
0651 E0                MOVX    A,@DPTR
0652 2F                ADD     A,R7
0653 FF                MOV     R7,A
0654 EA                MOV     A,R2
0655 3E                ADDC    A,R6
0656 FE                MOV     R6,A
0657 E9                MOV     A,R1
0658 3D                ADDC    A,R5
0659 FD                MOV     R5,A
065A E8                MOV     A,R0
065B 3C                ADDC    A,R4
065C FC                MOV     R4,A
065D 900000      R     MOV     DPTR,#aa_value+08H
0660 E0                MOVX    A,@DPTR
0661 F8                MOV     R0,A
0662 A3                INC     DPTR
0663 E0                MOVX    A,@DPTR
0664 F9                MOV     R1,A
0665 A3                INC     DPTR
0666 E0                MOVX    A,@DPTR
0667 FA                MOV     R2,A
0668 A3                INC     DPTR
0669 E0                MOVX    A,@DPTR
066A FB                MOV     R3,A
066B C3                CLR     C
066C EF                MOV     A,R7
066D 9B                SUBB    A,R3
066E FF                MOV     R7,A
066F EE                MOV     A,R6
0670 9A                SUBB    A,R2
0671 FE                MOV     R6,A
0672 ED                MOV     A,R5
0673 99                SUBB    A,R1
0674 FD                MOV     R5,A
0675 EC                MOV     A,R4
0676 98                SUBB    A,R0
0677 FC                MOV     R4,A
0678 C004              PUSH    AR4
067A C005              PUSH    AR5
067C C006              PUSH    AR6
067E C007              PUSH    AR7
0680 E4                CLR     A
0681 7F03              MOV     R7,#03H
0683 FE                MOV     R6,A
0684 FD                MOV     R5,A
0685 FC                MOV     R4,A
0686 900000      R     MOV     DPTR,#aaa_value+08H
0689 E0                MOVX    A,@DPTR
068A F8                MOV     R0,A
068B A3                INC     DPTR
068C E0                MOVX    A,@DPTR
068D F9                MOV     R1,A
068E A3                INC     DPTR
068F E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 87  

0690 FA                MOV     R2,A
0691 A3                INC     DPTR
0692 E0                MOVX    A,@DPTR
0693 FB                MOV     R3,A
0694 120000      E     LCALL   ?C?LMUL
0697 A804              MOV     R0,AR4
0699 A905              MOV     R1,AR5
069B AA06              MOV     R2,AR6
069D AB07              MOV     R3,AR7
069F D007              POP     AR7
06A1 D006              POP     AR6
06A3 D005              POP     AR5
06A5 D004              POP     AR4
06A7 C3                CLR     C
06A8 EF                MOV     A,R7
06A9 9B                SUBB    A,R3
06AA FF                MOV     R7,A
06AB EE                MOV     A,R6
06AC 9A                SUBB    A,R2
06AD FE                MOV     R6,A
06AE ED                MOV     A,R5
06AF 99                SUBB    A,R1
06B0 FD                MOV     R5,A
06B1 EC                MOV     A,R4
06B2 98                SUBB    A,R0
06B3 FC                MOV     R4,A
06B4 E4                CLR     A
06B5 7B0A              MOV     R3,#0AH
06B7 FA                MOV     R2,A
06B8 F9                MOV     R1,A
06B9 F8                MOV     R0,A
06BA 120000      E     LCALL   ?C?LMUL
06BD 120000      E     LCALL   _filter_acc_3
06C0 EE                MOV     A,R6
06C1 33                RLC     A
06C2 95E0              SUBB    A,ACC
06C4 FD                MOV     R5,A
06C5 FC                MOV     R4,A
06C6 900000      R     MOV     DPTR,#accel_encoder
06C9 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 844
                                           ; SOURCE LINE # 845
06CC         ?C0139:
                                           ; SOURCE LINE # 847
06CC 900000      R     MOV     DPTR,#accel_encoder
06CF E0                MOVX    A,@DPTR
06D0 FC                MOV     R4,A
06D1 A3                INC     DPTR
06D2 E0                MOVX    A,@DPTR
06D3 FD                MOV     R5,A
06D4 A3                INC     DPTR
06D5 E0                MOVX    A,@DPTR
06D6 FE                MOV     R6,A
06D7 A3                INC     DPTR
06D8 E0                MOVX    A,@DPTR
06D9 FF                MOV     R7,A
06DA E500        R     MOV     A,index
06DC 25E0              ADD     A,ACC
06DE 25E0              ADD     A,ACC
06E0 2400        E     ADD     A,#LOW g_meas+023H
06E2 F582              MOV     DPL,A
06E4 E4                CLR     A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 88  

06E5 3400        E     ADDC    A,#HIGH g_meas+023H
06E7 F583              MOV     DPH,A
06E9 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 850
06EC E500        R     MOV     A,index
06EE 25E0              ADD     A,ACC
06F0 25E0              ADD     A,ACC
06F2 2400        R     ADD     A,#LOW vv_value
06F4 F582              MOV     DPL,A
06F6 E4                CLR     A
06F7 3400        R     ADDC    A,#HIGH vv_value
06F9 F583              MOV     DPH,A
06FB E0                MOVX    A,@DPTR
06FC FC                MOV     R4,A
06FD A3                INC     DPTR
06FE E0                MOVX    A,@DPTR
06FF FD                MOV     R5,A
0700 A3                INC     DPTR
0701 E0                MOVX    A,@DPTR
0702 FE                MOV     R6,A
0703 A3                INC     DPTR
0704 E0                MOVX    A,@DPTR
0705 FF                MOV     R7,A
0706 E500        R     MOV     A,index
0708 25E0              ADD     A,ACC
070A 25E0              ADD     A,ACC
070C 2400        R     ADD     A,#LOW vvv_value
070E F582              MOV     DPL,A
0710 E4                CLR     A
0711 3400        R     ADDC    A,#HIGH vvv_value
0713 F583              MOV     DPH,A
0715 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 851
0718 E500        R     MOV     A,index
071A 25E0              ADD     A,ACC
071C 25E0              ADD     A,ACC
071E 2400        R     ADD     A,#LOW v_value
0720 F582              MOV     DPL,A
0722 E4                CLR     A
0723 3400        R     ADDC    A,#HIGH v_value
0725 F583              MOV     DPH,A
0727 E0                MOVX    A,@DPTR
0728 FC                MOV     R4,A
0729 A3                INC     DPTR
072A E0                MOVX    A,@DPTR
072B FD                MOV     R5,A
072C A3                INC     DPTR
072D E0                MOVX    A,@DPTR
072E FE                MOV     R6,A
072F A3                INC     DPTR
0730 E0                MOVX    A,@DPTR
0731 FF                MOV     R7,A
0732 E500        R     MOV     A,index
0734 25E0              ADD     A,ACC
0736 25E0              ADD     A,ACC
0738 2400        R     ADD     A,#LOW vv_value
073A F582              MOV     DPL,A
073C E4                CLR     A
073D 3400        R     ADDC    A,#HIGH vv_value
073F F583              MOV     DPH,A
0741 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 852
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 89  

0744 900000      R     MOV     DPTR,#value_encoder
0747 E0                MOVX    A,@DPTR
0748 FC                MOV     R4,A
0749 A3                INC     DPTR
074A E0                MOVX    A,@DPTR
074B FD                MOV     R5,A
074C A3                INC     DPTR
074D E0                MOVX    A,@DPTR
074E FE                MOV     R6,A
074F A3                INC     DPTR
0750 E0                MOVX    A,@DPTR
0751 FF                MOV     R7,A
0752 E500        R     MOV     A,index
0754 25E0              ADD     A,ACC
0756 25E0              ADD     A,ACC
0758 2400        R     ADD     A,#LOW v_value
075A F582              MOV     DPL,A
075C E4                CLR     A
075D 3400        R     ADDC    A,#HIGH v_value
075F F583              MOV     DPH,A
0761 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 854
0764 E500        R     MOV     A,index
0766 25E0              ADD     A,ACC
0768 25E0              ADD     A,ACC
076A 2400        R     ADD     A,#LOW aa_value
076C F582              MOV     DPL,A
076E E4                CLR     A
076F 3400        R     ADDC    A,#HIGH aa_value
0771 F583              MOV     DPH,A
0773 E0                MOVX    A,@DPTR
0774 FC                MOV     R4,A
0775 A3                INC     DPTR
0776 E0                MOVX    A,@DPTR
0777 FD                MOV     R5,A
0778 A3                INC     DPTR
0779 E0                MOVX    A,@DPTR
077A FE                MOV     R6,A
077B A3                INC     DPTR
077C E0                MOVX    A,@DPTR
077D FF                MOV     R7,A
077E E500        R     MOV     A,index
0780 25E0              ADD     A,ACC
0782 25E0              ADD     A,ACC
0784 2400        R     ADD     A,#LOW aaa_value
0786 F582              MOV     DPL,A
0788 E4                CLR     A
0789 3400        R     ADDC    A,#HIGH aaa_value
078B F583              MOV     DPH,A
078D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 855
0790 E500        R     MOV     A,index
0792 25E0              ADD     A,ACC
0794 25E0              ADD     A,ACC
0796 2400        R     ADD     A,#LOW a_value
0798 F582              MOV     DPL,A
079A E4                CLR     A
079B 3400        R     ADDC    A,#HIGH a_value
079D F583              MOV     DPH,A
079F E0                MOVX    A,@DPTR
07A0 FC                MOV     R4,A
07A1 A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 90  

07A2 E0                MOVX    A,@DPTR
07A3 FD                MOV     R5,A
07A4 A3                INC     DPTR
07A5 E0                MOVX    A,@DPTR
07A6 FE                MOV     R6,A
07A7 A3                INC     DPTR
07A8 E0                MOVX    A,@DPTR
07A9 FF                MOV     R7,A
07AA E500        R     MOV     A,index
07AC 25E0              ADD     A,ACC
07AE 25E0              ADD     A,ACC
07B0 2400        R     ADD     A,#LOW aa_value
07B2 F582              MOV     DPL,A
07B4 E4                CLR     A
07B5 3400        R     ADDC    A,#HIGH aa_value
07B7 F583              MOV     DPH,A
07B9 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 856
07BC 900000      R     MOV     DPTR,#speed_encoder
07BF E0                MOVX    A,@DPTR
07C0 FC                MOV     R4,A
07C1 A3                INC     DPTR
07C2 E0                MOVX    A,@DPTR
07C3 FD                MOV     R5,A
07C4 A3                INC     DPTR
07C5 E0                MOVX    A,@DPTR
07C6 FE                MOV     R6,A
07C7 A3                INC     DPTR
07C8 E0                MOVX    A,@DPTR
07C9 FF                MOV     R7,A
07CA E500        R     MOV     A,index
07CC 25E0              ADD     A,ACC
07CE 25E0              ADD     A,ACC
07D0 2400        R     ADD     A,#LOW a_value
07D2 F582              MOV     DPL,A
07D4 E4                CLR     A
07D5 3400        R     ADDC    A,#HIGH a_value
07D7 F583              MOV     DPH,A
07D9 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 860
07DC 20005F            JB      pos_reconstruct,?C0117
                                           ; SOURCE LINE # 861
07DF 900000      R     MOV     DPTR,#one_time_execute
07E2 E0                MOVX    A,@DPTR
07E3 C3                CLR     C
07E4 9422              SUBB    A,#022H
07E6 5004              JNC     ?C0144
                                           ; SOURCE LINE # 862
07E8 E0                MOVX    A,@DPTR
07E9 04                INC     A
07EA F0                MOVX    @DPTR,A
07EB 22                RET     
07EC         ?C0144:
                                           ; SOURCE LINE # 863
                                           ; SOURCE LINE # 865
07EC 900000      E     MOV     DPTR,#g_meas
07EF E0                MOVX    A,@DPTR
07F0 F8                MOV     R0,A
07F1 A3                INC     DPTR
07F2 E0                MOVX    A,@DPTR
07F3 F9                MOV     R1,A
07F4 A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 91  

07F5 E0                MOVX    A,@DPTR
07F6 FA                MOV     R2,A
07F7 A3                INC     DPTR
07F8 E0                MOVX    A,@DPTR
07F9 FB                MOV     R3,A
07FA C000              PUSH    AR0
07FC 900000      E     MOV     DPTR,#g_meas+0CH
07FF E0                MOVX    A,@DPTR
0800 FF                MOV     R7,A
0801 33                RLC     A
0802 95E0              SUBB    A,ACC
0804 FE                MOV     R6,A
0805 FD                MOV     R5,A
0806 FC                MOV     R4,A
0807 7810              MOV     R0,#010H
0809 120000      E     LCALL   ?C?LSHL
080C D000              POP     AR0
080E EB                MOV     A,R3
080F 2F                ADD     A,R7
0810 FF                MOV     R7,A
0811 EA                MOV     A,R2
0812 3E                ADDC    A,R6
0813 FE                MOV     R6,A
0814 E9                MOV     A,R1
0815 3D                ADDC    A,R5
0816 FD                MOV     R5,A
0817 E8                MOV     A,R0
0818 3C                ADDC    A,R4
0819 FC                MOV     R4,A
081A 900000      E     MOV     DPTR,#g_meas
081D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 868
0820 900000      E     MOV     DPTR,#g_meas
0823 E0                MOVX    A,@DPTR
0824 FC                MOV     R4,A
0825 A3                INC     DPTR
0826 E0                MOVX    A,@DPTR
0827 FD                MOV     R5,A
0828 A3                INC     DPTR
0829 E0                MOVX    A,@DPTR
082A FE                MOV     R6,A
082B A3                INC     DPTR
082C E0                MOVX    A,@DPTR
082D FF                MOV     R7,A
082E 900000      E     MOV     DPTR,#g_refNew
0831 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 870
0834 900000      E     MOV     DPTR,#g_ref+018H
0837 E0                MOVX    A,@DPTR
0838 FF                MOV     R7,A
0839 120000      E     LCALL   _MOTOR_ON_OFF_Write
                                           ; SOURCE LINE # 872
083C D200        R     SETB    pos_reconstruct
                                           ; SOURCE LINE # 873
                                           ; SOURCE LINE # 874
                                           ; SOURCE LINE # 875
083E         ?C0117:
083E 22                RET     
             ; FUNCTION _encoder_reading (END)

             ; FUNCTION analog_read_end (BEGIN)
                                           ; SOURCE LINE # 881
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 92  

0000         ?C0146:
                                           ; SOURCE LINE # 924
0000 120000      E     LCALL   ADC_STATUS_Read
0003 EF                MOV     A,R7
0004 700A              JNZ     ?C0147
                                           ; SOURCE LINE # 925
0006 3000F7            JNB     interrupt_flag,?C0146
                                           ; SOURCE LINE # 926
0009 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 927
000B 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 928
                                           ; SOURCE LINE # 929
000E 80F0              SJMP    ?C0146
0010         ?C0147:
                                           ; SOURCE LINE # 932
0010 900000      E     MOV     DPTR,#ADC_buf+01H
0013 E0                MOVX    A,@DPTR
0014 249A              ADD     A,#09AH
0016 FF                MOV     R7,A
0017 900000      E     MOV     DPTR,#ADC_buf
001A E0                MOVX    A,@DPTR
001B 34F9              ADDC    A,#0F9H
001D FE                MOV     R6,A
001E 33                RLC     A
001F 95E0              SUBB    A,ACC
0021 FD                MOV     R5,A
0022 FC                MOV     R4,A
0023 E4                CLR     A
0024 7BA0              MOV     R3,#0A0H
0026 7A07              MOV     R2,#07H
0028 F9                MOV     R1,A
0029 F8                MOV     R0,A
002A 120000      E     LCALL   ?C?LMUL
002D 7807              MOV     R0,#07H
002F 120000      E     LCALL   ?C?SLSHR
0032 900000      E     MOV     DPTR,#dev_tension
0035 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 934
0038 300005            JNB     interrupt_flag,?C0149
                                           ; SOURCE LINE # 935
003B C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 936
003D 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 937
0040         ?C0149:
                                           ; SOURCE LINE # 939
0040 900000      E     MOV     DPTR,#first_tension_valid
0043 E0                MOVX    A,@DPTR
0044 6077              JZ      ?C0150
0046 300074            JNB     tension_valid,?C0150
                                           ; SOURCE LINE # 940
0049 900000      R     MOV     DPTR,#count
004C E0                MOVX    A,@DPTR
004D 04                INC     A
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 942
004F E0                MOVX    A,@DPTR
0050 64E8              XRL     A,#0E8H
0052 7002              JNZ     ?C0264
0054 7403              MOV     A,#03H
0056         ?C0264:
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 93  

0056 7065              JNZ     ?C0150
                                           ; SOURCE LINE # 943
0058 7F28              MOV     R7,#028H
005A 7E23              MOV     R6,#023H
005C FD                MOV     R5,A
005D FC                MOV     R4,A
005E 900000      E     MOV     DPTR,#dev_tension
0061 E0                MOVX    A,@DPTR
0062 F8                MOV     R0,A
0063 A3                INC     DPTR
0064 E0                MOVX    A,@DPTR
0065 F9                MOV     R1,A
0066 A3                INC     DPTR
0067 E0                MOVX    A,@DPTR
0068 FA                MOV     R2,A
0069 A3                INC     DPTR
006A E0                MOVX    A,@DPTR
006B FB                MOV     R3,A
006C C3                CLR     C
006D 120000      E     LCALL   ?C?SLCMP
0070 500F              JNC     ?C0152
                                           ; SOURCE LINE # 944
0072 E4                CLR     A
0073 7F40              MOV     R7,#040H
0075 7E1F              MOV     R6,#01FH
0077 FD                MOV     R5,A
0078 FC                MOV     R4,A
0079 900000      E     MOV     DPTR,#pow_tension
007C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 945
007F 8037              SJMP    ?C0153
0081         ?C0152:
                                           ; SOURCE LINE # 946
                                           ; SOURCE LINE # 947
0081 E4                CLR     A
0082 7FC8              MOV     R7,#0C8H
0084 7E32              MOV     R6,#032H
0086 FD                MOV     R5,A
0087 FC                MOV     R4,A
0088 900000      E     MOV     DPTR,#dev_tension
008B E0                MOVX    A,@DPTR
008C F8                MOV     R0,A
008D A3                INC     DPTR
008E E0                MOVX    A,@DPTR
008F F9                MOV     R1,A
0090 A3                INC     DPTR
0091 E0                MOVX    A,@DPTR
0092 FA                MOV     R2,A
0093 A3                INC     DPTR
0094 E0                MOVX    A,@DPTR
0095 FB                MOV     R3,A
0096 C3                CLR     C
0097 120000      E     LCALL   ?C?SLCMP
009A 500F              JNC     ?C0154
                                           ; SOURCE LINE # 948
009C E4                CLR     A
009D 7FE0              MOV     R7,#0E0H
009F 7E2E              MOV     R6,#02EH
00A1 FD                MOV     R5,A
00A2 FC                MOV     R4,A
00A3 900000      E     MOV     DPTR,#pow_tension
00A6 120000      E     LCALL   ?C?LSTXDATA
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 94  

                                           ; SOURCE LINE # 949
00A9 800D              SJMP    ?C0153
00AB         ?C0154:
                                           ; SOURCE LINE # 951
00AB E4                CLR     A
00AC 7FC0              MOV     R7,#0C0H
00AE 7E5D              MOV     R6,#05DH
00B0 FD                MOV     R5,A
00B1 FC                MOV     R4,A
00B2 900000      E     MOV     DPTR,#pow_tension
00B5 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 952
00B8         ?C0153:
                                           ; SOURCE LINE # 954
00B8 E4                CLR     A
00B9 900000      E     MOV     DPTR,#first_tension_valid
00BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 955
                                           ; SOURCE LINE # 956
00BD         ?C0150:
                                           ; SOURCE LINE # 960
00BD E4                CLR     A
00BE 7F58              MOV     R7,#058H
00C0 7E1B              MOV     R6,#01BH
00C2 FD                MOV     R5,A
00C3 FC                MOV     R4,A
00C4 900000      E     MOV     DPTR,#dev_tension
00C7 E0                MOVX    A,@DPTR
00C8 F8                MOV     R0,A
00C9 A3                INC     DPTR
00CA E0                MOVX    A,@DPTR
00CB F9                MOV     R1,A
00CC A3                INC     DPTR
00CD E0                MOVX    A,@DPTR
00CE FA                MOV     R2,A
00CF A3                INC     DPTR
00D0 E0                MOVX    A,@DPTR
00D1 FB                MOV     R3,A
00D2 D3                SETB    C
00D3 120000      E     LCALL   ?C?SLCMP
00D6 5003              JNC     $ + 5H
00D8 020000      R     LJMP    ?C0156
                                           ; SOURCE LINE # 963
00DB E4                CLR     A
00DC 7FE8              MOV     R7,#0E8H
00DE 7E03              MOV     R6,#03H
00E0 FD                MOV     R5,A
00E1 FC                MOV     R4,A
00E2 900000      R     MOV     DPTR,#count2
00E5 E0                MOVX    A,@DPTR
00E6 F8                MOV     R0,A
00E7 A3                INC     DPTR
00E8 E0                MOVX    A,@DPTR
00E9 F9                MOV     R1,A
00EA A3                INC     DPTR
00EB E0                MOVX    A,@DPTR
00EC FA                MOV     R2,A
00ED A3                INC     DPTR
00EE E0                MOVX    A,@DPTR
00EF FB                MOV     R3,A
00F0 120000      E     LCALL   ?C?ULCMP
00F3 7004              JNZ     ?C0157
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 95  

                                           ; SOURCE LINE # 964
00F5 D200        E     SETB    tension_valid
                                           ; SOURCE LINE # 965
00F7 8036              SJMP    ?C0158
00F9         ?C0157:
                                           ; SOURCE LINE # 966
                                           ; SOURCE LINE # 967
00F9 900000      R     MOV     DPTR,#count2
00FC E0                MOVX    A,@DPTR
00FD FC                MOV     R4,A
00FE A3                INC     DPTR
00FF E0                MOVX    A,@DPTR
0100 FD                MOV     R5,A
0101 A3                INC     DPTR
0102 E0                MOVX    A,@DPTR
0103 FE                MOV     R6,A
0104 A3                INC     DPTR
0105 E0                MOVX    A,@DPTR
0106 2401              ADD     A,#01H
0108 FF                MOV     R7,A
0109 E4                CLR     A
010A 3E                ADDC    A,R6
010B FE                MOV     R6,A
010C E4                CLR     A
010D 3D                ADDC    A,R5
010E FD                MOV     R5,A
010F E4                CLR     A
0110 3C                ADDC    A,R4
0111 FC                MOV     R4,A
0112 900000      R     MOV     DPTR,#count2
0115 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 968
0118 900000      E     MOV     DPTR,#dev_tension
011B E0                MOVX    A,@DPTR
011C FC                MOV     R4,A
011D A3                INC     DPTR
011E E0                MOVX    A,@DPTR
011F FD                MOV     R5,A
0120 A3                INC     DPTR
0121 E0                MOVX    A,@DPTR
0122 FE                MOV     R6,A
0123 A3                INC     DPTR
0124 E0                MOVX    A,@DPTR
0125 FF                MOV     R7,A
0126 120000      E     LCALL   _filter_voltage
0129 900000      E     MOV     DPTR,#dev_tension_f
012C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 969
012F         ?C0158:
                                           ; SOURCE LINE # 971
012F 900000      E     MOV     DPTR,#g_mem+053H
0132 E0                MOVX    A,@DPTR
0133 6003              JZ      ?C0159
                                           ; SOURCE LINE # 972
0135 120000      R     LCALL   pwm_limit_search
0138         ?C0159:
                                           ; SOURCE LINE # 976
0138 300005            JNB     interrupt_flag,?C0160
                                           ; SOURCE LINE # 977
013B C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 978
013D 120000      R     LCALL   interrupt_manager
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 96  

                                           ; SOURCE LINE # 979
0140         ?C0160:
                                           ; SOURCE LINE # 982
0140 900000      E     MOV     DPTR,#g_mem+048H
0143 E0                MOVX    A,@DPTR
0144 7004              JNZ     ?C0161
                                           ; SOURCE LINE # 983
0146 F500        R     MOV     emg_1_status,A
                                           ; SOURCE LINE # 984
0148 F500        R     MOV     emg_2_status,A
                                           ; SOURCE LINE # 985
014A         ?C0161:
                                           ; SOURCE LINE # 988
014A 900000      E     MOV     DPTR,#c_mem+0FH
014D E0                MOVX    A,@DPTR
014E 6406              XRL     A,#06H
0150 6003              JZ      $ + 5H
0152 020000      R     LJMP    ?C0162
                                           ; SOURCE LINE # 992
0155 E500        R     MOV     A,UD_status
0157 14                DEC     A
0158 7003              JNZ     $ + 5H
015A 020000      R     LJMP    ?C0169
015D 14                DEC     A
015E 7003              JNZ     $ + 5H
0160 020000      R     LJMP    ?C0170
0163 14                DEC     A
0164 7003              JNZ     $ + 5H
0166 020000      R     LJMP    ?C0173
0169 14                DEC     A
016A 7003              JNZ     $ + 5H
016C 020000      R     LJMP    ?C0177
016F 2404              ADD     A,#04H
0171 6003              JZ      $ + 5H
0173 020000      R     LJMP    ?C0163
                                           ; SOURCE LINE # 993
0176         ?C0164:
                                           ; SOURCE LINE # 994
0176 900000      E     MOV     DPTR,#ADC_buf+04H
0179 E0                MOVX    A,@DPTR
017A FE                MOV     R6,A
017B A3                INC     DPTR
017C E0                MOVX    A,@DPTR
017D FF                MOV     R7,A
017E EE                MOV     A,R6
017F 33                RLC     A
0180 95E0              SUBB    A,ACC
0182 8F00        R     MOV     i_aux+03H,R7
0184 8E00        R     MOV     i_aux+02H,R6
0186 F500        R     MOV     i_aux+01H,A
0188 F500        R     MOV     i_aux,A
                                           ; SOURCE LINE # 996
018A C3                CLR     C
018B E500        R     MOV     A,i_aux+03H
018D 9500        R     SUBB    A,UD_mean_value+03H
018F FF                MOV     R7,A
0190 E500        R     MOV     A,i_aux+02H
0192 9500        R     SUBB    A,UD_mean_value+02H
0194 FE                MOV     R6,A
0195 E500        R     MOV     A,i_aux+01H
0197 9500        R     SUBB    A,UD_mean_value+01H
0199 FD                MOV     R5,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 97  

019A E500        R     MOV     A,i_aux
019C 9500        R     SUBB    A,UD_mean_value
019E FC                MOV     R4,A
019F 120000      E     LCALL   ?C?FCASTL
01A2 C004              PUSH    AR4
01A4 C005              PUSH    AR5
01A6 C006              PUSH    AR6
01A8 C007              PUSH    AR7
01AA AF00        R     MOV     R7,UD_mean_value+03H
01AC AE00        R     MOV     R6,UD_mean_value+02H
01AE AD00        R     MOV     R5,UD_mean_value+01H
01B0 AC00        R     MOV     R4,UD_mean_value
01B2 EC                MOV     A,R4
01B3 120000      E     LCALL   ?C?FCASTL
01B6 A804              MOV     R0,AR4
01B8 A905              MOV     R1,AR5
01BA AA06              MOV     R2,AR6
01BC AB07              MOV     R3,AR7
01BE D007              POP     AR7
01C0 D006              POP     AR6
01C2 D005              POP     AR5
01C4 D004              POP     AR4
01C6 120000      E     LCALL   ?C?FPDIV
01C9 C004              PUSH    AR4
01CB C005              PUSH    AR5
01CD C006              PUSH    AR6
01CF C007              PUSH    AR7
01D1 900000      E     MOV     DPTR,#g_mem+07CH
01D4 E0                MOVX    A,@DPTR
01D5 FC                MOV     R4,A
01D6 A3                INC     DPTR
01D7 E0                MOVX    A,@DPTR
01D8 FD                MOV     R5,A
01D9 E4                CLR     A
01DA 120000      E     LCALL   ?C?FCASTI
01DD D003              POP     AR3
01DF D002              POP     AR2
01E1 D001              POP     AR1
01E3 D000              POP     AR0
01E5 120000      E     LCALL   ?C?FPMUL
01E8 120000      E     LCALL   ?C?CASTF
01EB 8F00        R     MOV     i_aux+03H,R7
01ED 8E00        R     MOV     i_aux+02H,R6
01EF 8D00        R     MOV     i_aux+01H,R5
01F1 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 998
01F3 300005            JNB     interrupt_flag,?C0165
                                           ; SOURCE LINE # 999
01F6 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1000
01F8 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1001
01FB         ?C0165:
                                           ; SOURCE LINE # 1004
01FB 7F00              MOV     R7,#00H
01FD 7EFC              MOV     R6,#0FCH
01FF 7DFF              MOV     R5,#0FFH
0201 7CFF              MOV     R4,#0FFH
0203 AB00        R     MOV     R3,i_aux+03H
0205 AA00        R     MOV     R2,i_aux+02H
0207 A900        R     MOV     R1,i_aux+01H
0209 A800        R     MOV     R0,i_aux
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 98  

020B C3                CLR     C
020C 120000      E     LCALL   ?C?SLCMP
020F 500C              JNC     ?C0166
                                           ; SOURCE LINE # 1005
0211 750000      R     MOV     i_aux+03H,#00H
0214 7500FC      R     MOV     i_aux+02H,#0FCH
0217 7500FF      R     MOV     i_aux+01H,#0FFH
021A 7500FF      R     MOV     i_aux,#0FFH
021D         ?C0166:
                                           ; SOURCE LINE # 1006
021D E4                CLR     A
021E FF                MOV     R7,A
021F 7E04              MOV     R6,#04H
0221 FD                MOV     R5,A
0222 FC                MOV     R4,A
0223 AB00        R     MOV     R3,i_aux+03H
0225 AA00        R     MOV     R2,i_aux+02H
0227 A900        R     MOV     R1,i_aux+01H
0229 A800        R     MOV     R0,i_aux
022B D3                SETB    C
022C 120000      E     LCALL   ?C?SLCMP
022F 400A              JC      ?C0167
                                           ; SOURCE LINE # 1007
0231 E4                CLR     A
0232 F500        R     MOV     i_aux+03H,A
0234 750004      R     MOV     i_aux+02H,#04H
0237 F500        R     MOV     i_aux+01H,A
0239 F500        R     MOV     i_aux,A
023B         ?C0167:
                                           ; SOURCE LINE # 1009
023B 900000      E     MOV     DPTR,#g_meas+031H
023E E500        R     MOV     A,i_aux+02H
0240 F0                MOVX    @DPTR,A
0241 A3                INC     DPTR
0242 E500        R     MOV     A,i_aux+03H
0244 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1011
0245 200003      E     JB      interrupt_flag,$ + 6H
0248 020000      R     LJMP    ?C0163
                                           ; SOURCE LINE # 1012
024B C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1013
024D 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1014
                                           ; SOURCE LINE # 1016
0250 020000      R     LJMP    ?C0163
                                           ; SOURCE LINE # 1018
0253         ?C0169:
                                           ; SOURCE LINE # 1019
0253 E4                CLR     A
0254 F500        R     MOV     UD_counter,A
0256 F500        R     MOV     UD_counter+01H,A
                                           ; SOURCE LINE # 1020
0258 F500        R     MOV     UD_mean_value+03H,A
025A F500        R     MOV     UD_mean_value+02H,A
025C F500        R     MOV     UD_mean_value+01H,A
025E F500        R     MOV     UD_mean_value,A
                                           ; SOURCE LINE # 1021
0260 750004      R     MOV     UD_status,#04H
                                           ; SOURCE LINE # 1023
0263 020000      R     LJMP    ?C0163
                                           ; SOURCE LINE # 1025
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 99  

0266         ?C0170:
                                           ; SOURCE LINE # 1026
0266 0500        R     INC     UD_counter+01H
0268 E500        R     MOV     A,UD_counter+01H
026A 7002              JNZ     ?C0265
026C 0500        R     INC     UD_counter
026E         ?C0265:
                                           ; SOURCE LINE # 1027
026E 6464              XRL     A,#064H
0270 4500        R     ORL     A,UD_counter
0272 707F              JNZ     ?C0163
                                           ; SOURCE LINE # 1028
0274 F500        R     MOV     UD_counter,A
0276 F500        R     MOV     UD_counter+01H,A
                                           ; SOURCE LINE # 1030
0278 300005            JNB     interrupt_flag,?C0172
                                           ; SOURCE LINE # 1031
027B C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1032
027D 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1033
0280         ?C0172:
                                           ; SOURCE LINE # 1035
0280 750003      R     MOV     UD_status,#03H
                                           ; SOURCE LINE # 1036
                                           ; SOURCE LINE # 1038
0283 806E              SJMP    ?C0163
                                           ; SOURCE LINE # 1040
0285         ?C0173:
                                           ; SOURCE LINE # 1042
0285 0500        R     INC     UD_counter+01H
0287 E500        R     MOV     A,UD_counter+01H
0289 7002              JNZ     ?C0266
028B 0500        R     INC     UD_counter
028D         ?C0266:
                                           ; SOURCE LINE # 1043
028D 900000      E     MOV     DPTR,#ADC_buf+04H
0290 E0                MOVX    A,@DPTR
0291 FE                MOV     R6,A
0292 A3                INC     DPTR
0293 E0                MOVX    A,@DPTR
0294 FF                MOV     R7,A
0295 EE                MOV     A,R6
0296 33                RLC     A
0297 95E0              SUBB    A,ACC
0299 FD                MOV     R5,A
029A FC                MOV     R4,A
029B E500        R     MOV     A,UD_mean_value+03H
029D 2F                ADD     A,R7
029E F500        R     MOV     UD_mean_value+03H,A
02A0 E500        R     MOV     A,UD_mean_value+02H
02A2 3E                ADDC    A,R6
02A3 F500        R     MOV     UD_mean_value+02H,A
02A5 E500        R     MOV     A,UD_mean_value+01H
02A7 3D                ADDC    A,R5
02A8 F500        R     MOV     UD_mean_value+01H,A
02AA E500        R     MOV     A,UD_mean_value
02AC 3C                ADDC    A,R4
02AD F500        R     MOV     UD_mean_value,A
                                           ; SOURCE LINE # 1045
02AF 300005            JNB     interrupt_flag,?C0174
                                           ; SOURCE LINE # 1046
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 100 

02B2 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1047
02B4 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1048
02B7         ?C0174:
                                           ; SOURCE LINE # 1050
02B7 E500        R     MOV     A,UD_counter+01H
02B9 64C8              XRL     A,#0C8H
02BB 4500        R     ORL     A,UD_counter
02BD 7034              JNZ     ?C0163
                                           ; SOURCE LINE # 1051
02BF AF00        R     MOV     R7,UD_mean_value+03H
02C1 AE00        R     MOV     R6,UD_mean_value+02H
02C3 AD00        R     MOV     R5,UD_mean_value+01H
02C5 AC00        R     MOV     R4,UD_mean_value
02C7 7BC8              MOV     R3,#0C8H
02C9 FA                MOV     R2,A
02CA F9                MOV     R1,A
02CB F8                MOV     R0,A
02CC 120000      E     LCALL   ?C?SLDIV
02CF 8F00        R     MOV     UD_mean_value+03H,R7
02D1 8E00        R     MOV     UD_mean_value+02H,R6
02D3 8D00        R     MOV     UD_mean_value+01H,R5
02D5 8C00        R     MOV     UD_mean_value,R4
                                           ; SOURCE LINE # 1053
02D7 300005            JNB     interrupt_flag,?C0176
                                           ; SOURCE LINE # 1054
02DA C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1055
02DC 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1056
02DF         ?C0176:
                                           ; SOURCE LINE # 1058
02DF E4                CLR     A
02E0 F500        R     MOV     UD_counter,A
02E2 F500        R     MOV     UD_counter+01H,A
                                           ; SOURCE LINE # 1059
02E4 F500        R     MOV     UD_status,A
                                           ; SOURCE LINE # 1060
                                           ; SOURCE LINE # 1061
02E6 800B              SJMP    ?C0163
                                           ; SOURCE LINE # 1063
02E8         ?C0177:
                                           ; SOURCE LINE # 1064
02E8 E500        R     MOV     A,emg_1_status
02EA 7007              JNZ     ?C0163
02EC E500        R     MOV     A,emg_2_status
02EE 7003              JNZ     ?C0163
                                           ; SOURCE LINE # 1065
02F0 750002      R     MOV     UD_status,#02H
                                           ; SOURCE LINE # 1066
                                           ; SOURCE LINE # 1067
02F3         ?C0163:
                                           ; SOURCE LINE # 1069
02F3 300005            JNB     interrupt_flag,?C0179
                                           ; SOURCE LINE # 1070
02F6 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1071
02F8 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1072
02FB         ?C0179:
                                           ; SOURCE LINE # 1074
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 101 

02FB E500        R     MOV     A,LR_status
02FD 14                DEC     A
02FE 7003              JNZ     $ + 5H
0300 020000      R     LJMP    ?C0186
0303 14                DEC     A
0304 7003              JNZ     $ + 5H
0306 020000      R     LJMP    ?C0187
0309 14                DEC     A
030A 7003              JNZ     $ + 5H
030C 020000      R     LJMP    ?C0190
030F 14                DEC     A
0310 7003              JNZ     $ + 5H
0312 020000      R     LJMP    ?C0193
0315 2404              ADD     A,#04H
0317 6003              JZ      $ + 5H
0319 020000      R     LJMP    ?C0180
                                           ; SOURCE LINE # 1075
031C         ?C0181:
                                           ; SOURCE LINE # 1076
031C 900000      E     MOV     DPTR,#ADC_buf+06H
031F E0                MOVX    A,@DPTR
0320 FE                MOV     R6,A
0321 A3                INC     DPTR
0322 E0                MOVX    A,@DPTR
0323 FF                MOV     R7,A
0324 EE                MOV     A,R6
0325 33                RLC     A
0326 95E0              SUBB    A,ACC
0328 8F00        R     MOV     i_aux+03H,R7
032A 8E00        R     MOV     i_aux+02H,R6
032C F500        R     MOV     i_aux+01H,A
032E F500        R     MOV     i_aux,A
                                           ; SOURCE LINE # 1078
0330 C3                CLR     C
0331 E500        R     MOV     A,i_aux+03H
0333 9500        R     SUBB    A,LR_mean_value+03H
0335 FF                MOV     R7,A
0336 E500        R     MOV     A,i_aux+02H
0338 9500        R     SUBB    A,LR_mean_value+02H
033A FE                MOV     R6,A
033B E500        R     MOV     A,i_aux+01H
033D 9500        R     SUBB    A,LR_mean_value+01H
033F FD                MOV     R5,A
0340 E500        R     MOV     A,i_aux
0342 9500        R     SUBB    A,LR_mean_value
0344 FC                MOV     R4,A
0345 120000      E     LCALL   ?C?FCASTL
0348 C004              PUSH    AR4
034A C005              PUSH    AR5
034C C006              PUSH    AR6
034E C007              PUSH    AR7
0350 AF00        R     MOV     R7,LR_mean_value+03H
0352 AE00        R     MOV     R6,LR_mean_value+02H
0354 AD00        R     MOV     R5,LR_mean_value+01H
0356 AC00        R     MOV     R4,LR_mean_value
0358 EC                MOV     A,R4
0359 120000      E     LCALL   ?C?FCASTL
035C A804              MOV     R0,AR4
035E A905              MOV     R1,AR5
0360 AA06              MOV     R2,AR6
0362 AB07              MOV     R3,AR7
0364 D007              POP     AR7
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 102 

0366 D006              POP     AR6
0368 D005              POP     AR5
036A D004              POP     AR4
036C 120000      E     LCALL   ?C?FPDIV
036F C004              PUSH    AR4
0371 C005              PUSH    AR5
0373 C006              PUSH    AR6
0375 C007              PUSH    AR7
0377 900000      E     MOV     DPTR,#g_mem+07CH
037A E0                MOVX    A,@DPTR
037B FC                MOV     R4,A
037C A3                INC     DPTR
037D E0                MOVX    A,@DPTR
037E FD                MOV     R5,A
037F E4                CLR     A
0380 120000      E     LCALL   ?C?FCASTI
0383 D003              POP     AR3
0385 D002              POP     AR2
0387 D001              POP     AR1
0389 D000              POP     AR0
038B 120000      E     LCALL   ?C?FPMUL
038E 120000      E     LCALL   ?C?CASTF
0391 8F00        R     MOV     i_aux+03H,R7
0393 8E00        R     MOV     i_aux+02H,R6
0395 8D00        R     MOV     i_aux+01H,R5
0397 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 1080
0399 300005            JNB     interrupt_flag,?C0182
                                           ; SOURCE LINE # 1081
039C C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1082
039E 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1083
03A1         ?C0182:
                                           ; SOURCE LINE # 1086
03A1 7F00              MOV     R7,#00H
03A3 7EFC              MOV     R6,#0FCH
03A5 7DFF              MOV     R5,#0FFH
03A7 7CFF              MOV     R4,#0FFH
03A9 AB00        R     MOV     R3,i_aux+03H
03AB AA00        R     MOV     R2,i_aux+02H
03AD A900        R     MOV     R1,i_aux+01H
03AF A800        R     MOV     R0,i_aux
03B1 C3                CLR     C
03B2 120000      E     LCALL   ?C?SLCMP
03B5 500C              JNC     ?C0183
                                           ; SOURCE LINE # 1087
03B7 750000      R     MOV     i_aux+03H,#00H
03BA 7500FC      R     MOV     i_aux+02H,#0FCH
03BD 7500FF      R     MOV     i_aux+01H,#0FFH
03C0 7500FF      R     MOV     i_aux,#0FFH
03C3         ?C0183:
                                           ; SOURCE LINE # 1088
03C3 E4                CLR     A
03C4 FF                MOV     R7,A
03C5 7E04              MOV     R6,#04H
03C7 FD                MOV     R5,A
03C8 FC                MOV     R4,A
03C9 AB00        R     MOV     R3,i_aux+03H
03CB AA00        R     MOV     R2,i_aux+02H
03CD A900        R     MOV     R1,i_aux+01H
03CF A800        R     MOV     R0,i_aux
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 103 

03D1 D3                SETB    C
03D2 120000      E     LCALL   ?C?SLCMP
03D5 400A              JC      ?C0184
                                           ; SOURCE LINE # 1089
03D7 E4                CLR     A
03D8 F500        R     MOV     i_aux+03H,A
03DA 750004      R     MOV     i_aux+02H,#04H
03DD F500        R     MOV     i_aux+01H,A
03DF F500        R     MOV     i_aux,A
03E1         ?C0184:
                                           ; SOURCE LINE # 1091
03E1 300005            JNB     interrupt_flag,?C0185
                                           ; SOURCE LINE # 1092
03E4 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1093
03E6 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1094
03E9         ?C0185:
                                           ; SOURCE LINE # 1096
03E9 900000      E     MOV     DPTR,#g_meas+02FH
03EC E500        R     MOV     A,i_aux+02H
03EE F0                MOVX    @DPTR,A
03EF A3                INC     DPTR
03F0 E500        R     MOV     A,i_aux+03H
03F2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1098
03F3 020000      R     LJMP    ?C0180
                                           ; SOURCE LINE # 1100
03F6         ?C0186:
                                           ; SOURCE LINE # 1101
03F6 E4                CLR     A
03F7 F500        R     MOV     LR_counter,A
03F9 F500        R     MOV     LR_counter+01H,A
                                           ; SOURCE LINE # 1102
03FB F500        R     MOV     LR_mean_value+03H,A
03FD F500        R     MOV     LR_mean_value+02H,A
03FF F500        R     MOV     LR_mean_value+01H,A
0401 F500        R     MOV     LR_mean_value,A
                                           ; SOURCE LINE # 1103
0403 750004      R     MOV     LR_status,#04H
                                           ; SOURCE LINE # 1104
0406 020000      R     LJMP    ?C0180
                                           ; SOURCE LINE # 1106
0409         ?C0187:
                                           ; SOURCE LINE # 1107
0409 0500        R     INC     LR_counter+01H
040B E500        R     MOV     A,LR_counter+01H
040D 7002              JNZ     ?C0267
040F 0500        R     INC     LR_counter
0411         ?C0267:
                                           ; SOURCE LINE # 1108
0411 6464              XRL     A,#064H
0413 4500        R     ORL     A,LR_counter
0415 707B              JNZ     ?C0180
                                           ; SOURCE LINE # 1109
0417 F500        R     MOV     LR_counter,A
0419 F500        R     MOV     LR_counter+01H,A
                                           ; SOURCE LINE # 1111
041B 300005            JNB     interrupt_flag,?C0189
                                           ; SOURCE LINE # 1112
041E C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1113
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 104 

0420 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1114
0423         ?C0189:
                                           ; SOURCE LINE # 1116
0423 750003      R     MOV     LR_status,#03H
                                           ; SOURCE LINE # 1117
                                           ; SOURCE LINE # 1118
0426 806A              SJMP    ?C0180
                                           ; SOURCE LINE # 1120
0428         ?C0190:
                                           ; SOURCE LINE # 1122
0428 0500        R     INC     LR_counter+01H
042A E500        R     MOV     A,LR_counter+01H
042C 7002              JNZ     ?C0268
042E 0500        R     INC     LR_counter
0430         ?C0268:
                                           ; SOURCE LINE # 1123
0430 900000      E     MOV     DPTR,#ADC_buf+06H
0433 E0                MOVX    A,@DPTR
0434 FE                MOV     R6,A
0435 A3                INC     DPTR
0436 E0                MOVX    A,@DPTR
0437 FF                MOV     R7,A
0438 EE                MOV     A,R6
0439 33                RLC     A
043A 95E0              SUBB    A,ACC
043C FD                MOV     R5,A
043D FC                MOV     R4,A
043E E500        R     MOV     A,LR_mean_value+03H
0440 2F                ADD     A,R7
0441 F500        R     MOV     LR_mean_value+03H,A
0443 E500        R     MOV     A,LR_mean_value+02H
0445 3E                ADDC    A,R6
0446 F500        R     MOV     LR_mean_value+02H,A
0448 E500        R     MOV     A,LR_mean_value+01H
044A 3D                ADDC    A,R5
044B F500        R     MOV     LR_mean_value+01H,A
044D E500        R     MOV     A,LR_mean_value
044F 3C                ADDC    A,R4
0450 F500        R     MOV     LR_mean_value,A
                                           ; SOURCE LINE # 1124
0452 E500        R     MOV     A,LR_counter+01H
0454 64C8              XRL     A,#0C8H
0456 4500        R     ORL     A,LR_counter
0458 7038              JNZ     ?C0180
                                           ; SOURCE LINE # 1125
045A AF00        R     MOV     R7,LR_mean_value+03H
045C AE00        R     MOV     R6,LR_mean_value+02H
045E AD00        R     MOV     R5,LR_mean_value+01H
0460 AC00        R     MOV     R4,LR_mean_value
0462 7BC8              MOV     R3,#0C8H
0464 FA                MOV     R2,A
0465 F9                MOV     R1,A
0466 F8                MOV     R0,A
0467 120000      E     LCALL   ?C?SLDIV
046A 8F00        R     MOV     LR_mean_value+03H,R7
046C 8E00        R     MOV     LR_mean_value+02H,R6
046E 8D00        R     MOV     LR_mean_value+01H,R5
0470 8C00        R     MOV     LR_mean_value,R4
                                           ; SOURCE LINE # 1127
0472 300005            JNB     interrupt_flag,?C0192
                                           ; SOURCE LINE # 1128
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 105 

0475 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1129
0477 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1130
047A         ?C0192:
                                           ; SOURCE LINE # 1132
047A E4                CLR     A
047B F500        R     MOV     LR_counter,A
047D F500        R     MOV     LR_counter+01H,A
                                           ; SOURCE LINE # 1133
047F F500        R     MOV     LR_status,A
                                           ; SOURCE LINE # 1134
                                           ; SOURCE LINE # 1135
0481 800F              SJMP    ?C0180
                                           ; SOURCE LINE # 1137
0483         ?C0193:
                                           ; SOURCE LINE # 1138
0483 E500        R     MOV     A,emg_1_status
0485 700B              JNZ     ?C0180
0487 E500        R     MOV     A,emg_2_status
0489 7007              JNZ     ?C0180
048B E500        R     MOV     A,UD_status
048D 7003              JNZ     ?C0180
                                           ; SOURCE LINE # 1139
048F 750002      R     MOV     LR_status,#02H
                                           ; SOURCE LINE # 1140
                                           ; SOURCE LINE # 1141
0492         ?C0180:
                                           ; SOURCE LINE # 1143
0492 200003      E     JB      interrupt_flag,$ + 6H
0495 020000      R     LJMP    ?C0242
                                           ; SOURCE LINE # 1144
0498 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1145
049A 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1146
                                           ; SOURCE LINE # 1148
049D 020000      R     LJMP    ?C0242
04A0         ?C0162:
                                           ; SOURCE LINE # 1149
                                           ; SOURCE LINE # 1155
04A0 E500        R     MOV     A,emg_1_status
04A2 14                DEC     A
04A3 7003              JNZ     $ + 5H
04A5 020000      R     LJMP    ?C0205
04A8 14                DEC     A
04A9 7003              JNZ     $ + 5H
04AB 020000      R     LJMP    ?C0206
04AE 14                DEC     A
04AF 7003              JNZ     $ + 5H
04B1 020000      R     LJMP    ?C0209
04B4 2403              ADD     A,#03H
04B6 6003              JZ      $ + 5H
04B8 020000      R     LJMP    ?C0197
                                           ; SOURCE LINE # 1156
04BB         ?C0198:
                                           ; SOURCE LINE # 1157
04BB 900000      E     MOV     DPTR,#ADC_buf+04H
04BE E0                MOVX    A,@DPTR
04BF FE                MOV     R6,A
04C0 A3                INC     DPTR
04C1 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 106 

04C2 FF                MOV     R7,A
04C3 EE                MOV     A,R6
04C4 33                RLC     A
04C5 95E0              SUBB    A,ACC
04C7 8F00        R     MOV     i_aux+03H,R7
04C9 8E00        R     MOV     i_aux+02H,R6
04CB F500        R     MOV     i_aux+01H,A
04CD F500        R     MOV     i_aux,A
                                           ; SOURCE LINE # 1158
04CF E4                CLR     A
04D0 FF                MOV     R7,A
04D1 FE                MOV     R6,A
04D2 FD                MOV     R5,A
04D3 FC                MOV     R4,A
04D4 AB00        R     MOV     R3,i_aux+03H
04D6 AA00        R     MOV     R2,i_aux+02H
04D8 A900        R     MOV     R1,i_aux+01H
04DA A800        R     MOV     R0,i_aux
04DC C3                CLR     C
04DD 120000      E     LCALL   ?C?SLCMP
04E0 5009              JNC     ?C0199
                                           ; SOURCE LINE # 1159
04E2 E4                CLR     A
04E3 F500        R     MOV     i_aux+03H,A
04E5 F500        R     MOV     i_aux+02H,A
04E7 F500        R     MOV     i_aux+01H,A
04E9 F500        R     MOV     i_aux,A
04EB         ?C0199:
                                           ; SOURCE LINE # 1160
04EB AF00        R     MOV     R7,i_aux+03H
04ED AE00        R     MOV     R6,i_aux+02H
04EF AD00        R     MOV     R5,i_aux+01H
04F1 AC00        R     MOV     R4,i_aux
04F3 120000      E     LCALL   _filter_ch1
04F6 8F00        R     MOV     i_aux+03H,R7
04F8 8E00        R     MOV     i_aux+02H,R6
04FA 8D00        R     MOV     i_aux+01H,R5
04FC 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 1161
04FE 780A              MOV     R0,#0AH
0500 120000      E     LCALL   ?C?LSHL
0503 900000      E     MOV     DPTR,#g_mem+049H
0506 E0                MOVX    A,@DPTR
0507 F8                MOV     R0,A
0508 A3                INC     DPTR
0509 E0                MOVX    A,@DPTR
050A F9                MOV     R1,A
050B A3                INC     DPTR
050C E0                MOVX    A,@DPTR
050D FA                MOV     R2,A
050E A3                INC     DPTR
050F E0                MOVX    A,@DPTR
0510 FB                MOV     R3,A
0511 120000      E     LCALL   ?C?ULDIV
0514 8F00        R     MOV     i_aux+03H,R7
0516 8E00        R     MOV     i_aux+02H,R6
0518 8D00        R     MOV     i_aux+01H,R5
051A 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 1163
051C 300005            JNB     interrupt_flag,?C0200
                                           ; SOURCE LINE # 1164
051F C200        E     CLR     interrupt_flag
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 107 

                                           ; SOURCE LINE # 1165
0521 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1166
0524         ?C0200:
                                           ; SOURCE LINE # 1168
0524 E4                CLR     A
0525 FF                MOV     R7,A
0526 FE                MOV     R6,A
0527 FD                MOV     R5,A
0528 FC                MOV     R4,A
0529 AB00        R     MOV     R3,i_aux+03H
052B AA00        R     MOV     R2,i_aux+02H
052D A900        R     MOV     R1,i_aux+01H
052F A800        R     MOV     R0,i_aux
0531 C3                CLR     C
0532 120000      E     LCALL   ?C?SLCMP
0535 500B              JNC     ?C0201
                                           ; SOURCE LINE # 1169
0537 E4                CLR     A
0538 F500        R     MOV     i_aux+03H,A
053A F500        R     MOV     i_aux+02H,A
053C F500        R     MOV     i_aux+01H,A
053E F500        R     MOV     i_aux,A
0540 801E              SJMP    ?C0202
0542         ?C0201:
                                           ; SOURCE LINE # 1171
0542 E4                CLR     A
0543 FF                MOV     R7,A
0544 7E04              MOV     R6,#04H
0546 FD                MOV     R5,A
0547 FC                MOV     R4,A
0548 AB00        R     MOV     R3,i_aux+03H
054A AA00        R     MOV     R2,i_aux+02H
054C A900        R     MOV     R1,i_aux+01H
054E A800        R     MOV     R0,i_aux
0550 D3                SETB    C
0551 120000      E     LCALL   ?C?SLCMP
0554 400A              JC      ?C0202
                                           ; SOURCE LINE # 1172
0556 E4                CLR     A
0557 F500        R     MOV     i_aux+03H,A
0559 750004      R     MOV     i_aux+02H,#04H
055C F500        R     MOV     i_aux+01H,A
055E F500        R     MOV     i_aux,A
0560         ?C0202:
                                           ; SOURCE LINE # 1174
0560 AF00        R     MOV     R7,i_aux+03H
0562 AE00        R     MOV     R6,i_aux+02H
0564 AD00        R     MOV     R5,i_aux+01H
0566 AC00        R     MOV     R4,i_aux
0568 900000      E     MOV     DPTR,#g_meas+0FH
056B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1176
056E 200003      E     JB      interrupt_flag,$ + 6H
0571 020000      R     LJMP    ?C0197
                                           ; SOURCE LINE # 1177
0574 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1178
0576 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1179
                                           ; SOURCE LINE # 1181
0579 020000      R     LJMP    ?C0197
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 108 

                                           ; SOURCE LINE # 1183
057C         ?C0205:
                                           ; SOURCE LINE # 1184
057C E4                CLR     A
057D 900000      R     MOV     DPTR,#emg_counter_1
0580 F0                MOVX    @DPTR,A
0581 A3                INC     DPTR
0582 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1185
0583 FF                MOV     R7,A
0584 FE                MOV     R6,A
0585 FD                MOV     R5,A
0586 FC                MOV     R4,A
0587 900000      E     MOV     DPTR,#g_mem+049H
058A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1186
058D 750002      R     MOV     emg_1_status,#02H
                                           ; SOURCE LINE # 1188
0590 020000      R     LJMP    ?C0197
                                           ; SOURCE LINE # 1190
0593         ?C0206:
                                           ; SOURCE LINE # 1191
0593 900000      R     MOV     DPTR,#emg_counter_1+01H
0596 E0                MOVX    A,@DPTR
0597 04                INC     A
0598 F0                MOVX    @DPTR,A
0599 7006              JNZ     ?C0269
059B 900000      R     MOV     DPTR,#emg_counter_1
059E E0                MOVX    A,@DPTR
059F 04                INC     A
05A0 F0                MOVX    @DPTR,A
05A1         ?C0269:
                                           ; SOURCE LINE # 1192
05A1 900000      R     MOV     DPTR,#emg_counter_1
05A4 E0                MOVX    A,@DPTR
05A5 6401              XRL     A,#01H
05A7 7004              JNZ     ?C0270
05A9 A3                INC     DPTR
05AA E0                MOVX    A,@DPTR
05AB 64F4              XRL     A,#0F4H
05AD         ?C0270:
05AD 6003              JZ      $ + 5H
05AF 020000      R     LJMP    ?C0197
                                           ; SOURCE LINE # 1193
05B2 900000      R     MOV     DPTR,#emg_counter_1
05B5 F0                MOVX    @DPTR,A
05B6 A3                INC     DPTR
05B7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1195
05B8 7F01              MOV     R7,#01H
05BA 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1196
05BD E4                CLR     A
05BE FF                MOV     R7,A
05BF 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1198
05C2 300005            JNB     interrupt_flag,?C0208
                                           ; SOURCE LINE # 1199
05C5 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1200
05C7 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1201
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 109 

05CA         ?C0208:
                                           ; SOURCE LINE # 1203
05CA 750003      R     MOV     emg_1_status,#03H
                                           ; SOURCE LINE # 1204
                                           ; SOURCE LINE # 1205
05CD 020000      R     LJMP    ?C0197
                                           ; SOURCE LINE # 1207
05D0         ?C0209:
                                           ; SOURCE LINE # 1209
05D0 900000      R     MOV     DPTR,#emg_counter_1+01H
05D3 E0                MOVX    A,@DPTR
05D4 04                INC     A
05D5 F0                MOVX    @DPTR,A
05D6 7006              JNZ     ?C0271
05D8 900000      R     MOV     DPTR,#emg_counter_1
05DB E0                MOVX    A,@DPTR
05DC 04                INC     A
05DD F0                MOVX    @DPTR,A
05DE         ?C0271:
                                           ; SOURCE LINE # 1210
05DE C3                CLR     C
05DF 900000      E     MOV     DPTR,#ADC_buf+04H
05E2 E0                MOVX    A,@DPTR
05E3 6480              XRL     A,#080H
05E5 9480              SUBB    A,#080H
05E7 5004              JNC     ?C0210
                                           ; SOURCE LINE # 1211
05E9 E4                CLR     A
05EA F0                MOVX    @DPTR,A
05EB A3                INC     DPTR
05EC F0                MOVX    @DPTR,A
05ED         ?C0210:
                                           ; SOURCE LINE # 1212
05ED 900000      E     MOV     DPTR,#g_mem+049H
05F0 E0                MOVX    A,@DPTR
05F1 F8                MOV     R0,A
05F2 A3                INC     DPTR
05F3 E0                MOVX    A,@DPTR
05F4 F9                MOV     R1,A
05F5 A3                INC     DPTR
05F6 E0                MOVX    A,@DPTR
05F7 FA                MOV     R2,A
05F8 A3                INC     DPTR
05F9 E0                MOVX    A,@DPTR
05FA FB                MOV     R3,A
05FB C000              PUSH    AR0
05FD C001              PUSH    AR1
05FF C002              PUSH    AR2
0601 C003              PUSH    AR3
0603 900000      E     MOV     DPTR,#ADC_buf+04H
0606 E0                MOVX    A,@DPTR
0607 FE                MOV     R6,A
0608 A3                INC     DPTR
0609 E0                MOVX    A,@DPTR
060A FF                MOV     R7,A
060B EE                MOV     A,R6
060C 33                RLC     A
060D 95E0              SUBB    A,ACC
060F FD                MOV     R5,A
0610 FC                MOV     R4,A
0611 120000      E     LCALL   _filter_ch1
0614 D003              POP     AR3
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 110 

0616 D002              POP     AR2
0618 D001              POP     AR1
061A D000              POP     AR0
061C EB                MOV     A,R3
061D 2F                ADD     A,R7
061E FF                MOV     R7,A
061F EA                MOV     A,R2
0620 3E                ADDC    A,R6
0621 FE                MOV     R6,A
0622 E9                MOV     A,R1
0623 3D                ADDC    A,R5
0624 FD                MOV     R5,A
0625 E8                MOV     A,R0
0626 3C                ADDC    A,R4
0627 FC                MOV     R4,A
0628 900000      E     MOV     DPTR,#g_mem+049H
062B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1214
062E 300005            JNB     interrupt_flag,?C0211
                                           ; SOURCE LINE # 1215
0631 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1216
0633 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1217
0636         ?C0211:
                                           ; SOURCE LINE # 1219
0636 900000      R     MOV     DPTR,#emg_counter_1
0639 E0                MOVX    A,@DPTR
063A 6403              XRL     A,#03H
063C 7004              JNZ     ?C0272
063E A3                INC     DPTR
063F E0                MOVX    A,@DPTR
0640 64E8              XRL     A,#0E8H
0642         ?C0272:
0642 7039              JNZ     ?C0197
                                           ; SOURCE LINE # 1220
0644 900000      E     MOV     DPTR,#g_mem+049H
0647 E0                MOVX    A,@DPTR
0648 FC                MOV     R4,A
0649 A3                INC     DPTR
064A E0                MOVX    A,@DPTR
064B FD                MOV     R5,A
064C A3                INC     DPTR
064D E0                MOVX    A,@DPTR
064E FE                MOV     R6,A
064F A3                INC     DPTR
0650 E0                MOVX    A,@DPTR
0651 FF                MOV     R7,A
0652 E4                CLR     A
0653 7BE8              MOV     R3,#0E8H
0655 7A03              MOV     R2,#03H
0657 F9                MOV     R1,A
0658 F8                MOV     R0,A
0659 120000      E     LCALL   ?C?ULDIV
065C 900000      E     MOV     DPTR,#g_mem+049H
065F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1222
0662 300005            JNB     interrupt_flag,?C0213
                                           ; SOURCE LINE # 1223
0665 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1224
0667 120000      R     LCALL   interrupt_manager
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 111 

                                           ; SOURCE LINE # 1225
066A         ?C0213:
                                           ; SOURCE LINE # 1227
066A E4                CLR     A
066B FF                MOV     R7,A
066C 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1228
066F E4                CLR     A
0670 FF                MOV     R7,A
0671 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1230
0674 E4                CLR     A
0675 900000      R     MOV     DPTR,#emg_counter_1
0678 F0                MOVX    @DPTR,A
0679 A3                INC     DPTR
067A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1232
067B F500        R     MOV     emg_1_status,A
                                           ; SOURCE LINE # 1233
                                           ; SOURCE LINE # 1234
                                           ; SOURCE LINE # 1236
                                           ; SOURCE LINE # 1237
                                           ; SOURCE LINE # 1238
067D         ?C0197:
                                           ; SOURCE LINE # 1240
067D 300005            JNB     interrupt_flag,?C0215
                                           ; SOURCE LINE # 1241
0680 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1242
0682 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1243
0685         ?C0215:
                                           ; SOURCE LINE # 1245
0685 E500        R     MOV     A,emg_2_status
0687 14                DEC     A
0688 7003              JNZ     $ + 5H
068A 020000      R     LJMP    ?C0223
068D 14                DEC     A
068E 7003              JNZ     $ + 5H
0690 020000      R     LJMP    ?C0225
0693 14                DEC     A
0694 7003              JNZ     $ + 5H
0696 020000      R     LJMP    ?C0228
0699 14                DEC     A
069A 7003              JNZ     $ + 5H
069C 020000      R     LJMP    ?C0233
069F 14                DEC     A
06A0 7003              JNZ     $ + 5H
06A2 020000      R     LJMP    ?C0235
06A5 2405              ADD     A,#05H
06A7 6003              JZ      $ + 5H
06A9 020000      R     LJMP    ?C0216
                                           ; SOURCE LINE # 1246
06AC         ?C0217:
                                           ; SOURCE LINE # 1247
06AC 900000      E     MOV     DPTR,#ADC_buf+06H
06AF E0                MOVX    A,@DPTR
06B0 FE                MOV     R6,A
06B1 A3                INC     DPTR
06B2 E0                MOVX    A,@DPTR
06B3 FF                MOV     R7,A
06B4 EE                MOV     A,R6
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 112 

06B5 33                RLC     A
06B6 95E0              SUBB    A,ACC
06B8 8F00        R     MOV     i_aux+03H,R7
06BA 8E00        R     MOV     i_aux+02H,R6
06BC F500        R     MOV     i_aux+01H,A
06BE F500        R     MOV     i_aux,A
                                           ; SOURCE LINE # 1248
06C0 E4                CLR     A
06C1 FF                MOV     R7,A
06C2 FE                MOV     R6,A
06C3 FD                MOV     R5,A
06C4 FC                MOV     R4,A
06C5 AB00        R     MOV     R3,i_aux+03H
06C7 AA00        R     MOV     R2,i_aux+02H
06C9 A900        R     MOV     R1,i_aux+01H
06CB A800        R     MOV     R0,i_aux
06CD C3                CLR     C
06CE 120000      E     LCALL   ?C?SLCMP
06D1 5009              JNC     ?C0218
                                           ; SOURCE LINE # 1249
06D3 E4                CLR     A
06D4 F500        R     MOV     i_aux+03H,A
06D6 F500        R     MOV     i_aux+02H,A
06D8 F500        R     MOV     i_aux+01H,A
06DA F500        R     MOV     i_aux,A
06DC         ?C0218:
                                           ; SOURCE LINE # 1250
06DC AF00        R     MOV     R7,i_aux+03H
06DE AE00        R     MOV     R6,i_aux+02H
06E0 AD00        R     MOV     R5,i_aux+01H
06E2 AC00        R     MOV     R4,i_aux
06E4 120000      E     LCALL   _filter_ch2
06E7 8F00        R     MOV     i_aux+03H,R7
06E9 8E00        R     MOV     i_aux+02H,R6
06EB 8D00        R     MOV     i_aux+01H,R5
06ED 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 1251
06EF 780A              MOV     R0,#0AH
06F1 120000      E     LCALL   ?C?LSHL
06F4 900000      E     MOV     DPTR,#g_mem+04DH
06F7 E0                MOVX    A,@DPTR
06F8 F8                MOV     R0,A
06F9 A3                INC     DPTR
06FA E0                MOVX    A,@DPTR
06FB F9                MOV     R1,A
06FC A3                INC     DPTR
06FD E0                MOVX    A,@DPTR
06FE FA                MOV     R2,A
06FF A3                INC     DPTR
0700 E0                MOVX    A,@DPTR
0701 FB                MOV     R3,A
0702 120000      E     LCALL   ?C?ULDIV
0705 8F00        R     MOV     i_aux+03H,R7
0707 8E00        R     MOV     i_aux+02H,R6
0709 8D00        R     MOV     i_aux+01H,R5
070B 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 1253
070D 300005            JNB     interrupt_flag,?C0219
                                           ; SOURCE LINE # 1254
0710 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1255
0712 120000      R     LCALL   interrupt_manager
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 113 

                                           ; SOURCE LINE # 1256
0715         ?C0219:
                                           ; SOURCE LINE # 1258
0715 E4                CLR     A
0716 FF                MOV     R7,A
0717 FE                MOV     R6,A
0718 FD                MOV     R5,A
0719 FC                MOV     R4,A
071A AB00        R     MOV     R3,i_aux+03H
071C AA00        R     MOV     R2,i_aux+02H
071E A900        R     MOV     R1,i_aux+01H
0720 A800        R     MOV     R0,i_aux
0722 C3                CLR     C
0723 120000      E     LCALL   ?C?SLCMP
0726 500B              JNC     ?C0220
                                           ; SOURCE LINE # 1259
0728 E4                CLR     A
0729 F500        R     MOV     i_aux+03H,A
072B F500        R     MOV     i_aux+02H,A
072D F500        R     MOV     i_aux+01H,A
072F F500        R     MOV     i_aux,A
0731 801E              SJMP    ?C0221
0733         ?C0220:
                                           ; SOURCE LINE # 1261
0733 E4                CLR     A
0734 FF                MOV     R7,A
0735 7E04              MOV     R6,#04H
0737 FD                MOV     R5,A
0738 FC                MOV     R4,A
0739 AB00        R     MOV     R3,i_aux+03H
073B AA00        R     MOV     R2,i_aux+02H
073D A900        R     MOV     R1,i_aux+01H
073F A800        R     MOV     R0,i_aux
0741 D3                SETB    C
0742 120000      E     LCALL   ?C?SLCMP
0745 400A              JC      ?C0221
                                           ; SOURCE LINE # 1262
0747 E4                CLR     A
0748 F500        R     MOV     i_aux+03H,A
074A 750004      R     MOV     i_aux+02H,#04H
074D F500        R     MOV     i_aux+01H,A
074F F500        R     MOV     i_aux,A
0751         ?C0221:
                                           ; SOURCE LINE # 1264
0751 AF00        R     MOV     R7,i_aux+03H
0753 AE00        R     MOV     R6,i_aux+02H
0755 AD00        R     MOV     R5,i_aux+01H
0757 AC00        R     MOV     R4,i_aux
0759 900000      E     MOV     DPTR,#g_meas+013H
075C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1266
075F 020000      R     LJMP    ?C0216
                                           ; SOURCE LINE # 1268
0762         ?C0223:
                                           ; SOURCE LINE # 1269
0762 E4                CLR     A
0763 900000      R     MOV     DPTR,#emg_counter_2
0766 F0                MOVX    @DPTR,A
0767 A3                INC     DPTR
0768 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1270
0769 FF                MOV     R7,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 114 

076A FE                MOV     R6,A
076B FD                MOV     R5,A
076C FC                MOV     R4,A
076D 900000      E     MOV     DPTR,#g_mem+04DH
0770 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1272
0773 300005            JNB     interrupt_flag,?C0224
                                           ; SOURCE LINE # 1273
0776 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1274
0778 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1275
077B         ?C0224:
                                           ; SOURCE LINE # 1277
077B 750004      R     MOV     emg_2_status,#04H
                                           ; SOURCE LINE # 1278
077E 020000      R     LJMP    ?C0216
                                           ; SOURCE LINE # 1280
0781         ?C0225:
                                           ; SOURCE LINE # 1281
0781 900000      R     MOV     DPTR,#emg_counter_2+01H
0784 E0                MOVX    A,@DPTR
0785 04                INC     A
0786 F0                MOVX    @DPTR,A
0787 7006              JNZ     ?C0273
0789 900000      R     MOV     DPTR,#emg_counter_2
078C E0                MOVX    A,@DPTR
078D 04                INC     A
078E F0                MOVX    @DPTR,A
078F         ?C0273:
                                           ; SOURCE LINE # 1282
078F 900000      R     MOV     DPTR,#emg_counter_2
0792 E0                MOVX    A,@DPTR
0793 6401              XRL     A,#01H
0795 7004              JNZ     ?C0274
0797 A3                INC     DPTR
0798 E0                MOVX    A,@DPTR
0799 64F4              XRL     A,#0F4H
079B         ?C0274:
079B 6003              JZ      $ + 5H
079D 020000      R     LJMP    ?C0216
                                           ; SOURCE LINE # 1283
07A0 900000      R     MOV     DPTR,#emg_counter_2
07A3 F0                MOVX    @DPTR,A
07A4 A3                INC     DPTR
07A5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1285
07A6 7F01              MOV     R7,#01H
07A8 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1286
07AB E4                CLR     A
07AC FF                MOV     R7,A
07AD 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1288
07B0 300005            JNB     interrupt_flag,?C0227
                                           ; SOURCE LINE # 1289
07B3 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1290
07B5 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1291
07B8         ?C0227:
                                           ; SOURCE LINE # 1293
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 115 

07B8 750003      R     MOV     emg_2_status,#03H
                                           ; SOURCE LINE # 1294
                                           ; SOURCE LINE # 1295
07BB 020000      R     LJMP    ?C0216
                                           ; SOURCE LINE # 1297
07BE         ?C0228:
                                           ; SOURCE LINE # 1299
07BE 900000      R     MOV     DPTR,#emg_counter_2+01H
07C1 E0                MOVX    A,@DPTR
07C2 04                INC     A
07C3 F0                MOVX    @DPTR,A
07C4 7006              JNZ     ?C0275
07C6 900000      R     MOV     DPTR,#emg_counter_2
07C9 E0                MOVX    A,@DPTR
07CA 04                INC     A
07CB F0                MOVX    @DPTR,A
07CC         ?C0275:
                                           ; SOURCE LINE # 1300
07CC C3                CLR     C
07CD 900000      E     MOV     DPTR,#ADC_buf+06H
07D0 E0                MOVX    A,@DPTR
07D1 6480              XRL     A,#080H
07D3 9480              SUBB    A,#080H
07D5 5004              JNC     ?C0229
                                           ; SOURCE LINE # 1301
07D7 E4                CLR     A
07D8 F0                MOVX    @DPTR,A
07D9 A3                INC     DPTR
07DA F0                MOVX    @DPTR,A
07DB         ?C0229:
                                           ; SOURCE LINE # 1302
07DB 900000      E     MOV     DPTR,#g_mem+04DH
07DE E0                MOVX    A,@DPTR
07DF F8                MOV     R0,A
07E0 A3                INC     DPTR
07E1 E0                MOVX    A,@DPTR
07E2 F9                MOV     R1,A
07E3 A3                INC     DPTR
07E4 E0                MOVX    A,@DPTR
07E5 FA                MOV     R2,A
07E6 A3                INC     DPTR
07E7 E0                MOVX    A,@DPTR
07E8 FB                MOV     R3,A
07E9 C000              PUSH    AR0
07EB C001              PUSH    AR1
07ED C002              PUSH    AR2
07EF C003              PUSH    AR3
07F1 900000      E     MOV     DPTR,#ADC_buf+06H
07F4 E0                MOVX    A,@DPTR
07F5 FE                MOV     R6,A
07F6 A3                INC     DPTR
07F7 E0                MOVX    A,@DPTR
07F8 FF                MOV     R7,A
07F9 EE                MOV     A,R6
07FA 33                RLC     A
07FB 95E0              SUBB    A,ACC
07FD FD                MOV     R5,A
07FE FC                MOV     R4,A
07FF 120000      E     LCALL   _filter_ch2
0802 D003              POP     AR3
0804 D002              POP     AR2
0806 D001              POP     AR1
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 116 

0808 D000              POP     AR0
080A EB                MOV     A,R3
080B 2F                ADD     A,R7
080C FF                MOV     R7,A
080D EA                MOV     A,R2
080E 3E                ADDC    A,R6
080F FE                MOV     R6,A
0810 E9                MOV     A,R1
0811 3D                ADDC    A,R5
0812 FD                MOV     R5,A
0813 E8                MOV     A,R0
0814 3C                ADDC    A,R4
0815 FC                MOV     R4,A
0816 900000      E     MOV     DPTR,#g_mem+04DH
0819 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1304
081C 300005            JNB     interrupt_flag,?C0230
                                           ; SOURCE LINE # 1305
081F C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1306
0821 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1307
0824         ?C0230:
                                           ; SOURCE LINE # 1309
0824 900000      R     MOV     DPTR,#emg_counter_2
0827 E0                MOVX    A,@DPTR
0828 6403              XRL     A,#03H
082A 7004              JNZ     ?C0276
082C A3                INC     DPTR
082D E0                MOVX    A,@DPTR
082E 64E8              XRL     A,#0E8H
0830         ?C0276:
0830 6003              JZ      $ + 5H
0832 020000      R     LJMP    ?C0216
                                           ; SOURCE LINE # 1310
0835 900000      E     MOV     DPTR,#g_mem+04DH
0838 E0                MOVX    A,@DPTR
0839 FC                MOV     R4,A
083A A3                INC     DPTR
083B E0                MOVX    A,@DPTR
083C FD                MOV     R5,A
083D A3                INC     DPTR
083E E0                MOVX    A,@DPTR
083F FE                MOV     R6,A
0840 A3                INC     DPTR
0841 E0                MOVX    A,@DPTR
0842 FF                MOV     R7,A
0843 E4                CLR     A
0844 7BE8              MOV     R3,#0E8H
0846 7A03              MOV     R2,#03H
0848 F9                MOV     R1,A
0849 F8                MOV     R0,A
084A 120000      E     LCALL   ?C?ULDIV
084D 900000      E     MOV     DPTR,#g_mem+04DH
0850 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1312
0853 E4                CLR     A
0854 FF                MOV     R7,A
0855 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1313
0858 E4                CLR     A
0859 FF                MOV     R7,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 117 

085A 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1315
085D E4                CLR     A
085E 900000      R     MOV     DPTR,#emg_counter_2
0861 F0                MOVX    @DPTR,A
0862 A3                INC     DPTR
0863 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1317
0864 300005            JNB     interrupt_flag,?C0232
                                           ; SOURCE LINE # 1318
0867 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1319
0869 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1320
086C         ?C0232:
                                           ; SOURCE LINE # 1322
086C 750005      R     MOV     emg_2_status,#05H
                                           ; SOURCE LINE # 1323
                                           ; SOURCE LINE # 1324
086F 020000      R     LJMP    ?C0216
                                           ; SOURCE LINE # 1326
0872         ?C0233:
                                           ; SOURCE LINE # 1327
0872 E500        R     MOV     A,emg_1_status
0874 707D              JNZ     ?C0216
                                           ; SOURCE LINE # 1328
0876 750002      R     MOV     emg_2_status,#02H
                                           ; SOURCE LINE # 1329
0879 8078              SJMP    ?C0216
                                           ; SOURCE LINE # 1331
087B         ?C0235:
                                           ; SOURCE LINE # 1332
087B 900000      R     MOV     DPTR,#emg_counter_2+01H
087E E0                MOVX    A,@DPTR
087F 04                INC     A
0880 F0                MOVX    @DPTR,A
0881 7006              JNZ     ?C0277
0883 900000      R     MOV     DPTR,#emg_counter_2
0886 E0                MOVX    A,@DPTR
0887 04                INC     A
0888 F0                MOVX    @DPTR,A
0889         ?C0277:
                                           ; SOURCE LINE # 1333
0889 900000      R     MOV     DPTR,#emg_counter_2
088C E0                MOVX    A,@DPTR
088D 6401              XRL     A,#01H
088F 7004              JNZ     ?C0278
0891 A3                INC     DPTR
0892 E0                MOVX    A,@DPTR
0893 64F4              XRL     A,#0F4H
0895         ?C0278:
0895 705C              JNZ     ?C0216
                                           ; SOURCE LINE # 1334
0897 900000      R     MOV     DPTR,#emg_counter_2
089A F0                MOVX    @DPTR,A
089B A3                INC     DPTR
089C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1336
089D 300005            JNB     interrupt_flag,?C0237
                                           ; SOURCE LINE # 1337
08A0 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1338
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 118 

08A2 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1339
08A5         ?C0237:
                                           ; SOURCE LINE # 1342
08A5 900000      E     MOV     DPTR,#c_mem+0FH
08A8 E0                MOVX    A,@DPTR
08A9 FF                MOV     R7,A
08AA 6402              XRL     A,#02H
08AC 600E              JZ      ?C0239
08AE EF                MOV     A,R7
08AF 6403              XRL     A,#03H
08B1 6009              JZ      ?C0239
08B3 EF                MOV     A,R7
08B4 6404              XRL     A,#04H
08B6 6004              JZ      ?C0239
08B8 EF                MOV     A,R7
08B9 B40534            CJNE    A,#05H,?C0238
08BC         ?C0239:
                                           ; SOURCE LINE # 1345
                                           ; SOURCE LINE # 1346
08BC 900000      E     MOV     DPTR,#g_meas
08BF E0                MOVX    A,@DPTR
08C0 FC                MOV     R4,A
08C1 A3                INC     DPTR
08C2 E0                MOVX    A,@DPTR
08C3 FD                MOV     R5,A
08C4 A3                INC     DPTR
08C5 E0                MOVX    A,@DPTR
08C6 FE                MOV     R6,A
08C7 A3                INC     DPTR
08C8 E0                MOVX    A,@DPTR
08C9 FF                MOV     R7,A
08CA 900000      E     MOV     DPTR,#g_ref
08CD 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1347
08D0 900000      E     MOV     DPTR,#g_meas+04H
08D3 E0                MOVX    A,@DPTR
08D4 FC                MOV     R4,A
08D5 A3                INC     DPTR
08D6 E0                MOVX    A,@DPTR
08D7 FD                MOV     R5,A
08D8 A3                INC     DPTR
08D9 E0                MOVX    A,@DPTR
08DA FE                MOV     R6,A
08DB A3                INC     DPTR
08DC E0                MOVX    A,@DPTR
08DD FF                MOV     R7,A
08DE 900000      E     MOV     DPTR,#g_ref+04H
08E1 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1348
08E4 900000      E     MOV     DPTR,#c_mem+0EH
08E7 E0                MOVX    A,@DPTR
08E8 FF                MOV     R7,A
08E9 900000      E     MOV     DPTR,#g_ref+018H
08EC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1349
08ED 120000      E     LCALL   _MOTOR_ON_OFF_Write
                                           ; SOURCE LINE # 1350
08F0         ?C0238:
                                           ; SOURCE LINE # 1352
08F0 E4                CLR     A
08F1 F500        R     MOV     emg_2_status,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 119 

                                           ; SOURCE LINE # 1353
                                           ; SOURCE LINE # 1354
                                           ; SOURCE LINE # 1356
                                           ; SOURCE LINE # 1357
                                           ; SOURCE LINE # 1358
08F3         ?C0216:
                                           ; SOURCE LINE # 1360
08F3 30006E            JNB     interrupt_flag,?C0242
                                           ; SOURCE LINE # 1361
08F6 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1362
08F8 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1363
                                           ; SOURCE LINE # 1364
                                           ; SOURCE LINE # 1365
08FB 8067              SJMP    ?C0242
08FD         ?C0156:
                                           ; SOURCE LINE # 1366
                                           ; SOURCE LINE # 1368
08FD 750001      R     MOV     emg_1_status,#01H
                                           ; SOURCE LINE # 1369
0900 750001      R     MOV     emg_2_status,#01H
                                           ; SOURCE LINE # 1371
0903 750001      R     MOV     UD_status,#01H
                                           ; SOURCE LINE # 1372
0906 750001      R     MOV     LR_status,#01H
                                           ; SOURCE LINE # 1374
0909 C200        E     CLR     tension_valid
                                           ; SOURCE LINE # 1377
090B 7F01              MOV     R7,#01H
090D 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1379
0910 E4                CLR     A
0911 FF                MOV     R7,A
0912 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1381
0915 300005            JNB     interrupt_flag,?C0243
                                           ; SOURCE LINE # 1382
0918 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1383
091A 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1384
091D         ?C0243:
                                           ; SOURCE LINE # 1386
091D 900000      E     MOV     DPTR,#c_mem+048H
0920 E0                MOVX    A,@DPTR
0921 6020              JZ      ?C0244
                                           ; SOURCE LINE # 1387
0923 900000      E     MOV     DPTR,#c_mem+0FH
0926 E0                MOVX    A,@DPTR
0927 FF                MOV     R7,A
0928 6402              XRL     A,#02H
092A 600E              JZ      ?C0246
092C EF                MOV     A,R7
092D 6403              XRL     A,#03H
092F 6009              JZ      ?C0246
0931 EF                MOV     A,R7
0932 6404              XRL     A,#04H
0934 6004              JZ      ?C0246
0936 EF                MOV     A,R7
0937 B40509            CJNE    A,#05H,?C0244
093A         ?C0246:
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 120 

                                           ; SOURCE LINE # 1390
                                           ; SOURCE LINE # 1391
093A E4                CLR     A
093B 900000      E     MOV     DPTR,#g_ref+018H
093E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1392
093F FF                MOV     R7,A
0940 120000      E     LCALL   _MOTOR_ON_OFF_Write
                                           ; SOURCE LINE # 1393
                                           ; SOURCE LINE # 1394
0943         ?C0244:
                                           ; SOURCE LINE # 1397
0943 E4                CLR     A
0944 FF                MOV     R7,A
0945 FE                MOV     R6,A
0946 FD                MOV     R5,A
0947 FC                MOV     R4,A
0948 900000      E     MOV     DPTR,#g_meas+0FH
094B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1398
094E E4                CLR     A
094F FF                MOV     R7,A
0950 FE                MOV     R6,A
0951 FD                MOV     R5,A
0952 FC                MOV     R4,A
0953 900000      E     MOV     DPTR,#g_meas+013H
0956 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1401
0959 E4                CLR     A
095A 900000      E     MOV     DPTR,#g_meas+02FH
095D F0                MOVX    @DPTR,A
095E A3                INC     DPTR
095F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1402
0960 A3                INC     DPTR
0961 F0                MOVX    @DPTR,A
0962 A3                INC     DPTR
0963 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1404
0964         ?C0242:
                                           ; SOURCE LINE # 1407
0964 900000      E     MOV     DPTR,#first_tension_valid
0967 E0                MOVX    A,@DPTR
0968 6003              JZ      $ + 5H
096A 020000      R     LJMP    ?C0247
096D 200003      E     JB      tension_valid,$ + 6H
0970 020000      R     LJMP    ?C0247
0973 E500        R     MOV     A,emg_1_status
0975 6003              JZ      $ + 5H
0977 020000      R     LJMP    ?C0247
097A E500        R     MOV     A,emg_2_status
097C 6003              JZ      $ + 5H
097E 020000      R     LJMP    ?C0247
                                           ; SOURCE LINE # 1408
0981 900000      E     MOV     DPTR,#dev_tension
0984 E0                MOVX    A,@DPTR
0985 FC                MOV     R4,A
0986 A3                INC     DPTR
0987 E0                MOVX    A,@DPTR
0988 FD                MOV     R5,A
0989 A3                INC     DPTR
098A E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 121 

098B FE                MOV     R6,A
098C A3                INC     DPTR
098D E0                MOVX    A,@DPTR
098E FF                MOV     R7,A
098F 120000      E     LCALL   _filter_voltage
0992 900000      E     MOV     DPTR,#dev_tension_f
0995 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1409
0998 900000      E     MOV     DPTR,#pow_tension
099B E0                MOVX    A,@DPTR
099C FC                MOV     R4,A
099D A3                INC     DPTR
099E E0                MOVX    A,@DPTR
099F FD                MOV     R5,A
09A0 A3                INC     DPTR
09A1 E0                MOVX    A,@DPTR
09A2 FE                MOV     R6,A
09A3 A3                INC     DPTR
09A4 E0                MOVX    A,@DPTR
09A5 FF                MOV     R7,A
09A6 EC                MOV     A,R4
09A7 120000      E     LCALL   ?C?FCASTL
09AA 7B1F              MOV     R3,#01FH
09AC 7A85              MOV     R2,#085H
09AE 796B              MOV     R1,#06BH
09B0 783F              MOV     R0,#03FH
09B2 120000      E     LCALL   ?C?FPMUL
09B5 C004              PUSH    AR4
09B7 C005              PUSH    AR5
09B9 C006              PUSH    AR6
09BB C007              PUSH    AR7
09BD 900000      E     MOV     DPTR,#dev_tension_f
09C0 E0                MOVX    A,@DPTR
09C1 FC                MOV     R4,A
09C2 A3                INC     DPTR
09C3 E0                MOVX    A,@DPTR
09C4 FD                MOV     R5,A
09C5 A3                INC     DPTR
09C6 E0                MOVX    A,@DPTR
09C7 FE                MOV     R6,A
09C8 A3                INC     DPTR
09C9 E0                MOVX    A,@DPTR
09CA FF                MOV     R7,A
09CB EC                MOV     A,R4
09CC 120000      E     LCALL   ?C?FCASTL
09CF A804              MOV     R0,AR4
09D1 A905              MOV     R1,AR5
09D3 AA06              MOV     R2,AR6
09D5 AB07              MOV     R3,AR7
09D7 D007              POP     AR7
09D9 D006              POP     AR6
09DB D005              POP     AR5
09DD D004              POP     AR4
09DF 120000      E     LCALL   ?C?FPCMP3
09E2 600E              JZ      ?C0248
09E4 400C              JC      ?C0248
                                           ; SOURCE LINE # 1411
09E6 7F01              MOV     R7,#01H
09E8 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1414
09EB E4                CLR     A
09EC FF                MOV     R7,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 122 

09ED 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1415
09F0 802B              SJMP    ?C0247
09F2         ?C0248:
                                           ; SOURCE LINE # 1416
                                           ; SOURCE LINE # 1418
09F2 E4                CLR     A
09F3 FF                MOV     R7,A
09F4 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1421
09F7 7F01              MOV     R7,#01H
09F9 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1424
09FC 900000      E     MOV     DPTR,#master_mode
09FF E0                MOVX    A,@DPTR
0A00 6012              JZ      ?C0250
                                           ; SOURCE LINE # 1425
0A02 120000      E     LCALL   deactivate_slaves
                                           ; SOURCE LINE # 1428
0A05 300005            JNB     interrupt_flag,?C0251
                                           ; SOURCE LINE # 1429
0A08 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1430
0A0A 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1431
0A0D         ?C0251:
                                           ; SOURCE LINE # 1433
0A0D E4                CLR     A
0A0E 900000      E     MOV     DPTR,#master_mode
0A11 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1434
0A12 8009              SJMP    ?C0247
0A14         ?C0250:
                                           ; SOURCE LINE # 1435
                                           ; SOURCE LINE # 1436
0A14 E4                CLR     A
0A15 900000      E     MOV     DPTR,#g_refNew+018H
0A18 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1437
0A19 FF                MOV     R7,A
0A1A 120000      E     LCALL   _MOTOR_ON_OFF_Write
                                           ; SOURCE LINE # 1438
                                           ; SOURCE LINE # 1439
                                           ; SOURCE LINE # 1440
0A1D         ?C0247:
                                           ; SOURCE LINE # 1442
0A1D 300005            JNB     interrupt_flag,?C0254
                                           ; SOURCE LINE # 1443
0A20 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1444
0A22 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1445
                                           ; SOURCE LINE # 1446
0A25         ?C0254:
0A25 22                RET     
             ; FUNCTION analog_read_end (END)

             ; FUNCTION pwm_limit_search (BEGIN)
                                           ; SOURCE LINE # 1452
                                           ; SOURCE LINE # 1456
0000 E4                CLR     A
0001 7F9C              MOV     R7,#09CH
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 123 

0003 7E63              MOV     R6,#063H
0005 FD                MOV     R5,A
0006 FC                MOV     R4,A
0007 900000      E     MOV     DPTR,#dev_tension
000A E0                MOVX    A,@DPTR
000B F8                MOV     R0,A
000C A3                INC     DPTR
000D E0                MOVX    A,@DPTR
000E F9                MOV     R1,A
000F A3                INC     DPTR
0010 E0                MOVX    A,@DPTR
0011 FA                MOV     R2,A
0012 A3                INC     DPTR
0013 E0                MOVX    A,@DPTR
0014 FB                MOV     R3,A
0015 D3                SETB    C
0016 120000      E     LCALL   ?C?SLCMP
0019 4006              JC      ?C0255
                                           ; SOURCE LINE # 1457
001B E4                CLR     A
001C 900000      E     MOV     DPTR,#dev_pwm_limit
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1458
0020 22                RET     
0021         ?C0255:
0021 E4                CLR     A
0022 7FEC              MOV     R7,#0ECH
0024 7E2C              MOV     R6,#02CH
0026 FD                MOV     R5,A
0027 FC                MOV     R4,A
0028 900000      E     MOV     DPTR,#dev_tension
002B E0                MOVX    A,@DPTR
002C F8                MOV     R0,A
002D A3                INC     DPTR
002E E0                MOVX    A,@DPTR
002F F9                MOV     R1,A
0030 A3                INC     DPTR
0031 E0                MOVX    A,@DPTR
0032 FA                MOV     R2,A
0033 A3                INC     DPTR
0034 E0                MOVX    A,@DPTR
0035 FB                MOV     R3,A
0036 C3                CLR     C
0037 120000      E     LCALL   ?C?SLCMP
003A 5007              JNC     ?C0257
                                           ; SOURCE LINE # 1459
003C 900000      E     MOV     DPTR,#dev_pwm_limit
003F 7464              MOV     A,#064H
0041 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1460
0042 22                RET     
0043         ?C0257:
                                           ; SOURCE LINE # 1461
0043 900000      E     MOV     DPTR,#dev_tension
0046 E0                MOVX    A,@DPTR
0047 FC                MOV     R4,A
0048 A3                INC     DPTR
0049 E0                MOVX    A,@DPTR
004A FD                MOV     R5,A
004B A3                INC     DPTR
004C E0                MOVX    A,@DPTR
004D FE                MOV     R6,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         04/20/2018 10:00:44 PAGE 124 

004E A3                INC     DPTR
004F E0                MOVX    A,@DPTR
0050 2414              ADD     A,#014H
0052 FF                MOV     R7,A
0053 EE                MOV     A,R6
0054 34D3              ADDC    A,#0D3H
0056 FE                MOV     R6,A
0057 ED                MOV     A,R5
0058 34FF              ADDC    A,#0FFH
005A FD                MOV     R5,A
005B EC                MOV     A,R4
005C 34FF              ADDC    A,#0FFH
005E FC                MOV     R4,A
005F 7809              MOV     R0,#09H
0061 120000      E     LCALL   ?C?SLSHR
0064 8F00        R     MOV     index,R7
                                           ; SOURCE LINE # 1462
0066 7400        R     MOV     A,#LOW pwm_preload_values
0068 2F                ADD     A,R7
0069 F582              MOV     DPL,A
006B E4                CLR     A
006C 3400        R     ADDC    A,#HIGH pwm_preload_values
006E F583              MOV     DPH,A
0070 E0                MOVX    A,@DPTR
0071 900000      E     MOV     DPTR,#dev_pwm_limit
0074 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1463
                                           ; SOURCE LINE # 1464
0075         ?C0259:
0075 22                RET     
             ; FUNCTION pwm_limit_search (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   8160    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    265      20
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22      44
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
